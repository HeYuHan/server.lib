// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ClientData.proto

#ifndef PROTOBUF_ClientData_2eproto__INCLUDED
#define PROTOBUF_ClientData_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_util.h>
// @@protoc_insertion_point(includes)

namespace Proto {
namespace Message {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_ClientData_2eproto();
void protobuf_AssignDesc_ClientData_2eproto();
void protobuf_ShutdownFile_ClientData_2eproto();

class PlayerCreateRequest;
class PlayerCreateResponse;
class PlayerLoginRequest;
class PlayerLoginResponse;
class PlayerLogoutRequest;
class PlayerLogoutResponse;
class ProtoPlayer;
class ProtoPlayerGarage;
class ProtoPlayerInfo;
class ProtoPlayerItem;
class UserActivateRequest;
class UserActivateResponse;
class UserLoginRequest;
class UserLoginResponse;

enum ResponseCode {
  SUCCESS = 0,
  UNKNOWN = -1,
  INVALID_PROTOCOL = -2,
  INVALID_ARG = -3,
  TIMEOUT = -4,
  SERVER_BUSY = -5,
  SERVER_ERROR = -6,
  MISSING_LOGIN = -7,
  REPEATED_LOGIN = -8,
  DATA_READ_ERROR = -9,
  DISCONNECT = -10,
  COMMON_ILLEGAL_ARGUMENT = 100,
  COMMON_UNSUPPORTED_ITEM_TYPE = 101,
  COMMON_IS_CHEATING = 102,
  COMMON_FAIL_OPERATION = 103,
  COMMON_MAX_LEVEL = 104,
  STORAGE_FULL = 150,
  ITEM_NOT_EXIST = 151,
  ITEM_NOT_ENOUGH = 152,
  ITEM_COMPOUND_ERROR = 153,
  ITEM_SELL_ERROR = 154,
  ITEM_EXIST = 155,
  ITEM_TYPE_ERROR = 156,
  ITEM_LEVEL_FULL = 157,
  ITEM_STAR_NOT_ENOUGH = 158,
  ITEM_LEVEL_ERROR = 159,
  ITEM_RANK_ERROR = 160,
  ITEM_RANK_FULL = 161,
  STORAGE_DEFAULT_ITEM = 162,
  STORAGE_EQUIPPED_ITEM = 163,
  ITEM_MOP_UP_NOT_ENOUGH = 164,
  STORAGE_EXPAND_COUNT_MAX = 165,
  USER_NOT_EXIST = 200,
  PLAYER_NOT_EXIST = 201,
  PLAYER_NAME_WITH_ILLEGAL_CHARACTER = 202,
  PLAYER_NAME_EXIST = 203,
  PLAYER_NAME_EMPTY = 204,
  PLAYER_ENEGY_NOT_ENOUGH = 205,
  PLAYER_RESET_ENEGY_COUNT_NOT_ENOUGH = 206,
  PLAYER_VIP_LEVEL_SCANTY = 208,
  USER_NAME_EMPTY = 209,
  PLAYER_EXCEED_MAX_NUM = 210,
  PLAYER_NAME_MIN_NUM = 211,
  PLAYER_NAME_TO_LONG = 212,
  PLAYER_BANNED = 213,
  PLAYER_LEVEL_NOT_ENOUGH = 214,
  PLAYER_IS_ONLINE = 215,
  PLAYER_IN_OTHER_GUILD = 216,
  PLAYER_STAMINA_NOT_ENOUGH = 217,
  PLAYER_STAMINA_CAN_NOT_BUY = 219,
  CURRENCY_GOLD_NOT_ENOUGH = 250,
  CURRENCY_DIMOND_NOT_ENOUGH = 251,
  CURRENCY_FAILD = 255,
  CURRENCY_OVERFLOW = 256,
  CURRENCY_UNSUPPORTED = 260,
  CHECKIN_TODAY_EXIST = 650,
  QUEST_NOT_COMPLETED = 700,
  QUEST_EXPIRED = 701,
  FRIEND_FULL = 850,
  FRIEND_APPLY_EXIST = 851,
  FRIEND_EXIST = 852,
  FRIEND_APPLY_ERROR = 853,
  GIFT_EXPIRE = 900,
  GIFT_EXIST = 901,
  GIFT_RECHARGE_NOT_ENOUGH = 902,
  INSTANCE_STRATEGY_USE_COUNT_MAX = 1100,
  BATTLE_MATCH_EXIST = 1200,
  ResponseCode_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ResponseCode_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ResponseCode_IsValid(int value);
const ResponseCode ResponseCode_MIN = DISCONNECT;
const ResponseCode ResponseCode_MAX = BATTLE_MATCH_EXIST;
const int ResponseCode_ARRAYSIZE = ResponseCode_MAX + 1;

enum AccountType {
  NONE = 0,
  NOR = 1,
  DEV = 2,
  GM = 3,
  AccountType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AccountType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AccountType_IsValid(int value);
const AccountType AccountType_MIN = NONE;
const AccountType AccountType_MAX = GM;
const int AccountType_ARRAYSIZE = AccountType_MAX + 1;

// ===================================================================

class UserLoginRequest : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:Proto.Message.UserLoginRequest) */ {
 public:
  UserLoginRequest();
  virtual ~UserLoginRequest();

  UserLoginRequest(const UserLoginRequest& from);

  inline UserLoginRequest& operator=(const UserLoginRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const UserLoginRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const UserLoginRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(UserLoginRequest* other);

  // implements Message ----------------------------------------------

  inline UserLoginRequest* New() const { return New(NULL); }

  UserLoginRequest* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const UserLoginRequest& from);
  void MergeFrom(const UserLoginRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UserLoginRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string userName = 1;
  void clear_username();
  static const int kUserNameFieldNumber = 1;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // optional string userPwd = 2;
  void clear_userpwd();
  static const int kUserPwdFieldNumber = 2;
  const ::std::string& userpwd() const;
  void set_userpwd(const ::std::string& value);
  void set_userpwd(const char* value);
  void set_userpwd(const char* value, size_t size);
  ::std::string* mutable_userpwd();
  ::std::string* release_userpwd();
  void set_allocated_userpwd(::std::string* userpwd);

  // optional string sdk_uid = 3;
  void clear_sdk_uid();
  static const int kSdkUidFieldNumber = 3;
  const ::std::string& sdk_uid() const;
  void set_sdk_uid(const ::std::string& value);
  void set_sdk_uid(const char* value);
  void set_sdk_uid(const char* value, size_t size);
  ::std::string* mutable_sdk_uid();
  ::std::string* release_sdk_uid();
  void set_allocated_sdk_uid(::std::string* sdk_uid);

  // optional string sdk_token = 4;
  void clear_sdk_token();
  static const int kSdkTokenFieldNumber = 4;
  const ::std::string& sdk_token() const;
  void set_sdk_token(const ::std::string& value);
  void set_sdk_token(const char* value);
  void set_sdk_token(const char* value, size_t size);
  ::std::string* mutable_sdk_token();
  ::std::string* release_sdk_token();
  void set_allocated_sdk_token(::std::string* sdk_token);

  // optional string ip = 5;
  void clear_ip();
  static const int kIpFieldNumber = 5;
  const ::std::string& ip() const;
  void set_ip(const ::std::string& value);
  void set_ip(const char* value);
  void set_ip(const char* value, size_t size);
  ::std::string* mutable_ip();
  ::std::string* release_ip();
  void set_allocated_ip(::std::string* ip);

  // @@protoc_insertion_point(class_scope:Proto.Message.UserLoginRequest)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::google::protobuf::internal::ArenaStringPtr userpwd_;
  ::google::protobuf::internal::ArenaStringPtr sdk_uid_;
  ::google::protobuf::internal::ArenaStringPtr sdk_token_;
  ::google::protobuf::internal::ArenaStringPtr ip_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_ClientData_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_ClientData_2eproto();
  #endif
  friend void protobuf_AssignDesc_ClientData_2eproto();
  friend void protobuf_ShutdownFile_ClientData_2eproto();

  void InitAsDefaultInstance();
  static UserLoginRequest* default_instance_;
};
// -------------------------------------------------------------------

class UserLoginResponse : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:Proto.Message.UserLoginResponse) */ {
 public:
  UserLoginResponse();
  virtual ~UserLoginResponse();

  UserLoginResponse(const UserLoginResponse& from);

  inline UserLoginResponse& operator=(const UserLoginResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const UserLoginResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const UserLoginResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(UserLoginResponse* other);

  // implements Message ----------------------------------------------

  inline UserLoginResponse* New() const { return New(NULL); }

  UserLoginResponse* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const UserLoginResponse& from);
  void MergeFrom(const UserLoginResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UserLoginResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint64 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int64 id() const;
  void set_id(::google::protobuf::int64 value);

  // optional string userName = 2;
  void clear_username();
  static const int kUserNameFieldNumber = 2;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // repeated .Proto.Message.ProtoPlayer players = 3;
  int players_size() const;
  void clear_players();
  static const int kPlayersFieldNumber = 3;
  const ::Proto::Message::ProtoPlayer& players(int index) const;
  ::Proto::Message::ProtoPlayer* mutable_players(int index);
  ::Proto::Message::ProtoPlayer* add_players();
  ::google::protobuf::RepeatedPtrField< ::Proto::Message::ProtoPlayer >*
      mutable_players();
  const ::google::protobuf::RepeatedPtrField< ::Proto::Message::ProtoPlayer >&
      players() const;

  // optional string sdkUid = 4;
  void clear_sdkuid();
  static const int kSdkUidFieldNumber = 4;
  const ::std::string& sdkuid() const;
  void set_sdkuid(const ::std::string& value);
  void set_sdkuid(const char* value);
  void set_sdkuid(const char* value, size_t size);
  ::std::string* mutable_sdkuid();
  ::std::string* release_sdkuid();
  void set_allocated_sdkuid(::std::string* sdkuid);

  // optional string sdkToken = 5;
  void clear_sdktoken();
  static const int kSdkTokenFieldNumber = 5;
  const ::std::string& sdktoken() const;
  void set_sdktoken(const ::std::string& value);
  void set_sdktoken(const char* value);
  void set_sdktoken(const char* value, size_t size);
  ::std::string* mutable_sdktoken();
  ::std::string* release_sdktoken();
  void set_allocated_sdktoken(::std::string* sdktoken);

  // optional bool isActivate = 6;
  void clear_isactivate();
  static const int kIsActivateFieldNumber = 6;
  bool isactivate() const;
  void set_isactivate(bool value);

  // @@protoc_insertion_point(class_scope:Proto.Message.UserLoginResponse)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::google::protobuf::int64 id_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::google::protobuf::RepeatedPtrField< ::Proto::Message::ProtoPlayer > players_;
  ::google::protobuf::internal::ArenaStringPtr sdkuid_;
  ::google::protobuf::internal::ArenaStringPtr sdktoken_;
  bool isactivate_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_ClientData_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_ClientData_2eproto();
  #endif
  friend void protobuf_AssignDesc_ClientData_2eproto();
  friend void protobuf_ShutdownFile_ClientData_2eproto();

  void InitAsDefaultInstance();
  static UserLoginResponse* default_instance_;
};
// -------------------------------------------------------------------

class UserActivateRequest : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:Proto.Message.UserActivateRequest) */ {
 public:
  UserActivateRequest();
  virtual ~UserActivateRequest();

  UserActivateRequest(const UserActivateRequest& from);

  inline UserActivateRequest& operator=(const UserActivateRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const UserActivateRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const UserActivateRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(UserActivateRequest* other);

  // implements Message ----------------------------------------------

  inline UserActivateRequest* New() const { return New(NULL); }

  UserActivateRequest* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const UserActivateRequest& from);
  void MergeFrom(const UserActivateRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UserActivateRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint64 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int64 id() const;
  void set_id(::google::protobuf::int64 value);

  // optional string userName = 2;
  void clear_username();
  static const int kUserNameFieldNumber = 2;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // optional string code = 3;
  void clear_code();
  static const int kCodeFieldNumber = 3;
  const ::std::string& code() const;
  void set_code(const ::std::string& value);
  void set_code(const char* value);
  void set_code(const char* value, size_t size);
  ::std::string* mutable_code();
  ::std::string* release_code();
  void set_allocated_code(::std::string* code);

  // @@protoc_insertion_point(class_scope:Proto.Message.UserActivateRequest)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::google::protobuf::int64 id_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::google::protobuf::internal::ArenaStringPtr code_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_ClientData_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_ClientData_2eproto();
  #endif
  friend void protobuf_AssignDesc_ClientData_2eproto();
  friend void protobuf_ShutdownFile_ClientData_2eproto();

  void InitAsDefaultInstance();
  static UserActivateRequest* default_instance_;
};
// -------------------------------------------------------------------

class UserActivateResponse : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:Proto.Message.UserActivateResponse) */ {
 public:
  UserActivateResponse();
  virtual ~UserActivateResponse();

  UserActivateResponse(const UserActivateResponse& from);

  inline UserActivateResponse& operator=(const UserActivateResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const UserActivateResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const UserActivateResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(UserActivateResponse* other);

  // implements Message ----------------------------------------------

  inline UserActivateResponse* New() const { return New(NULL); }

  UserActivateResponse* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const UserActivateResponse& from);
  void MergeFrom(const UserActivateResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UserActivateResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint64 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int64 id() const;
  void set_id(::google::protobuf::int64 value);

  // optional string userName = 2;
  void clear_username();
  static const int kUserNameFieldNumber = 2;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // repeated .Proto.Message.ProtoPlayer players = 3;
  int players_size() const;
  void clear_players();
  static const int kPlayersFieldNumber = 3;
  const ::Proto::Message::ProtoPlayer& players(int index) const;
  ::Proto::Message::ProtoPlayer* mutable_players(int index);
  ::Proto::Message::ProtoPlayer* add_players();
  ::google::protobuf::RepeatedPtrField< ::Proto::Message::ProtoPlayer >*
      mutable_players();
  const ::google::protobuf::RepeatedPtrField< ::Proto::Message::ProtoPlayer >&
      players() const;

  // @@protoc_insertion_point(class_scope:Proto.Message.UserActivateResponse)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::google::protobuf::int64 id_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::google::protobuf::RepeatedPtrField< ::Proto::Message::ProtoPlayer > players_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_ClientData_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_ClientData_2eproto();
  #endif
  friend void protobuf_AssignDesc_ClientData_2eproto();
  friend void protobuf_ShutdownFile_ClientData_2eproto();

  void InitAsDefaultInstance();
  static UserActivateResponse* default_instance_;
};
// -------------------------------------------------------------------

class PlayerLoginRequest : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:Proto.Message.PlayerLoginRequest) */ {
 public:
  PlayerLoginRequest();
  virtual ~PlayerLoginRequest();

  PlayerLoginRequest(const PlayerLoginRequest& from);

  inline PlayerLoginRequest& operator=(const PlayerLoginRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const PlayerLoginRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const PlayerLoginRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(PlayerLoginRequest* other);

  // implements Message ----------------------------------------------

  inline PlayerLoginRequest* New() const { return New(NULL); }

  PlayerLoginRequest* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const PlayerLoginRequest& from);
  void MergeFrom(const PlayerLoginRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PlayerLoginRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint64 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int64 id() const;
  void set_id(::google::protobuf::int64 value);

  // optional string clientVersion = 2;
  void clear_clientversion();
  static const int kClientVersionFieldNumber = 2;
  const ::std::string& clientversion() const;
  void set_clientversion(const ::std::string& value);
  void set_clientversion(const char* value);
  void set_clientversion(const char* value, size_t size);
  ::std::string* mutable_clientversion();
  ::std::string* release_clientversion();
  void set_allocated_clientversion(::std::string* clientversion);

  // optional string appStore = 3;
  void clear_appstore();
  static const int kAppStoreFieldNumber = 3;
  const ::std::string& appstore() const;
  void set_appstore(const ::std::string& value);
  void set_appstore(const char* value);
  void set_appstore(const char* value, size_t size);
  ::std::string* mutable_appstore();
  ::std::string* release_appstore();
  void set_allocated_appstore(::std::string* appstore);

  // optional string device = 4;
  void clear_device();
  static const int kDeviceFieldNumber = 4;
  const ::std::string& device() const;
  void set_device(const ::std::string& value);
  void set_device(const char* value);
  void set_device(const char* value, size_t size);
  ::std::string* mutable_device();
  ::std::string* release_device();
  void set_allocated_device(::std::string* device);

  // @@protoc_insertion_point(class_scope:Proto.Message.PlayerLoginRequest)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::google::protobuf::int64 id_;
  ::google::protobuf::internal::ArenaStringPtr clientversion_;
  ::google::protobuf::internal::ArenaStringPtr appstore_;
  ::google::protobuf::internal::ArenaStringPtr device_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_ClientData_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_ClientData_2eproto();
  #endif
  friend void protobuf_AssignDesc_ClientData_2eproto();
  friend void protobuf_ShutdownFile_ClientData_2eproto();

  void InitAsDefaultInstance();
  static PlayerLoginRequest* default_instance_;
};
// -------------------------------------------------------------------

class PlayerLoginResponse : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:Proto.Message.PlayerLoginResponse) */ {
 public:
  PlayerLoginResponse();
  virtual ~PlayerLoginResponse();

  PlayerLoginResponse(const PlayerLoginResponse& from);

  inline PlayerLoginResponse& operator=(const PlayerLoginResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const PlayerLoginResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const PlayerLoginResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(PlayerLoginResponse* other);

  // implements Message ----------------------------------------------

  inline PlayerLoginResponse* New() const { return New(NULL); }

  PlayerLoginResponse* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const PlayerLoginResponse& from);
  void MergeFrom(const PlayerLoginResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PlayerLoginResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Proto.Message.ProtoPlayerInfo playerInfo = 1;
  bool has_playerinfo() const;
  void clear_playerinfo();
  static const int kPlayerInfoFieldNumber = 1;
  const ::Proto::Message::ProtoPlayerInfo& playerinfo() const;
  ::Proto::Message::ProtoPlayerInfo* mutable_playerinfo();
  ::Proto::Message::ProtoPlayerInfo* release_playerinfo();
  void set_allocated_playerinfo(::Proto::Message::ProtoPlayerInfo* playerinfo);

  // @@protoc_insertion_point(class_scope:Proto.Message.PlayerLoginResponse)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::Proto::Message::ProtoPlayerInfo* playerinfo_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_ClientData_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_ClientData_2eproto();
  #endif
  friend void protobuf_AssignDesc_ClientData_2eproto();
  friend void protobuf_ShutdownFile_ClientData_2eproto();

  void InitAsDefaultInstance();
  static PlayerLoginResponse* default_instance_;
};
// -------------------------------------------------------------------

class PlayerLogoutRequest : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:Proto.Message.PlayerLogoutRequest) */ {
 public:
  PlayerLogoutRequest();
  virtual ~PlayerLogoutRequest();

  PlayerLogoutRequest(const PlayerLogoutRequest& from);

  inline PlayerLogoutRequest& operator=(const PlayerLogoutRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const PlayerLogoutRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const PlayerLogoutRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(PlayerLogoutRequest* other);

  // implements Message ----------------------------------------------

  inline PlayerLogoutRequest* New() const { return New(NULL); }

  PlayerLogoutRequest* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const PlayerLogoutRequest& from);
  void MergeFrom(const PlayerLogoutRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PlayerLogoutRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint64 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int64 id() const;
  void set_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:Proto.Message.PlayerLogoutRequest)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::google::protobuf::int64 id_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_ClientData_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_ClientData_2eproto();
  #endif
  friend void protobuf_AssignDesc_ClientData_2eproto();
  friend void protobuf_ShutdownFile_ClientData_2eproto();

  void InitAsDefaultInstance();
  static PlayerLogoutRequest* default_instance_;
};
// -------------------------------------------------------------------

class PlayerLogoutResponse : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:Proto.Message.PlayerLogoutResponse) */ {
 public:
  PlayerLogoutResponse();
  virtual ~PlayerLogoutResponse();

  PlayerLogoutResponse(const PlayerLogoutResponse& from);

  inline PlayerLogoutResponse& operator=(const PlayerLogoutResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const PlayerLogoutResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const PlayerLogoutResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(PlayerLogoutResponse* other);

  // implements Message ----------------------------------------------

  inline PlayerLogoutResponse* New() const { return New(NULL); }

  PlayerLogoutResponse* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const PlayerLogoutResponse& from);
  void MergeFrom(const PlayerLogoutResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PlayerLogoutResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:Proto.Message.PlayerLogoutResponse)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_ClientData_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_ClientData_2eproto();
  #endif
  friend void protobuf_AssignDesc_ClientData_2eproto();
  friend void protobuf_ShutdownFile_ClientData_2eproto();

  void InitAsDefaultInstance();
  static PlayerLogoutResponse* default_instance_;
};
// -------------------------------------------------------------------

class PlayerCreateRequest : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:Proto.Message.PlayerCreateRequest) */ {
 public:
  PlayerCreateRequest();
  virtual ~PlayerCreateRequest();

  PlayerCreateRequest(const PlayerCreateRequest& from);

  inline PlayerCreateRequest& operator=(const PlayerCreateRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const PlayerCreateRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const PlayerCreateRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(PlayerCreateRequest* other);

  // implements Message ----------------------------------------------

  inline PlayerCreateRequest* New() const { return New(NULL); }

  PlayerCreateRequest* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const PlayerCreateRequest& from);
  void MergeFrom(const PlayerCreateRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PlayerCreateRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint64 userId = 1;
  void clear_userid();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::int64 userid() const;
  void set_userid(::google::protobuf::int64 value);

  // optional string name = 3;
  void clear_name();
  static const int kNameFieldNumber = 3;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional uint32 sysCharacterId = 4;
  void clear_syscharacterid();
  static const int kSysCharacterIdFieldNumber = 4;
  ::google::protobuf::uint32 syscharacterid() const;
  void set_syscharacterid(::google::protobuf::uint32 value);

  // optional int32 zoneId = 5;
  void clear_zoneid();
  static const int kZoneIdFieldNumber = 5;
  ::google::protobuf::int32 zoneid() const;
  void set_zoneid(::google::protobuf::int32 value);

  // optional string clientVersion = 6;
  void clear_clientversion();
  static const int kClientVersionFieldNumber = 6;
  const ::std::string& clientversion() const;
  void set_clientversion(const ::std::string& value);
  void set_clientversion(const char* value);
  void set_clientversion(const char* value, size_t size);
  ::std::string* mutable_clientversion();
  ::std::string* release_clientversion();
  void set_allocated_clientversion(::std::string* clientversion);

  // optional string appStore = 7;
  void clear_appstore();
  static const int kAppStoreFieldNumber = 7;
  const ::std::string& appstore() const;
  void set_appstore(const ::std::string& value);
  void set_appstore(const char* value);
  void set_appstore(const char* value, size_t size);
  ::std::string* mutable_appstore();
  ::std::string* release_appstore();
  void set_allocated_appstore(::std::string* appstore);

  // optional string device = 8;
  void clear_device();
  static const int kDeviceFieldNumber = 8;
  const ::std::string& device() const;
  void set_device(const ::std::string& value);
  void set_device(const char* value);
  void set_device(const char* value, size_t size);
  ::std::string* mutable_device();
  ::std::string* release_device();
  void set_allocated_device(::std::string* device);

  // @@protoc_insertion_point(class_scope:Proto.Message.PlayerCreateRequest)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::google::protobuf::int64 userid_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint32 syscharacterid_;
  ::google::protobuf::int32 zoneid_;
  ::google::protobuf::internal::ArenaStringPtr clientversion_;
  ::google::protobuf::internal::ArenaStringPtr appstore_;
  ::google::protobuf::internal::ArenaStringPtr device_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_ClientData_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_ClientData_2eproto();
  #endif
  friend void protobuf_AssignDesc_ClientData_2eproto();
  friend void protobuf_ShutdownFile_ClientData_2eproto();

  void InitAsDefaultInstance();
  static PlayerCreateRequest* default_instance_;
};
// -------------------------------------------------------------------

class PlayerCreateResponse : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:Proto.Message.PlayerCreateResponse) */ {
 public:
  PlayerCreateResponse();
  virtual ~PlayerCreateResponse();

  PlayerCreateResponse(const PlayerCreateResponse& from);

  inline PlayerCreateResponse& operator=(const PlayerCreateResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const PlayerCreateResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const PlayerCreateResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(PlayerCreateResponse* other);

  // implements Message ----------------------------------------------

  inline PlayerCreateResponse* New() const { return New(NULL); }

  PlayerCreateResponse* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const PlayerCreateResponse& from);
  void MergeFrom(const PlayerCreateResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PlayerCreateResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Proto.Message.ProtoPlayerInfo playerInfo = 1;
  bool has_playerinfo() const;
  void clear_playerinfo();
  static const int kPlayerInfoFieldNumber = 1;
  const ::Proto::Message::ProtoPlayerInfo& playerinfo() const;
  ::Proto::Message::ProtoPlayerInfo* mutable_playerinfo();
  ::Proto::Message::ProtoPlayerInfo* release_playerinfo();
  void set_allocated_playerinfo(::Proto::Message::ProtoPlayerInfo* playerinfo);

  // @@protoc_insertion_point(class_scope:Proto.Message.PlayerCreateResponse)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::Proto::Message::ProtoPlayerInfo* playerinfo_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_ClientData_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_ClientData_2eproto();
  #endif
  friend void protobuf_AssignDesc_ClientData_2eproto();
  friend void protobuf_ShutdownFile_ClientData_2eproto();

  void InitAsDefaultInstance();
  static PlayerCreateResponse* default_instance_;
};
// -------------------------------------------------------------------

class ProtoPlayer : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:Proto.Message.ProtoPlayer) */ {
 public:
  ProtoPlayer();
  virtual ~ProtoPlayer();

  ProtoPlayer(const ProtoPlayer& from);

  inline ProtoPlayer& operator=(const ProtoPlayer& from) {
    CopyFrom(from);
    return *this;
  }

  static const ProtoPlayer& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const ProtoPlayer* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(ProtoPlayer* other);

  // implements Message ----------------------------------------------

  inline ProtoPlayer* New() const { return New(NULL); }

  ProtoPlayer* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const ProtoPlayer& from);
  void MergeFrom(const ProtoPlayer& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ProtoPlayer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint64 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int64 id() const;
  void set_id(::google::protobuf::int64 value);

  // optional string name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional bool isBanned = 3;
  void clear_isbanned();
  static const int kIsBannedFieldNumber = 3;
  bool isbanned() const;
  void set_isbanned(bool value);

  // optional string bannedStartTime = 4;
  void clear_bannedstarttime();
  static const int kBannedStartTimeFieldNumber = 4;
  const ::std::string& bannedstarttime() const;
  void set_bannedstarttime(const ::std::string& value);
  void set_bannedstarttime(const char* value);
  void set_bannedstarttime(const char* value, size_t size);
  ::std::string* mutable_bannedstarttime();
  ::std::string* release_bannedstarttime();
  void set_allocated_bannedstarttime(::std::string* bannedstarttime);

  // optional string bannedEndTime = 5;
  void clear_bannedendtime();
  static const int kBannedEndTimeFieldNumber = 5;
  const ::std::string& bannedendtime() const;
  void set_bannedendtime(const ::std::string& value);
  void set_bannedendtime(const char* value);
  void set_bannedendtime(const char* value, size_t size);
  ::std::string* mutable_bannedendtime();
  ::std::string* release_bannedendtime();
  void set_allocated_bannedendtime(::std::string* bannedendtime);

  // optional string bannedReason = 6;
  void clear_bannedreason();
  static const int kBannedReasonFieldNumber = 6;
  const ::std::string& bannedreason() const;
  void set_bannedreason(const ::std::string& value);
  void set_bannedreason(const char* value);
  void set_bannedreason(const char* value, size_t size);
  ::std::string* mutable_bannedreason();
  ::std::string* release_bannedreason();
  void set_allocated_bannedreason(::std::string* bannedreason);

  // @@protoc_insertion_point(class_scope:Proto.Message.ProtoPlayer)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::google::protobuf::int64 id_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr bannedstarttime_;
  ::google::protobuf::internal::ArenaStringPtr bannedendtime_;
  ::google::protobuf::internal::ArenaStringPtr bannedreason_;
  bool isbanned_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_ClientData_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_ClientData_2eproto();
  #endif
  friend void protobuf_AssignDesc_ClientData_2eproto();
  friend void protobuf_ShutdownFile_ClientData_2eproto();

  void InitAsDefaultInstance();
  static ProtoPlayer* default_instance_;
};
// -------------------------------------------------------------------

class ProtoPlayerGarage : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:Proto.Message.ProtoPlayerGarage) */ {
 public:
  ProtoPlayerGarage();
  virtual ~ProtoPlayerGarage();

  ProtoPlayerGarage(const ProtoPlayerGarage& from);

  inline ProtoPlayerGarage& operator=(const ProtoPlayerGarage& from) {
    CopyFrom(from);
    return *this;
  }

  static const ProtoPlayerGarage& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const ProtoPlayerGarage* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(ProtoPlayerGarage* other);

  // implements Message ----------------------------------------------

  inline ProtoPlayerGarage* New() const { return New(NULL); }

  ProtoPlayerGarage* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const ProtoPlayerGarage& from);
  void MergeFrom(const ProtoPlayerGarage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ProtoPlayerGarage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint64 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int64 id() const;
  void set_id(::google::protobuf::int64 value);

  // optional string name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional string garageInfo = 3;
  void clear_garageinfo();
  static const int kGarageInfoFieldNumber = 3;
  const ::std::string& garageinfo() const;
  void set_garageinfo(const ::std::string& value);
  void set_garageinfo(const char* value);
  void set_garageinfo(const char* value, size_t size);
  ::std::string* mutable_garageinfo();
  ::std::string* release_garageinfo();
  void set_allocated_garageinfo(::std::string* garageinfo);

  // @@protoc_insertion_point(class_scope:Proto.Message.ProtoPlayerGarage)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::google::protobuf::int64 id_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr garageinfo_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_ClientData_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_ClientData_2eproto();
  #endif
  friend void protobuf_AssignDesc_ClientData_2eproto();
  friend void protobuf_ShutdownFile_ClientData_2eproto();

  void InitAsDefaultInstance();
  static ProtoPlayerGarage* default_instance_;
};
// -------------------------------------------------------------------

class ProtoPlayerItem : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:Proto.Message.ProtoPlayerItem) */ {
 public:
  ProtoPlayerItem();
  virtual ~ProtoPlayerItem();

  ProtoPlayerItem(const ProtoPlayerItem& from);

  inline ProtoPlayerItem& operator=(const ProtoPlayerItem& from) {
    CopyFrom(from);
    return *this;
  }

  static const ProtoPlayerItem& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const ProtoPlayerItem* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(ProtoPlayerItem* other);

  // implements Message ----------------------------------------------

  inline ProtoPlayerItem* New() const { return New(NULL); }

  ProtoPlayerItem* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const ProtoPlayerItem& from);
  void MergeFrom(const ProtoPlayerItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ProtoPlayerItem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint64 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int64 id() const;
  void set_id(::google::protobuf::int64 value);

  // optional uint32 sysItemId = 2;
  void clear_sysitemid();
  static const int kSysItemIdFieldNumber = 2;
  ::google::protobuf::uint32 sysitemid() const;
  void set_sysitemid(::google::protobuf::uint32 value);

  // optional uint32 itemType = 3;
  void clear_itemtype();
  static const int kItemTypeFieldNumber = 3;
  ::google::protobuf::uint32 itemtype() const;
  void set_itemtype(::google::protobuf::uint32 value);

  // optional uint32 count = 4;
  void clear_count();
  static const int kCountFieldNumber = 4;
  ::google::protobuf::uint32 count() const;
  void set_count(::google::protobuf::uint32 value);

  // optional uint32 level = 5;
  void clear_level();
  static const int kLevelFieldNumber = 5;
  ::google::protobuf::uint32 level() const;
  void set_level(::google::protobuf::uint32 value);

  // optional uint32 rank = 6;
  void clear_rank();
  static const int kRankFieldNumber = 6;
  ::google::protobuf::uint32 rank() const;
  void set_rank(::google::protobuf::uint32 value);

  // optional bool isEquipped = 7;
  void clear_isequipped();
  static const int kIsEquippedFieldNumber = 7;
  bool isequipped() const;
  void set_isequipped(bool value);

  // optional uint32 exp = 8;
  void clear_exp();
  static const int kExpFieldNumber = 8;
  ::google::protobuf::uint32 exp() const;
  void set_exp(::google::protobuf::uint32 value);

  // optional bool isDefault = 10;
  void clear_isdefault();
  static const int kIsDefaultFieldNumber = 10;
  bool isdefault() const;
  void set_isdefault(bool value);

  // @@protoc_insertion_point(class_scope:Proto.Message.ProtoPlayerItem)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::google::protobuf::int64 id_;
  ::google::protobuf::uint32 sysitemid_;
  ::google::protobuf::uint32 itemtype_;
  ::google::protobuf::uint32 count_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 rank_;
  ::google::protobuf::uint32 exp_;
  bool isequipped_;
  bool isdefault_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_ClientData_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_ClientData_2eproto();
  #endif
  friend void protobuf_AssignDesc_ClientData_2eproto();
  friend void protobuf_ShutdownFile_ClientData_2eproto();

  void InitAsDefaultInstance();
  static ProtoPlayerItem* default_instance_;
};
// -------------------------------------------------------------------

class ProtoPlayerInfo : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:Proto.Message.ProtoPlayerInfo) */ {
 public:
  ProtoPlayerInfo();
  virtual ~ProtoPlayerInfo();

  ProtoPlayerInfo(const ProtoPlayerInfo& from);

  inline ProtoPlayerInfo& operator=(const ProtoPlayerInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ProtoPlayerInfo& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const ProtoPlayerInfo* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(ProtoPlayerInfo* other);

  // implements Message ----------------------------------------------

  inline ProtoPlayerInfo* New() const { return New(NULL); }

  ProtoPlayerInfo* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const ProtoPlayerInfo& from);
  void MergeFrom(const ProtoPlayerInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ProtoPlayerInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint64 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int64 id() const;
  void set_id(::google::protobuf::int64 value);

  // optional string name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional string userName = 3;
  void clear_username();
  static const int kUserNameFieldNumber = 3;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // optional uint32 gold = 4;
  void clear_gold();
  static const int kGoldFieldNumber = 4;
  ::google::protobuf::uint32 gold() const;
  void set_gold(::google::protobuf::uint32 value);

  // optional uint32 diamond = 5;
  void clear_diamond();
  static const int kDiamondFieldNumber = 5;
  ::google::protobuf::uint32 diamond() const;
  void set_diamond(::google::protobuf::uint32 value);

  // optional uint32 point = 6;
  void clear_point();
  static const int kPointFieldNumber = 6;
  ::google::protobuf::uint32 point() const;
  void set_point(::google::protobuf::uint32 value);

  // optional uint32 power = 8;
  void clear_power();
  static const int kPowerFieldNumber = 8;
  ::google::protobuf::uint32 power() const;
  void set_power(::google::protobuf::uint32 value);

  // optional uint32 exp = 9;
  void clear_exp();
  static const int kExpFieldNumber = 9;
  ::google::protobuf::uint32 exp() const;
  void set_exp(::google::protobuf::uint32 value);

  // optional uint32 level = 10;
  void clear_level();
  static const int kLevelFieldNumber = 10;
  ::google::protobuf::uint32 level() const;
  void set_level(::google::protobuf::uint32 value);

  // optional string avatar = 12;
  void clear_avatar();
  static const int kAvatarFieldNumber = 12;
  const ::std::string& avatar() const;
  void set_avatar(const ::std::string& value);
  void set_avatar(const char* value);
  void set_avatar(const char* value, size_t size);
  ::std::string* mutable_avatar();
  ::std::string* release_avatar();
  void set_allocated_avatar(::std::string* avatar);

  // optional uint32 nextLevelExp = 13;
  void clear_nextlevelexp();
  static const int kNextLevelExpFieldNumber = 13;
  ::google::protobuf::uint32 nextlevelexp() const;
  void set_nextlevelexp(::google::protobuf::uint32 value);

  // optional uint32 skillPoint = 14;
  void clear_skillpoint();
  static const int kSkillPointFieldNumber = 14;
  ::google::protobuf::uint32 skillpoint() const;
  void set_skillpoint(::google::protobuf::uint32 value);

  // repeated .Proto.Message.ProtoPlayerItem playerItems = 15;
  int playeritems_size() const;
  void clear_playeritems();
  static const int kPlayerItemsFieldNumber = 15;
  const ::Proto::Message::ProtoPlayerItem& playeritems(int index) const;
  ::Proto::Message::ProtoPlayerItem* mutable_playeritems(int index);
  ::Proto::Message::ProtoPlayerItem* add_playeritems();
  ::google::protobuf::RepeatedPtrField< ::Proto::Message::ProtoPlayerItem >*
      mutable_playeritems();
  const ::google::protobuf::RepeatedPtrField< ::Proto::Message::ProtoPlayerItem >&
      playeritems() const;

  // repeated .Proto.Message.ProtoPlayerGarage playerGarages = 16;
  int playergarages_size() const;
  void clear_playergarages();
  static const int kPlayerGaragesFieldNumber = 16;
  const ::Proto::Message::ProtoPlayerGarage& playergarages(int index) const;
  ::Proto::Message::ProtoPlayerGarage* mutable_playergarages(int index);
  ::Proto::Message::ProtoPlayerGarage* add_playergarages();
  ::google::protobuf::RepeatedPtrField< ::Proto::Message::ProtoPlayerGarage >*
      mutable_playergarages();
  const ::google::protobuf::RepeatedPtrField< ::Proto::Message::ProtoPlayerGarage >&
      playergarages() const;

  // optional uint32 sysCharacterId = 17;
  void clear_syscharacterid();
  static const int kSysCharacterIdFieldNumber = 17;
  ::google::protobuf::uint32 syscharacterid() const;
  void set_syscharacterid(::google::protobuf::uint32 value);

  // optional string lastLoginTime = 26;
  void clear_lastlogintime();
  static const int kLastLoginTimeFieldNumber = 26;
  const ::std::string& lastlogintime() const;
  void set_lastlogintime(const ::std::string& value);
  void set_lastlogintime(const char* value);
  void set_lastlogintime(const char* value, size_t size);
  ::std::string* mutable_lastlogintime();
  ::std::string* release_lastlogintime();
  void set_allocated_lastlogintime(::std::string* lastlogintime);

  // optional uint32 flag = 31;
  void clear_flag();
  static const int kFlagFieldNumber = 31;
  ::google::protobuf::uint32 flag() const;
  void set_flag(::google::protobuf::uint32 value);

  // optional float battleFire = 32;
  void clear_battlefire();
  static const int kBattleFireFieldNumber = 32;
  float battlefire() const;
  void set_battlefire(float value);

  // optional uint32 newbieProgress = 37;
  void clear_newbieprogress();
  static const int kNewbieProgressFieldNumber = 37;
  ::google::protobuf::uint32 newbieprogress() const;
  void set_newbieprogress(::google::protobuf::uint32 value);

  // optional bool haveNewMail = 39;
  void clear_havenewmail();
  static const int kHaveNewMailFieldNumber = 39;
  bool havenewmail() const;
  void set_havenewmail(bool value);

  // optional uint32 questScore = 40;
  void clear_questscore();
  static const int kQuestScoreFieldNumber = 40;
  ::google::protobuf::uint32 questscore() const;
  void set_questscore(::google::protobuf::uint32 value);

  // optional string nextPvpTime = 41;
  void clear_nextpvptime();
  static const int kNextPvpTimeFieldNumber = 41;
  const ::std::string& nextpvptime() const;
  void set_nextpvptime(const ::std::string& value);
  void set_nextpvptime(const char* value);
  void set_nextpvptime(const char* value, size_t size);
  ::std::string* mutable_nextpvptime();
  ::std::string* release_nextpvptime();
  void set_allocated_nextpvptime(::std::string* nextpvptime);

  // optional string lastPvpTime = 42;
  void clear_lastpvptime();
  static const int kLastPvpTimeFieldNumber = 42;
  const ::std::string& lastpvptime() const;
  void set_lastpvptime(const ::std::string& value);
  void set_lastpvptime(const char* value);
  void set_lastpvptime(const char* value, size_t size);
  ::std::string* mutable_lastpvptime();
  ::std::string* release_lastpvptime();
  void set_allocated_lastpvptime(::std::string* lastpvptime);

  // optional uint32 reviveCount = 43;
  void clear_revivecount();
  static const int kReviveCountFieldNumber = 43;
  ::google::protobuf::uint32 revivecount() const;
  void set_revivecount(::google::protobuf::uint32 value);

  // optional string activateTime = 45;
  void clear_activatetime();
  static const int kActivateTimeFieldNumber = 45;
  const ::std::string& activatetime() const;
  void set_activatetime(const ::std::string& value);
  void set_activatetime(const char* value);
  void set_activatetime(const char* value, size_t size);
  ::std::string* mutable_activatetime();
  ::std::string* release_activatetime();
  void set_allocated_activatetime(::std::string* activatetime);

  // optional uint32 armorSuitLevel = 49;
  void clear_armorsuitlevel();
  static const int kArmorSuitLevelFieldNumber = 49;
  ::google::protobuf::uint32 armorsuitlevel() const;
  void set_armorsuitlevel(::google::protobuf::uint32 value);

  // optional uint32 stamina = 50;
  void clear_stamina();
  static const int kStaminaFieldNumber = 50;
  ::google::protobuf::uint32 stamina() const;
  void set_stamina(::google::protobuf::uint32 value);

  // optional uint32 vipLevel = 52;
  void clear_viplevel();
  static const int kVipLevelFieldNumber = 52;
  ::google::protobuf::uint32 viplevel() const;
  void set_viplevel(::google::protobuf::uint32 value);

  // optional uint32 buyStaminaCount = 54;
  void clear_buystaminacount();
  static const int kBuyStaminaCountFieldNumber = 54;
  ::google::protobuf::uint32 buystaminacount() const;
  void set_buystaminacount(::google::protobuf::uint32 value);

  // optional uint32 buyGoldCount = 55;
  void clear_buygoldcount();
  static const int kBuyGoldCountFieldNumber = 55;
  ::google::protobuf::uint32 buygoldcount() const;
  void set_buygoldcount(::google::protobuf::uint32 value);

  // optional uint32 refreshShopCount = 56;
  void clear_refreshshopcount();
  static const int kRefreshShopCountFieldNumber = 56;
  ::google::protobuf::uint32 refreshshopcount() const;
  void set_refreshshopcount(::google::protobuf::uint32 value);

  // optional uint32 buyTrialCount = 57;
  void clear_buytrialcount();
  static const int kBuyTrialCountFieldNumber = 57;
  ::google::protobuf::uint32 buytrialcount() const;
  void set_buytrialcount(::google::protobuf::uint32 value);

  // optional uint32 buyPowerCount = 58;
  void clear_buypowercount();
  static const int kBuyPowerCountFieldNumber = 58;
  ::google::protobuf::uint32 buypowercount() const;
  void set_buypowercount(::google::protobuf::uint32 value);

  // optional uint32 eliteCount = 59;
  void clear_elitecount();
  static const int kEliteCountFieldNumber = 59;
  ::google::protobuf::uint32 elitecount() const;
  void set_elitecount(::google::protobuf::uint32 value);

  // optional .Proto.Message.AccountType accountType = 60;
  void clear_accounttype();
  static const int kAccountTypeFieldNumber = 60;
  ::Proto::Message::AccountType accounttype() const;
  void set_accounttype(::Proto::Message::AccountType value);

  // optional string staminaIds = 63;
  void clear_staminaids();
  static const int kStaminaIdsFieldNumber = 63;
  const ::std::string& staminaids() const;
  void set_staminaids(const ::std::string& value);
  void set_staminaids(const char* value);
  void set_staminaids(const char* value, size_t size);
  ::std::string* mutable_staminaids();
  ::std::string* release_staminaids();
  void set_allocated_staminaids(::std::string* staminaids);

  // optional uint32 storageSlots = 65;
  void clear_storageslots();
  static const int kStorageSlotsFieldNumber = 65;
  ::google::protobuf::uint32 storageslots() const;
  void set_storageslots(::google::protobuf::uint32 value);

  // optional string serverZoneId = 100;
  void clear_serverzoneid();
  static const int kServerZoneIdFieldNumber = 100;
  const ::std::string& serverzoneid() const;
  void set_serverzoneid(const ::std::string& value);
  void set_serverzoneid(const char* value);
  void set_serverzoneid(const char* value, size_t size);
  ::std::string* mutable_serverzoneid();
  ::std::string* release_serverzoneid();
  void set_allocated_serverzoneid(::std::string* serverzoneid);

  // @@protoc_insertion_point(class_scope:Proto.Message.ProtoPlayerInfo)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::google::protobuf::int64 id_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::google::protobuf::uint32 gold_;
  ::google::protobuf::uint32 diamond_;
  ::google::protobuf::uint32 point_;
  ::google::protobuf::uint32 power_;
  ::google::protobuf::uint32 exp_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::internal::ArenaStringPtr avatar_;
  ::google::protobuf::uint32 nextlevelexp_;
  ::google::protobuf::uint32 skillpoint_;
  ::google::protobuf::RepeatedPtrField< ::Proto::Message::ProtoPlayerItem > playeritems_;
  ::google::protobuf::RepeatedPtrField< ::Proto::Message::ProtoPlayerGarage > playergarages_;
  ::google::protobuf::internal::ArenaStringPtr lastlogintime_;
  ::google::protobuf::uint32 syscharacterid_;
  ::google::protobuf::uint32 flag_;
  float battlefire_;
  ::google::protobuf::uint32 newbieprogress_;
  bool havenewmail_;
  ::google::protobuf::uint32 questscore_;
  ::google::protobuf::internal::ArenaStringPtr nextpvptime_;
  ::google::protobuf::internal::ArenaStringPtr lastpvptime_;
  ::google::protobuf::internal::ArenaStringPtr activatetime_;
  ::google::protobuf::uint32 revivecount_;
  ::google::protobuf::uint32 armorsuitlevel_;
  ::google::protobuf::uint32 stamina_;
  ::google::protobuf::uint32 viplevel_;
  ::google::protobuf::uint32 buystaminacount_;
  ::google::protobuf::uint32 buygoldcount_;
  ::google::protobuf::uint32 refreshshopcount_;
  ::google::protobuf::uint32 buytrialcount_;
  ::google::protobuf::uint32 buypowercount_;
  ::google::protobuf::uint32 elitecount_;
  ::google::protobuf::internal::ArenaStringPtr staminaids_;
  int accounttype_;
  ::google::protobuf::uint32 storageslots_;
  ::google::protobuf::internal::ArenaStringPtr serverzoneid_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_ClientData_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_ClientData_2eproto();
  #endif
  friend void protobuf_AssignDesc_ClientData_2eproto();
  friend void protobuf_ShutdownFile_ClientData_2eproto();

  void InitAsDefaultInstance();
  static ProtoPlayerInfo* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// UserLoginRequest

// optional string userName = 1;
inline void UserLoginRequest::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UserLoginRequest::username() const {
  // @@protoc_insertion_point(field_get:Proto.Message.UserLoginRequest.userName)
  return username_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserLoginRequest::set_username(const ::std::string& value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Proto.Message.UserLoginRequest.userName)
}
inline void UserLoginRequest::set_username(const char* value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Proto.Message.UserLoginRequest.userName)
}
inline void UserLoginRequest::set_username(const char* value, size_t size) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Proto.Message.UserLoginRequest.userName)
}
inline ::std::string* UserLoginRequest::mutable_username() {
  
  // @@protoc_insertion_point(field_mutable:Proto.Message.UserLoginRequest.userName)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserLoginRequest::release_username() {
  // @@protoc_insertion_point(field_release:Proto.Message.UserLoginRequest.userName)
  
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserLoginRequest::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    
  } else {
    
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:Proto.Message.UserLoginRequest.userName)
}

// optional string userPwd = 2;
inline void UserLoginRequest::clear_userpwd() {
  userpwd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UserLoginRequest::userpwd() const {
  // @@protoc_insertion_point(field_get:Proto.Message.UserLoginRequest.userPwd)
  return userpwd_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserLoginRequest::set_userpwd(const ::std::string& value) {
  
  userpwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Proto.Message.UserLoginRequest.userPwd)
}
inline void UserLoginRequest::set_userpwd(const char* value) {
  
  userpwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Proto.Message.UserLoginRequest.userPwd)
}
inline void UserLoginRequest::set_userpwd(const char* value, size_t size) {
  
  userpwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Proto.Message.UserLoginRequest.userPwd)
}
inline ::std::string* UserLoginRequest::mutable_userpwd() {
  
  // @@protoc_insertion_point(field_mutable:Proto.Message.UserLoginRequest.userPwd)
  return userpwd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserLoginRequest::release_userpwd() {
  // @@protoc_insertion_point(field_release:Proto.Message.UserLoginRequest.userPwd)
  
  return userpwd_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserLoginRequest::set_allocated_userpwd(::std::string* userpwd) {
  if (userpwd != NULL) {
    
  } else {
    
  }
  userpwd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), userpwd);
  // @@protoc_insertion_point(field_set_allocated:Proto.Message.UserLoginRequest.userPwd)
}

// optional string sdk_uid = 3;
inline void UserLoginRequest::clear_sdk_uid() {
  sdk_uid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UserLoginRequest::sdk_uid() const {
  // @@protoc_insertion_point(field_get:Proto.Message.UserLoginRequest.sdk_uid)
  return sdk_uid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserLoginRequest::set_sdk_uid(const ::std::string& value) {
  
  sdk_uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Proto.Message.UserLoginRequest.sdk_uid)
}
inline void UserLoginRequest::set_sdk_uid(const char* value) {
  
  sdk_uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Proto.Message.UserLoginRequest.sdk_uid)
}
inline void UserLoginRequest::set_sdk_uid(const char* value, size_t size) {
  
  sdk_uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Proto.Message.UserLoginRequest.sdk_uid)
}
inline ::std::string* UserLoginRequest::mutable_sdk_uid() {
  
  // @@protoc_insertion_point(field_mutable:Proto.Message.UserLoginRequest.sdk_uid)
  return sdk_uid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserLoginRequest::release_sdk_uid() {
  // @@protoc_insertion_point(field_release:Proto.Message.UserLoginRequest.sdk_uid)
  
  return sdk_uid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserLoginRequest::set_allocated_sdk_uid(::std::string* sdk_uid) {
  if (sdk_uid != NULL) {
    
  } else {
    
  }
  sdk_uid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sdk_uid);
  // @@protoc_insertion_point(field_set_allocated:Proto.Message.UserLoginRequest.sdk_uid)
}

// optional string sdk_token = 4;
inline void UserLoginRequest::clear_sdk_token() {
  sdk_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UserLoginRequest::sdk_token() const {
  // @@protoc_insertion_point(field_get:Proto.Message.UserLoginRequest.sdk_token)
  return sdk_token_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserLoginRequest::set_sdk_token(const ::std::string& value) {
  
  sdk_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Proto.Message.UserLoginRequest.sdk_token)
}
inline void UserLoginRequest::set_sdk_token(const char* value) {
  
  sdk_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Proto.Message.UserLoginRequest.sdk_token)
}
inline void UserLoginRequest::set_sdk_token(const char* value, size_t size) {
  
  sdk_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Proto.Message.UserLoginRequest.sdk_token)
}
inline ::std::string* UserLoginRequest::mutable_sdk_token() {
  
  // @@protoc_insertion_point(field_mutable:Proto.Message.UserLoginRequest.sdk_token)
  return sdk_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserLoginRequest::release_sdk_token() {
  // @@protoc_insertion_point(field_release:Proto.Message.UserLoginRequest.sdk_token)
  
  return sdk_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserLoginRequest::set_allocated_sdk_token(::std::string* sdk_token) {
  if (sdk_token != NULL) {
    
  } else {
    
  }
  sdk_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sdk_token);
  // @@protoc_insertion_point(field_set_allocated:Proto.Message.UserLoginRequest.sdk_token)
}

// optional string ip = 5;
inline void UserLoginRequest::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UserLoginRequest::ip() const {
  // @@protoc_insertion_point(field_get:Proto.Message.UserLoginRequest.ip)
  return ip_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserLoginRequest::set_ip(const ::std::string& value) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Proto.Message.UserLoginRequest.ip)
}
inline void UserLoginRequest::set_ip(const char* value) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Proto.Message.UserLoginRequest.ip)
}
inline void UserLoginRequest::set_ip(const char* value, size_t size) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Proto.Message.UserLoginRequest.ip)
}
inline ::std::string* UserLoginRequest::mutable_ip() {
  
  // @@protoc_insertion_point(field_mutable:Proto.Message.UserLoginRequest.ip)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserLoginRequest::release_ip() {
  // @@protoc_insertion_point(field_release:Proto.Message.UserLoginRequest.ip)
  
  return ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserLoginRequest::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    
  } else {
    
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:Proto.Message.UserLoginRequest.ip)
}

// -------------------------------------------------------------------

// UserLoginResponse

// optional sint64 id = 1;
inline void UserLoginResponse::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 UserLoginResponse::id() const {
  // @@protoc_insertion_point(field_get:Proto.Message.UserLoginResponse.id)
  return id_;
}
inline void UserLoginResponse::set_id(::google::protobuf::int64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:Proto.Message.UserLoginResponse.id)
}

// optional string userName = 2;
inline void UserLoginResponse::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UserLoginResponse::username() const {
  // @@protoc_insertion_point(field_get:Proto.Message.UserLoginResponse.userName)
  return username_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserLoginResponse::set_username(const ::std::string& value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Proto.Message.UserLoginResponse.userName)
}
inline void UserLoginResponse::set_username(const char* value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Proto.Message.UserLoginResponse.userName)
}
inline void UserLoginResponse::set_username(const char* value, size_t size) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Proto.Message.UserLoginResponse.userName)
}
inline ::std::string* UserLoginResponse::mutable_username() {
  
  // @@protoc_insertion_point(field_mutable:Proto.Message.UserLoginResponse.userName)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserLoginResponse::release_username() {
  // @@protoc_insertion_point(field_release:Proto.Message.UserLoginResponse.userName)
  
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserLoginResponse::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    
  } else {
    
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:Proto.Message.UserLoginResponse.userName)
}

// repeated .Proto.Message.ProtoPlayer players = 3;
inline int UserLoginResponse::players_size() const {
  return players_.size();
}
inline void UserLoginResponse::clear_players() {
  players_.Clear();
}
inline const ::Proto::Message::ProtoPlayer& UserLoginResponse::players(int index) const {
  // @@protoc_insertion_point(field_get:Proto.Message.UserLoginResponse.players)
  return players_.Get(index);
}
inline ::Proto::Message::ProtoPlayer* UserLoginResponse::mutable_players(int index) {
  // @@protoc_insertion_point(field_mutable:Proto.Message.UserLoginResponse.players)
  return players_.Mutable(index);
}
inline ::Proto::Message::ProtoPlayer* UserLoginResponse::add_players() {
  // @@protoc_insertion_point(field_add:Proto.Message.UserLoginResponse.players)
  return players_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Proto::Message::ProtoPlayer >*
UserLoginResponse::mutable_players() {
  // @@protoc_insertion_point(field_mutable_list:Proto.Message.UserLoginResponse.players)
  return &players_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Proto::Message::ProtoPlayer >&
UserLoginResponse::players() const {
  // @@protoc_insertion_point(field_list:Proto.Message.UserLoginResponse.players)
  return players_;
}

// optional string sdkUid = 4;
inline void UserLoginResponse::clear_sdkuid() {
  sdkuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UserLoginResponse::sdkuid() const {
  // @@protoc_insertion_point(field_get:Proto.Message.UserLoginResponse.sdkUid)
  return sdkuid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserLoginResponse::set_sdkuid(const ::std::string& value) {
  
  sdkuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Proto.Message.UserLoginResponse.sdkUid)
}
inline void UserLoginResponse::set_sdkuid(const char* value) {
  
  sdkuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Proto.Message.UserLoginResponse.sdkUid)
}
inline void UserLoginResponse::set_sdkuid(const char* value, size_t size) {
  
  sdkuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Proto.Message.UserLoginResponse.sdkUid)
}
inline ::std::string* UserLoginResponse::mutable_sdkuid() {
  
  // @@protoc_insertion_point(field_mutable:Proto.Message.UserLoginResponse.sdkUid)
  return sdkuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserLoginResponse::release_sdkuid() {
  // @@protoc_insertion_point(field_release:Proto.Message.UserLoginResponse.sdkUid)
  
  return sdkuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserLoginResponse::set_allocated_sdkuid(::std::string* sdkuid) {
  if (sdkuid != NULL) {
    
  } else {
    
  }
  sdkuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sdkuid);
  // @@protoc_insertion_point(field_set_allocated:Proto.Message.UserLoginResponse.sdkUid)
}

// optional string sdkToken = 5;
inline void UserLoginResponse::clear_sdktoken() {
  sdktoken_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UserLoginResponse::sdktoken() const {
  // @@protoc_insertion_point(field_get:Proto.Message.UserLoginResponse.sdkToken)
  return sdktoken_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserLoginResponse::set_sdktoken(const ::std::string& value) {
  
  sdktoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Proto.Message.UserLoginResponse.sdkToken)
}
inline void UserLoginResponse::set_sdktoken(const char* value) {
  
  sdktoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Proto.Message.UserLoginResponse.sdkToken)
}
inline void UserLoginResponse::set_sdktoken(const char* value, size_t size) {
  
  sdktoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Proto.Message.UserLoginResponse.sdkToken)
}
inline ::std::string* UserLoginResponse::mutable_sdktoken() {
  
  // @@protoc_insertion_point(field_mutable:Proto.Message.UserLoginResponse.sdkToken)
  return sdktoken_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserLoginResponse::release_sdktoken() {
  // @@protoc_insertion_point(field_release:Proto.Message.UserLoginResponse.sdkToken)
  
  return sdktoken_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserLoginResponse::set_allocated_sdktoken(::std::string* sdktoken) {
  if (sdktoken != NULL) {
    
  } else {
    
  }
  sdktoken_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sdktoken);
  // @@protoc_insertion_point(field_set_allocated:Proto.Message.UserLoginResponse.sdkToken)
}

// optional bool isActivate = 6;
inline void UserLoginResponse::clear_isactivate() {
  isactivate_ = false;
}
inline bool UserLoginResponse::isactivate() const {
  // @@protoc_insertion_point(field_get:Proto.Message.UserLoginResponse.isActivate)
  return isactivate_;
}
inline void UserLoginResponse::set_isactivate(bool value) {
  
  isactivate_ = value;
  // @@protoc_insertion_point(field_set:Proto.Message.UserLoginResponse.isActivate)
}

// -------------------------------------------------------------------

// UserActivateRequest

// optional sint64 id = 1;
inline void UserActivateRequest::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 UserActivateRequest::id() const {
  // @@protoc_insertion_point(field_get:Proto.Message.UserActivateRequest.id)
  return id_;
}
inline void UserActivateRequest::set_id(::google::protobuf::int64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:Proto.Message.UserActivateRequest.id)
}

// optional string userName = 2;
inline void UserActivateRequest::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UserActivateRequest::username() const {
  // @@protoc_insertion_point(field_get:Proto.Message.UserActivateRequest.userName)
  return username_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserActivateRequest::set_username(const ::std::string& value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Proto.Message.UserActivateRequest.userName)
}
inline void UserActivateRequest::set_username(const char* value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Proto.Message.UserActivateRequest.userName)
}
inline void UserActivateRequest::set_username(const char* value, size_t size) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Proto.Message.UserActivateRequest.userName)
}
inline ::std::string* UserActivateRequest::mutable_username() {
  
  // @@protoc_insertion_point(field_mutable:Proto.Message.UserActivateRequest.userName)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserActivateRequest::release_username() {
  // @@protoc_insertion_point(field_release:Proto.Message.UserActivateRequest.userName)
  
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserActivateRequest::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    
  } else {
    
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:Proto.Message.UserActivateRequest.userName)
}

// optional string code = 3;
inline void UserActivateRequest::clear_code() {
  code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UserActivateRequest::code() const {
  // @@protoc_insertion_point(field_get:Proto.Message.UserActivateRequest.code)
  return code_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserActivateRequest::set_code(const ::std::string& value) {
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Proto.Message.UserActivateRequest.code)
}
inline void UserActivateRequest::set_code(const char* value) {
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Proto.Message.UserActivateRequest.code)
}
inline void UserActivateRequest::set_code(const char* value, size_t size) {
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Proto.Message.UserActivateRequest.code)
}
inline ::std::string* UserActivateRequest::mutable_code() {
  
  // @@protoc_insertion_point(field_mutable:Proto.Message.UserActivateRequest.code)
  return code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserActivateRequest::release_code() {
  // @@protoc_insertion_point(field_release:Proto.Message.UserActivateRequest.code)
  
  return code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserActivateRequest::set_allocated_code(::std::string* code) {
  if (code != NULL) {
    
  } else {
    
  }
  code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), code);
  // @@protoc_insertion_point(field_set_allocated:Proto.Message.UserActivateRequest.code)
}

// -------------------------------------------------------------------

// UserActivateResponse

// optional sint64 id = 1;
inline void UserActivateResponse::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 UserActivateResponse::id() const {
  // @@protoc_insertion_point(field_get:Proto.Message.UserActivateResponse.id)
  return id_;
}
inline void UserActivateResponse::set_id(::google::protobuf::int64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:Proto.Message.UserActivateResponse.id)
}

// optional string userName = 2;
inline void UserActivateResponse::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UserActivateResponse::username() const {
  // @@protoc_insertion_point(field_get:Proto.Message.UserActivateResponse.userName)
  return username_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserActivateResponse::set_username(const ::std::string& value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Proto.Message.UserActivateResponse.userName)
}
inline void UserActivateResponse::set_username(const char* value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Proto.Message.UserActivateResponse.userName)
}
inline void UserActivateResponse::set_username(const char* value, size_t size) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Proto.Message.UserActivateResponse.userName)
}
inline ::std::string* UserActivateResponse::mutable_username() {
  
  // @@protoc_insertion_point(field_mutable:Proto.Message.UserActivateResponse.userName)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserActivateResponse::release_username() {
  // @@protoc_insertion_point(field_release:Proto.Message.UserActivateResponse.userName)
  
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserActivateResponse::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    
  } else {
    
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:Proto.Message.UserActivateResponse.userName)
}

// repeated .Proto.Message.ProtoPlayer players = 3;
inline int UserActivateResponse::players_size() const {
  return players_.size();
}
inline void UserActivateResponse::clear_players() {
  players_.Clear();
}
inline const ::Proto::Message::ProtoPlayer& UserActivateResponse::players(int index) const {
  // @@protoc_insertion_point(field_get:Proto.Message.UserActivateResponse.players)
  return players_.Get(index);
}
inline ::Proto::Message::ProtoPlayer* UserActivateResponse::mutable_players(int index) {
  // @@protoc_insertion_point(field_mutable:Proto.Message.UserActivateResponse.players)
  return players_.Mutable(index);
}
inline ::Proto::Message::ProtoPlayer* UserActivateResponse::add_players() {
  // @@protoc_insertion_point(field_add:Proto.Message.UserActivateResponse.players)
  return players_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Proto::Message::ProtoPlayer >*
UserActivateResponse::mutable_players() {
  // @@protoc_insertion_point(field_mutable_list:Proto.Message.UserActivateResponse.players)
  return &players_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Proto::Message::ProtoPlayer >&
UserActivateResponse::players() const {
  // @@protoc_insertion_point(field_list:Proto.Message.UserActivateResponse.players)
  return players_;
}

// -------------------------------------------------------------------

// PlayerLoginRequest

// optional sint64 id = 1;
inline void PlayerLoginRequest::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 PlayerLoginRequest::id() const {
  // @@protoc_insertion_point(field_get:Proto.Message.PlayerLoginRequest.id)
  return id_;
}
inline void PlayerLoginRequest::set_id(::google::protobuf::int64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:Proto.Message.PlayerLoginRequest.id)
}

// optional string clientVersion = 2;
inline void PlayerLoginRequest::clear_clientversion() {
  clientversion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PlayerLoginRequest::clientversion() const {
  // @@protoc_insertion_point(field_get:Proto.Message.PlayerLoginRequest.clientVersion)
  return clientversion_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PlayerLoginRequest::set_clientversion(const ::std::string& value) {
  
  clientversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Proto.Message.PlayerLoginRequest.clientVersion)
}
inline void PlayerLoginRequest::set_clientversion(const char* value) {
  
  clientversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Proto.Message.PlayerLoginRequest.clientVersion)
}
inline void PlayerLoginRequest::set_clientversion(const char* value, size_t size) {
  
  clientversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Proto.Message.PlayerLoginRequest.clientVersion)
}
inline ::std::string* PlayerLoginRequest::mutable_clientversion() {
  
  // @@protoc_insertion_point(field_mutable:Proto.Message.PlayerLoginRequest.clientVersion)
  return clientversion_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PlayerLoginRequest::release_clientversion() {
  // @@protoc_insertion_point(field_release:Proto.Message.PlayerLoginRequest.clientVersion)
  
  return clientversion_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PlayerLoginRequest::set_allocated_clientversion(::std::string* clientversion) {
  if (clientversion != NULL) {
    
  } else {
    
  }
  clientversion_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), clientversion);
  // @@protoc_insertion_point(field_set_allocated:Proto.Message.PlayerLoginRequest.clientVersion)
}

// optional string appStore = 3;
inline void PlayerLoginRequest::clear_appstore() {
  appstore_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PlayerLoginRequest::appstore() const {
  // @@protoc_insertion_point(field_get:Proto.Message.PlayerLoginRequest.appStore)
  return appstore_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PlayerLoginRequest::set_appstore(const ::std::string& value) {
  
  appstore_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Proto.Message.PlayerLoginRequest.appStore)
}
inline void PlayerLoginRequest::set_appstore(const char* value) {
  
  appstore_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Proto.Message.PlayerLoginRequest.appStore)
}
inline void PlayerLoginRequest::set_appstore(const char* value, size_t size) {
  
  appstore_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Proto.Message.PlayerLoginRequest.appStore)
}
inline ::std::string* PlayerLoginRequest::mutable_appstore() {
  
  // @@protoc_insertion_point(field_mutable:Proto.Message.PlayerLoginRequest.appStore)
  return appstore_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PlayerLoginRequest::release_appstore() {
  // @@protoc_insertion_point(field_release:Proto.Message.PlayerLoginRequest.appStore)
  
  return appstore_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PlayerLoginRequest::set_allocated_appstore(::std::string* appstore) {
  if (appstore != NULL) {
    
  } else {
    
  }
  appstore_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appstore);
  // @@protoc_insertion_point(field_set_allocated:Proto.Message.PlayerLoginRequest.appStore)
}

// optional string device = 4;
inline void PlayerLoginRequest::clear_device() {
  device_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PlayerLoginRequest::device() const {
  // @@protoc_insertion_point(field_get:Proto.Message.PlayerLoginRequest.device)
  return device_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PlayerLoginRequest::set_device(const ::std::string& value) {
  
  device_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Proto.Message.PlayerLoginRequest.device)
}
inline void PlayerLoginRequest::set_device(const char* value) {
  
  device_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Proto.Message.PlayerLoginRequest.device)
}
inline void PlayerLoginRequest::set_device(const char* value, size_t size) {
  
  device_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Proto.Message.PlayerLoginRequest.device)
}
inline ::std::string* PlayerLoginRequest::mutable_device() {
  
  // @@protoc_insertion_point(field_mutable:Proto.Message.PlayerLoginRequest.device)
  return device_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PlayerLoginRequest::release_device() {
  // @@protoc_insertion_point(field_release:Proto.Message.PlayerLoginRequest.device)
  
  return device_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PlayerLoginRequest::set_allocated_device(::std::string* device) {
  if (device != NULL) {
    
  } else {
    
  }
  device_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), device);
  // @@protoc_insertion_point(field_set_allocated:Proto.Message.PlayerLoginRequest.device)
}

// -------------------------------------------------------------------

// PlayerLoginResponse

// optional .Proto.Message.ProtoPlayerInfo playerInfo = 1;
inline bool PlayerLoginResponse::has_playerinfo() const {
  return !_is_default_instance_ && playerinfo_ != NULL;
}
inline void PlayerLoginResponse::clear_playerinfo() {
  if (GetArenaNoVirtual() == NULL && playerinfo_ != NULL) delete playerinfo_;
  playerinfo_ = NULL;
}
inline const ::Proto::Message::ProtoPlayerInfo& PlayerLoginResponse::playerinfo() const {
  // @@protoc_insertion_point(field_get:Proto.Message.PlayerLoginResponse.playerInfo)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return playerinfo_ != NULL ? *playerinfo_ : *default_instance().playerinfo_;
#else
  return playerinfo_ != NULL ? *playerinfo_ : *default_instance_->playerinfo_;
#endif
}
inline ::Proto::Message::ProtoPlayerInfo* PlayerLoginResponse::mutable_playerinfo() {
  
  if (playerinfo_ == NULL) {
    playerinfo_ = new ::Proto::Message::ProtoPlayerInfo;
  }
  // @@protoc_insertion_point(field_mutable:Proto.Message.PlayerLoginResponse.playerInfo)
  return playerinfo_;
}
inline ::Proto::Message::ProtoPlayerInfo* PlayerLoginResponse::release_playerinfo() {
  // @@protoc_insertion_point(field_release:Proto.Message.PlayerLoginResponse.playerInfo)
  
  ::Proto::Message::ProtoPlayerInfo* temp = playerinfo_;
  playerinfo_ = NULL;
  return temp;
}
inline void PlayerLoginResponse::set_allocated_playerinfo(::Proto::Message::ProtoPlayerInfo* playerinfo) {
  delete playerinfo_;
  playerinfo_ = playerinfo;
  if (playerinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Proto.Message.PlayerLoginResponse.playerInfo)
}

// -------------------------------------------------------------------

// PlayerLogoutRequest

// optional sint64 id = 1;
inline void PlayerLogoutRequest::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 PlayerLogoutRequest::id() const {
  // @@protoc_insertion_point(field_get:Proto.Message.PlayerLogoutRequest.id)
  return id_;
}
inline void PlayerLogoutRequest::set_id(::google::protobuf::int64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:Proto.Message.PlayerLogoutRequest.id)
}

// -------------------------------------------------------------------

// PlayerLogoutResponse

// -------------------------------------------------------------------

// PlayerCreateRequest

// optional sint64 userId = 1;
inline void PlayerCreateRequest::clear_userid() {
  userid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 PlayerCreateRequest::userid() const {
  // @@protoc_insertion_point(field_get:Proto.Message.PlayerCreateRequest.userId)
  return userid_;
}
inline void PlayerCreateRequest::set_userid(::google::protobuf::int64 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:Proto.Message.PlayerCreateRequest.userId)
}

// optional string name = 3;
inline void PlayerCreateRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PlayerCreateRequest::name() const {
  // @@protoc_insertion_point(field_get:Proto.Message.PlayerCreateRequest.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PlayerCreateRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Proto.Message.PlayerCreateRequest.name)
}
inline void PlayerCreateRequest::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Proto.Message.PlayerCreateRequest.name)
}
inline void PlayerCreateRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Proto.Message.PlayerCreateRequest.name)
}
inline ::std::string* PlayerCreateRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:Proto.Message.PlayerCreateRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PlayerCreateRequest::release_name() {
  // @@protoc_insertion_point(field_release:Proto.Message.PlayerCreateRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PlayerCreateRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:Proto.Message.PlayerCreateRequest.name)
}

// optional uint32 sysCharacterId = 4;
inline void PlayerCreateRequest::clear_syscharacterid() {
  syscharacterid_ = 0u;
}
inline ::google::protobuf::uint32 PlayerCreateRequest::syscharacterid() const {
  // @@protoc_insertion_point(field_get:Proto.Message.PlayerCreateRequest.sysCharacterId)
  return syscharacterid_;
}
inline void PlayerCreateRequest::set_syscharacterid(::google::protobuf::uint32 value) {
  
  syscharacterid_ = value;
  // @@protoc_insertion_point(field_set:Proto.Message.PlayerCreateRequest.sysCharacterId)
}

// optional int32 zoneId = 5;
inline void PlayerCreateRequest::clear_zoneid() {
  zoneid_ = 0;
}
inline ::google::protobuf::int32 PlayerCreateRequest::zoneid() const {
  // @@protoc_insertion_point(field_get:Proto.Message.PlayerCreateRequest.zoneId)
  return zoneid_;
}
inline void PlayerCreateRequest::set_zoneid(::google::protobuf::int32 value) {
  
  zoneid_ = value;
  // @@protoc_insertion_point(field_set:Proto.Message.PlayerCreateRequest.zoneId)
}

// optional string clientVersion = 6;
inline void PlayerCreateRequest::clear_clientversion() {
  clientversion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PlayerCreateRequest::clientversion() const {
  // @@protoc_insertion_point(field_get:Proto.Message.PlayerCreateRequest.clientVersion)
  return clientversion_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PlayerCreateRequest::set_clientversion(const ::std::string& value) {
  
  clientversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Proto.Message.PlayerCreateRequest.clientVersion)
}
inline void PlayerCreateRequest::set_clientversion(const char* value) {
  
  clientversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Proto.Message.PlayerCreateRequest.clientVersion)
}
inline void PlayerCreateRequest::set_clientversion(const char* value, size_t size) {
  
  clientversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Proto.Message.PlayerCreateRequest.clientVersion)
}
inline ::std::string* PlayerCreateRequest::mutable_clientversion() {
  
  // @@protoc_insertion_point(field_mutable:Proto.Message.PlayerCreateRequest.clientVersion)
  return clientversion_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PlayerCreateRequest::release_clientversion() {
  // @@protoc_insertion_point(field_release:Proto.Message.PlayerCreateRequest.clientVersion)
  
  return clientversion_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PlayerCreateRequest::set_allocated_clientversion(::std::string* clientversion) {
  if (clientversion != NULL) {
    
  } else {
    
  }
  clientversion_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), clientversion);
  // @@protoc_insertion_point(field_set_allocated:Proto.Message.PlayerCreateRequest.clientVersion)
}

// optional string appStore = 7;
inline void PlayerCreateRequest::clear_appstore() {
  appstore_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PlayerCreateRequest::appstore() const {
  // @@protoc_insertion_point(field_get:Proto.Message.PlayerCreateRequest.appStore)
  return appstore_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PlayerCreateRequest::set_appstore(const ::std::string& value) {
  
  appstore_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Proto.Message.PlayerCreateRequest.appStore)
}
inline void PlayerCreateRequest::set_appstore(const char* value) {
  
  appstore_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Proto.Message.PlayerCreateRequest.appStore)
}
inline void PlayerCreateRequest::set_appstore(const char* value, size_t size) {
  
  appstore_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Proto.Message.PlayerCreateRequest.appStore)
}
inline ::std::string* PlayerCreateRequest::mutable_appstore() {
  
  // @@protoc_insertion_point(field_mutable:Proto.Message.PlayerCreateRequest.appStore)
  return appstore_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PlayerCreateRequest::release_appstore() {
  // @@protoc_insertion_point(field_release:Proto.Message.PlayerCreateRequest.appStore)
  
  return appstore_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PlayerCreateRequest::set_allocated_appstore(::std::string* appstore) {
  if (appstore != NULL) {
    
  } else {
    
  }
  appstore_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appstore);
  // @@protoc_insertion_point(field_set_allocated:Proto.Message.PlayerCreateRequest.appStore)
}

// optional string device = 8;
inline void PlayerCreateRequest::clear_device() {
  device_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PlayerCreateRequest::device() const {
  // @@protoc_insertion_point(field_get:Proto.Message.PlayerCreateRequest.device)
  return device_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PlayerCreateRequest::set_device(const ::std::string& value) {
  
  device_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Proto.Message.PlayerCreateRequest.device)
}
inline void PlayerCreateRequest::set_device(const char* value) {
  
  device_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Proto.Message.PlayerCreateRequest.device)
}
inline void PlayerCreateRequest::set_device(const char* value, size_t size) {
  
  device_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Proto.Message.PlayerCreateRequest.device)
}
inline ::std::string* PlayerCreateRequest::mutable_device() {
  
  // @@protoc_insertion_point(field_mutable:Proto.Message.PlayerCreateRequest.device)
  return device_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PlayerCreateRequest::release_device() {
  // @@protoc_insertion_point(field_release:Proto.Message.PlayerCreateRequest.device)
  
  return device_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PlayerCreateRequest::set_allocated_device(::std::string* device) {
  if (device != NULL) {
    
  } else {
    
  }
  device_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), device);
  // @@protoc_insertion_point(field_set_allocated:Proto.Message.PlayerCreateRequest.device)
}

// -------------------------------------------------------------------

// PlayerCreateResponse

// optional .Proto.Message.ProtoPlayerInfo playerInfo = 1;
inline bool PlayerCreateResponse::has_playerinfo() const {
  return !_is_default_instance_ && playerinfo_ != NULL;
}
inline void PlayerCreateResponse::clear_playerinfo() {
  if (GetArenaNoVirtual() == NULL && playerinfo_ != NULL) delete playerinfo_;
  playerinfo_ = NULL;
}
inline const ::Proto::Message::ProtoPlayerInfo& PlayerCreateResponse::playerinfo() const {
  // @@protoc_insertion_point(field_get:Proto.Message.PlayerCreateResponse.playerInfo)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return playerinfo_ != NULL ? *playerinfo_ : *default_instance().playerinfo_;
#else
  return playerinfo_ != NULL ? *playerinfo_ : *default_instance_->playerinfo_;
#endif
}
inline ::Proto::Message::ProtoPlayerInfo* PlayerCreateResponse::mutable_playerinfo() {
  
  if (playerinfo_ == NULL) {
    playerinfo_ = new ::Proto::Message::ProtoPlayerInfo;
  }
  // @@protoc_insertion_point(field_mutable:Proto.Message.PlayerCreateResponse.playerInfo)
  return playerinfo_;
}
inline ::Proto::Message::ProtoPlayerInfo* PlayerCreateResponse::release_playerinfo() {
  // @@protoc_insertion_point(field_release:Proto.Message.PlayerCreateResponse.playerInfo)
  
  ::Proto::Message::ProtoPlayerInfo* temp = playerinfo_;
  playerinfo_ = NULL;
  return temp;
}
inline void PlayerCreateResponse::set_allocated_playerinfo(::Proto::Message::ProtoPlayerInfo* playerinfo) {
  delete playerinfo_;
  playerinfo_ = playerinfo;
  if (playerinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Proto.Message.PlayerCreateResponse.playerInfo)
}

// -------------------------------------------------------------------

// ProtoPlayer

// optional sint64 id = 1;
inline void ProtoPlayer::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ProtoPlayer::id() const {
  // @@protoc_insertion_point(field_get:Proto.Message.ProtoPlayer.id)
  return id_;
}
inline void ProtoPlayer::set_id(::google::protobuf::int64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:Proto.Message.ProtoPlayer.id)
}

// optional string name = 2;
inline void ProtoPlayer::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ProtoPlayer::name() const {
  // @@protoc_insertion_point(field_get:Proto.Message.ProtoPlayer.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProtoPlayer::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Proto.Message.ProtoPlayer.name)
}
inline void ProtoPlayer::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Proto.Message.ProtoPlayer.name)
}
inline void ProtoPlayer::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Proto.Message.ProtoPlayer.name)
}
inline ::std::string* ProtoPlayer::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:Proto.Message.ProtoPlayer.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProtoPlayer::release_name() {
  // @@protoc_insertion_point(field_release:Proto.Message.ProtoPlayer.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProtoPlayer::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:Proto.Message.ProtoPlayer.name)
}

// optional bool isBanned = 3;
inline void ProtoPlayer::clear_isbanned() {
  isbanned_ = false;
}
inline bool ProtoPlayer::isbanned() const {
  // @@protoc_insertion_point(field_get:Proto.Message.ProtoPlayer.isBanned)
  return isbanned_;
}
inline void ProtoPlayer::set_isbanned(bool value) {
  
  isbanned_ = value;
  // @@protoc_insertion_point(field_set:Proto.Message.ProtoPlayer.isBanned)
}

// optional string bannedStartTime = 4;
inline void ProtoPlayer::clear_bannedstarttime() {
  bannedstarttime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ProtoPlayer::bannedstarttime() const {
  // @@protoc_insertion_point(field_get:Proto.Message.ProtoPlayer.bannedStartTime)
  return bannedstarttime_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProtoPlayer::set_bannedstarttime(const ::std::string& value) {
  
  bannedstarttime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Proto.Message.ProtoPlayer.bannedStartTime)
}
inline void ProtoPlayer::set_bannedstarttime(const char* value) {
  
  bannedstarttime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Proto.Message.ProtoPlayer.bannedStartTime)
}
inline void ProtoPlayer::set_bannedstarttime(const char* value, size_t size) {
  
  bannedstarttime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Proto.Message.ProtoPlayer.bannedStartTime)
}
inline ::std::string* ProtoPlayer::mutable_bannedstarttime() {
  
  // @@protoc_insertion_point(field_mutable:Proto.Message.ProtoPlayer.bannedStartTime)
  return bannedstarttime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProtoPlayer::release_bannedstarttime() {
  // @@protoc_insertion_point(field_release:Proto.Message.ProtoPlayer.bannedStartTime)
  
  return bannedstarttime_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProtoPlayer::set_allocated_bannedstarttime(::std::string* bannedstarttime) {
  if (bannedstarttime != NULL) {
    
  } else {
    
  }
  bannedstarttime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bannedstarttime);
  // @@protoc_insertion_point(field_set_allocated:Proto.Message.ProtoPlayer.bannedStartTime)
}

// optional string bannedEndTime = 5;
inline void ProtoPlayer::clear_bannedendtime() {
  bannedendtime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ProtoPlayer::bannedendtime() const {
  // @@protoc_insertion_point(field_get:Proto.Message.ProtoPlayer.bannedEndTime)
  return bannedendtime_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProtoPlayer::set_bannedendtime(const ::std::string& value) {
  
  bannedendtime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Proto.Message.ProtoPlayer.bannedEndTime)
}
inline void ProtoPlayer::set_bannedendtime(const char* value) {
  
  bannedendtime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Proto.Message.ProtoPlayer.bannedEndTime)
}
inline void ProtoPlayer::set_bannedendtime(const char* value, size_t size) {
  
  bannedendtime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Proto.Message.ProtoPlayer.bannedEndTime)
}
inline ::std::string* ProtoPlayer::mutable_bannedendtime() {
  
  // @@protoc_insertion_point(field_mutable:Proto.Message.ProtoPlayer.bannedEndTime)
  return bannedendtime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProtoPlayer::release_bannedendtime() {
  // @@protoc_insertion_point(field_release:Proto.Message.ProtoPlayer.bannedEndTime)
  
  return bannedendtime_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProtoPlayer::set_allocated_bannedendtime(::std::string* bannedendtime) {
  if (bannedendtime != NULL) {
    
  } else {
    
  }
  bannedendtime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bannedendtime);
  // @@protoc_insertion_point(field_set_allocated:Proto.Message.ProtoPlayer.bannedEndTime)
}

// optional string bannedReason = 6;
inline void ProtoPlayer::clear_bannedreason() {
  bannedreason_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ProtoPlayer::bannedreason() const {
  // @@protoc_insertion_point(field_get:Proto.Message.ProtoPlayer.bannedReason)
  return bannedreason_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProtoPlayer::set_bannedreason(const ::std::string& value) {
  
  bannedreason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Proto.Message.ProtoPlayer.bannedReason)
}
inline void ProtoPlayer::set_bannedreason(const char* value) {
  
  bannedreason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Proto.Message.ProtoPlayer.bannedReason)
}
inline void ProtoPlayer::set_bannedreason(const char* value, size_t size) {
  
  bannedreason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Proto.Message.ProtoPlayer.bannedReason)
}
inline ::std::string* ProtoPlayer::mutable_bannedreason() {
  
  // @@protoc_insertion_point(field_mutable:Proto.Message.ProtoPlayer.bannedReason)
  return bannedreason_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProtoPlayer::release_bannedreason() {
  // @@protoc_insertion_point(field_release:Proto.Message.ProtoPlayer.bannedReason)
  
  return bannedreason_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProtoPlayer::set_allocated_bannedreason(::std::string* bannedreason) {
  if (bannedreason != NULL) {
    
  } else {
    
  }
  bannedreason_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bannedreason);
  // @@protoc_insertion_point(field_set_allocated:Proto.Message.ProtoPlayer.bannedReason)
}

// -------------------------------------------------------------------

// ProtoPlayerGarage

// optional sint64 id = 1;
inline void ProtoPlayerGarage::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ProtoPlayerGarage::id() const {
  // @@protoc_insertion_point(field_get:Proto.Message.ProtoPlayerGarage.id)
  return id_;
}
inline void ProtoPlayerGarage::set_id(::google::protobuf::int64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:Proto.Message.ProtoPlayerGarage.id)
}

// optional string name = 2;
inline void ProtoPlayerGarage::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ProtoPlayerGarage::name() const {
  // @@protoc_insertion_point(field_get:Proto.Message.ProtoPlayerGarage.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProtoPlayerGarage::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Proto.Message.ProtoPlayerGarage.name)
}
inline void ProtoPlayerGarage::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Proto.Message.ProtoPlayerGarage.name)
}
inline void ProtoPlayerGarage::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Proto.Message.ProtoPlayerGarage.name)
}
inline ::std::string* ProtoPlayerGarage::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:Proto.Message.ProtoPlayerGarage.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProtoPlayerGarage::release_name() {
  // @@protoc_insertion_point(field_release:Proto.Message.ProtoPlayerGarage.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProtoPlayerGarage::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:Proto.Message.ProtoPlayerGarage.name)
}

// optional string garageInfo = 3;
inline void ProtoPlayerGarage::clear_garageinfo() {
  garageinfo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ProtoPlayerGarage::garageinfo() const {
  // @@protoc_insertion_point(field_get:Proto.Message.ProtoPlayerGarage.garageInfo)
  return garageinfo_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProtoPlayerGarage::set_garageinfo(const ::std::string& value) {
  
  garageinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Proto.Message.ProtoPlayerGarage.garageInfo)
}
inline void ProtoPlayerGarage::set_garageinfo(const char* value) {
  
  garageinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Proto.Message.ProtoPlayerGarage.garageInfo)
}
inline void ProtoPlayerGarage::set_garageinfo(const char* value, size_t size) {
  
  garageinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Proto.Message.ProtoPlayerGarage.garageInfo)
}
inline ::std::string* ProtoPlayerGarage::mutable_garageinfo() {
  
  // @@protoc_insertion_point(field_mutable:Proto.Message.ProtoPlayerGarage.garageInfo)
  return garageinfo_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProtoPlayerGarage::release_garageinfo() {
  // @@protoc_insertion_point(field_release:Proto.Message.ProtoPlayerGarage.garageInfo)
  
  return garageinfo_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProtoPlayerGarage::set_allocated_garageinfo(::std::string* garageinfo) {
  if (garageinfo != NULL) {
    
  } else {
    
  }
  garageinfo_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), garageinfo);
  // @@protoc_insertion_point(field_set_allocated:Proto.Message.ProtoPlayerGarage.garageInfo)
}

// -------------------------------------------------------------------

// ProtoPlayerItem

// optional sint64 id = 1;
inline void ProtoPlayerItem::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ProtoPlayerItem::id() const {
  // @@protoc_insertion_point(field_get:Proto.Message.ProtoPlayerItem.id)
  return id_;
}
inline void ProtoPlayerItem::set_id(::google::protobuf::int64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:Proto.Message.ProtoPlayerItem.id)
}

// optional uint32 sysItemId = 2;
inline void ProtoPlayerItem::clear_sysitemid() {
  sysitemid_ = 0u;
}
inline ::google::protobuf::uint32 ProtoPlayerItem::sysitemid() const {
  // @@protoc_insertion_point(field_get:Proto.Message.ProtoPlayerItem.sysItemId)
  return sysitemid_;
}
inline void ProtoPlayerItem::set_sysitemid(::google::protobuf::uint32 value) {
  
  sysitemid_ = value;
  // @@protoc_insertion_point(field_set:Proto.Message.ProtoPlayerItem.sysItemId)
}

// optional uint32 itemType = 3;
inline void ProtoPlayerItem::clear_itemtype() {
  itemtype_ = 0u;
}
inline ::google::protobuf::uint32 ProtoPlayerItem::itemtype() const {
  // @@protoc_insertion_point(field_get:Proto.Message.ProtoPlayerItem.itemType)
  return itemtype_;
}
inline void ProtoPlayerItem::set_itemtype(::google::protobuf::uint32 value) {
  
  itemtype_ = value;
  // @@protoc_insertion_point(field_set:Proto.Message.ProtoPlayerItem.itemType)
}

// optional uint32 count = 4;
inline void ProtoPlayerItem::clear_count() {
  count_ = 0u;
}
inline ::google::protobuf::uint32 ProtoPlayerItem::count() const {
  // @@protoc_insertion_point(field_get:Proto.Message.ProtoPlayerItem.count)
  return count_;
}
inline void ProtoPlayerItem::set_count(::google::protobuf::uint32 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:Proto.Message.ProtoPlayerItem.count)
}

// optional uint32 level = 5;
inline void ProtoPlayerItem::clear_level() {
  level_ = 0u;
}
inline ::google::protobuf::uint32 ProtoPlayerItem::level() const {
  // @@protoc_insertion_point(field_get:Proto.Message.ProtoPlayerItem.level)
  return level_;
}
inline void ProtoPlayerItem::set_level(::google::protobuf::uint32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:Proto.Message.ProtoPlayerItem.level)
}

// optional uint32 rank = 6;
inline void ProtoPlayerItem::clear_rank() {
  rank_ = 0u;
}
inline ::google::protobuf::uint32 ProtoPlayerItem::rank() const {
  // @@protoc_insertion_point(field_get:Proto.Message.ProtoPlayerItem.rank)
  return rank_;
}
inline void ProtoPlayerItem::set_rank(::google::protobuf::uint32 value) {
  
  rank_ = value;
  // @@protoc_insertion_point(field_set:Proto.Message.ProtoPlayerItem.rank)
}

// optional bool isEquipped = 7;
inline void ProtoPlayerItem::clear_isequipped() {
  isequipped_ = false;
}
inline bool ProtoPlayerItem::isequipped() const {
  // @@protoc_insertion_point(field_get:Proto.Message.ProtoPlayerItem.isEquipped)
  return isequipped_;
}
inline void ProtoPlayerItem::set_isequipped(bool value) {
  
  isequipped_ = value;
  // @@protoc_insertion_point(field_set:Proto.Message.ProtoPlayerItem.isEquipped)
}

// optional uint32 exp = 8;
inline void ProtoPlayerItem::clear_exp() {
  exp_ = 0u;
}
inline ::google::protobuf::uint32 ProtoPlayerItem::exp() const {
  // @@protoc_insertion_point(field_get:Proto.Message.ProtoPlayerItem.exp)
  return exp_;
}
inline void ProtoPlayerItem::set_exp(::google::protobuf::uint32 value) {
  
  exp_ = value;
  // @@protoc_insertion_point(field_set:Proto.Message.ProtoPlayerItem.exp)
}

// optional bool isDefault = 10;
inline void ProtoPlayerItem::clear_isdefault() {
  isdefault_ = false;
}
inline bool ProtoPlayerItem::isdefault() const {
  // @@protoc_insertion_point(field_get:Proto.Message.ProtoPlayerItem.isDefault)
  return isdefault_;
}
inline void ProtoPlayerItem::set_isdefault(bool value) {
  
  isdefault_ = value;
  // @@protoc_insertion_point(field_set:Proto.Message.ProtoPlayerItem.isDefault)
}

// -------------------------------------------------------------------

// ProtoPlayerInfo

// optional sint64 id = 1;
inline void ProtoPlayerInfo::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ProtoPlayerInfo::id() const {
  // @@protoc_insertion_point(field_get:Proto.Message.ProtoPlayerInfo.id)
  return id_;
}
inline void ProtoPlayerInfo::set_id(::google::protobuf::int64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:Proto.Message.ProtoPlayerInfo.id)
}

// optional string name = 2;
inline void ProtoPlayerInfo::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ProtoPlayerInfo::name() const {
  // @@protoc_insertion_point(field_get:Proto.Message.ProtoPlayerInfo.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProtoPlayerInfo::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Proto.Message.ProtoPlayerInfo.name)
}
inline void ProtoPlayerInfo::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Proto.Message.ProtoPlayerInfo.name)
}
inline void ProtoPlayerInfo::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Proto.Message.ProtoPlayerInfo.name)
}
inline ::std::string* ProtoPlayerInfo::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:Proto.Message.ProtoPlayerInfo.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProtoPlayerInfo::release_name() {
  // @@protoc_insertion_point(field_release:Proto.Message.ProtoPlayerInfo.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProtoPlayerInfo::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:Proto.Message.ProtoPlayerInfo.name)
}

// optional string userName = 3;
inline void ProtoPlayerInfo::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ProtoPlayerInfo::username() const {
  // @@protoc_insertion_point(field_get:Proto.Message.ProtoPlayerInfo.userName)
  return username_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProtoPlayerInfo::set_username(const ::std::string& value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Proto.Message.ProtoPlayerInfo.userName)
}
inline void ProtoPlayerInfo::set_username(const char* value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Proto.Message.ProtoPlayerInfo.userName)
}
inline void ProtoPlayerInfo::set_username(const char* value, size_t size) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Proto.Message.ProtoPlayerInfo.userName)
}
inline ::std::string* ProtoPlayerInfo::mutable_username() {
  
  // @@protoc_insertion_point(field_mutable:Proto.Message.ProtoPlayerInfo.userName)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProtoPlayerInfo::release_username() {
  // @@protoc_insertion_point(field_release:Proto.Message.ProtoPlayerInfo.userName)
  
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProtoPlayerInfo::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    
  } else {
    
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:Proto.Message.ProtoPlayerInfo.userName)
}

// optional uint32 gold = 4;
inline void ProtoPlayerInfo::clear_gold() {
  gold_ = 0u;
}
inline ::google::protobuf::uint32 ProtoPlayerInfo::gold() const {
  // @@protoc_insertion_point(field_get:Proto.Message.ProtoPlayerInfo.gold)
  return gold_;
}
inline void ProtoPlayerInfo::set_gold(::google::protobuf::uint32 value) {
  
  gold_ = value;
  // @@protoc_insertion_point(field_set:Proto.Message.ProtoPlayerInfo.gold)
}

// optional uint32 diamond = 5;
inline void ProtoPlayerInfo::clear_diamond() {
  diamond_ = 0u;
}
inline ::google::protobuf::uint32 ProtoPlayerInfo::diamond() const {
  // @@protoc_insertion_point(field_get:Proto.Message.ProtoPlayerInfo.diamond)
  return diamond_;
}
inline void ProtoPlayerInfo::set_diamond(::google::protobuf::uint32 value) {
  
  diamond_ = value;
  // @@protoc_insertion_point(field_set:Proto.Message.ProtoPlayerInfo.diamond)
}

// optional uint32 point = 6;
inline void ProtoPlayerInfo::clear_point() {
  point_ = 0u;
}
inline ::google::protobuf::uint32 ProtoPlayerInfo::point() const {
  // @@protoc_insertion_point(field_get:Proto.Message.ProtoPlayerInfo.point)
  return point_;
}
inline void ProtoPlayerInfo::set_point(::google::protobuf::uint32 value) {
  
  point_ = value;
  // @@protoc_insertion_point(field_set:Proto.Message.ProtoPlayerInfo.point)
}

// optional uint32 power = 8;
inline void ProtoPlayerInfo::clear_power() {
  power_ = 0u;
}
inline ::google::protobuf::uint32 ProtoPlayerInfo::power() const {
  // @@protoc_insertion_point(field_get:Proto.Message.ProtoPlayerInfo.power)
  return power_;
}
inline void ProtoPlayerInfo::set_power(::google::protobuf::uint32 value) {
  
  power_ = value;
  // @@protoc_insertion_point(field_set:Proto.Message.ProtoPlayerInfo.power)
}

// optional uint32 exp = 9;
inline void ProtoPlayerInfo::clear_exp() {
  exp_ = 0u;
}
inline ::google::protobuf::uint32 ProtoPlayerInfo::exp() const {
  // @@protoc_insertion_point(field_get:Proto.Message.ProtoPlayerInfo.exp)
  return exp_;
}
inline void ProtoPlayerInfo::set_exp(::google::protobuf::uint32 value) {
  
  exp_ = value;
  // @@protoc_insertion_point(field_set:Proto.Message.ProtoPlayerInfo.exp)
}

// optional uint32 level = 10;
inline void ProtoPlayerInfo::clear_level() {
  level_ = 0u;
}
inline ::google::protobuf::uint32 ProtoPlayerInfo::level() const {
  // @@protoc_insertion_point(field_get:Proto.Message.ProtoPlayerInfo.level)
  return level_;
}
inline void ProtoPlayerInfo::set_level(::google::protobuf::uint32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:Proto.Message.ProtoPlayerInfo.level)
}

// optional string avatar = 12;
inline void ProtoPlayerInfo::clear_avatar() {
  avatar_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ProtoPlayerInfo::avatar() const {
  // @@protoc_insertion_point(field_get:Proto.Message.ProtoPlayerInfo.avatar)
  return avatar_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProtoPlayerInfo::set_avatar(const ::std::string& value) {
  
  avatar_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Proto.Message.ProtoPlayerInfo.avatar)
}
inline void ProtoPlayerInfo::set_avatar(const char* value) {
  
  avatar_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Proto.Message.ProtoPlayerInfo.avatar)
}
inline void ProtoPlayerInfo::set_avatar(const char* value, size_t size) {
  
  avatar_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Proto.Message.ProtoPlayerInfo.avatar)
}
inline ::std::string* ProtoPlayerInfo::mutable_avatar() {
  
  // @@protoc_insertion_point(field_mutable:Proto.Message.ProtoPlayerInfo.avatar)
  return avatar_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProtoPlayerInfo::release_avatar() {
  // @@protoc_insertion_point(field_release:Proto.Message.ProtoPlayerInfo.avatar)
  
  return avatar_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProtoPlayerInfo::set_allocated_avatar(::std::string* avatar) {
  if (avatar != NULL) {
    
  } else {
    
  }
  avatar_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), avatar);
  // @@protoc_insertion_point(field_set_allocated:Proto.Message.ProtoPlayerInfo.avatar)
}

// optional uint32 nextLevelExp = 13;
inline void ProtoPlayerInfo::clear_nextlevelexp() {
  nextlevelexp_ = 0u;
}
inline ::google::protobuf::uint32 ProtoPlayerInfo::nextlevelexp() const {
  // @@protoc_insertion_point(field_get:Proto.Message.ProtoPlayerInfo.nextLevelExp)
  return nextlevelexp_;
}
inline void ProtoPlayerInfo::set_nextlevelexp(::google::protobuf::uint32 value) {
  
  nextlevelexp_ = value;
  // @@protoc_insertion_point(field_set:Proto.Message.ProtoPlayerInfo.nextLevelExp)
}

// optional uint32 skillPoint = 14;
inline void ProtoPlayerInfo::clear_skillpoint() {
  skillpoint_ = 0u;
}
inline ::google::protobuf::uint32 ProtoPlayerInfo::skillpoint() const {
  // @@protoc_insertion_point(field_get:Proto.Message.ProtoPlayerInfo.skillPoint)
  return skillpoint_;
}
inline void ProtoPlayerInfo::set_skillpoint(::google::protobuf::uint32 value) {
  
  skillpoint_ = value;
  // @@protoc_insertion_point(field_set:Proto.Message.ProtoPlayerInfo.skillPoint)
}

// repeated .Proto.Message.ProtoPlayerItem playerItems = 15;
inline int ProtoPlayerInfo::playeritems_size() const {
  return playeritems_.size();
}
inline void ProtoPlayerInfo::clear_playeritems() {
  playeritems_.Clear();
}
inline const ::Proto::Message::ProtoPlayerItem& ProtoPlayerInfo::playeritems(int index) const {
  // @@protoc_insertion_point(field_get:Proto.Message.ProtoPlayerInfo.playerItems)
  return playeritems_.Get(index);
}
inline ::Proto::Message::ProtoPlayerItem* ProtoPlayerInfo::mutable_playeritems(int index) {
  // @@protoc_insertion_point(field_mutable:Proto.Message.ProtoPlayerInfo.playerItems)
  return playeritems_.Mutable(index);
}
inline ::Proto::Message::ProtoPlayerItem* ProtoPlayerInfo::add_playeritems() {
  // @@protoc_insertion_point(field_add:Proto.Message.ProtoPlayerInfo.playerItems)
  return playeritems_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Proto::Message::ProtoPlayerItem >*
ProtoPlayerInfo::mutable_playeritems() {
  // @@protoc_insertion_point(field_mutable_list:Proto.Message.ProtoPlayerInfo.playerItems)
  return &playeritems_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Proto::Message::ProtoPlayerItem >&
ProtoPlayerInfo::playeritems() const {
  // @@protoc_insertion_point(field_list:Proto.Message.ProtoPlayerInfo.playerItems)
  return playeritems_;
}

// repeated .Proto.Message.ProtoPlayerGarage playerGarages = 16;
inline int ProtoPlayerInfo::playergarages_size() const {
  return playergarages_.size();
}
inline void ProtoPlayerInfo::clear_playergarages() {
  playergarages_.Clear();
}
inline const ::Proto::Message::ProtoPlayerGarage& ProtoPlayerInfo::playergarages(int index) const {
  // @@protoc_insertion_point(field_get:Proto.Message.ProtoPlayerInfo.playerGarages)
  return playergarages_.Get(index);
}
inline ::Proto::Message::ProtoPlayerGarage* ProtoPlayerInfo::mutable_playergarages(int index) {
  // @@protoc_insertion_point(field_mutable:Proto.Message.ProtoPlayerInfo.playerGarages)
  return playergarages_.Mutable(index);
}
inline ::Proto::Message::ProtoPlayerGarage* ProtoPlayerInfo::add_playergarages() {
  // @@protoc_insertion_point(field_add:Proto.Message.ProtoPlayerInfo.playerGarages)
  return playergarages_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Proto::Message::ProtoPlayerGarage >*
ProtoPlayerInfo::mutable_playergarages() {
  // @@protoc_insertion_point(field_mutable_list:Proto.Message.ProtoPlayerInfo.playerGarages)
  return &playergarages_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Proto::Message::ProtoPlayerGarage >&
ProtoPlayerInfo::playergarages() const {
  // @@protoc_insertion_point(field_list:Proto.Message.ProtoPlayerInfo.playerGarages)
  return playergarages_;
}

// optional uint32 sysCharacterId = 17;
inline void ProtoPlayerInfo::clear_syscharacterid() {
  syscharacterid_ = 0u;
}
inline ::google::protobuf::uint32 ProtoPlayerInfo::syscharacterid() const {
  // @@protoc_insertion_point(field_get:Proto.Message.ProtoPlayerInfo.sysCharacterId)
  return syscharacterid_;
}
inline void ProtoPlayerInfo::set_syscharacterid(::google::protobuf::uint32 value) {
  
  syscharacterid_ = value;
  // @@protoc_insertion_point(field_set:Proto.Message.ProtoPlayerInfo.sysCharacterId)
}

// optional string lastLoginTime = 26;
inline void ProtoPlayerInfo::clear_lastlogintime() {
  lastlogintime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ProtoPlayerInfo::lastlogintime() const {
  // @@protoc_insertion_point(field_get:Proto.Message.ProtoPlayerInfo.lastLoginTime)
  return lastlogintime_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProtoPlayerInfo::set_lastlogintime(const ::std::string& value) {
  
  lastlogintime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Proto.Message.ProtoPlayerInfo.lastLoginTime)
}
inline void ProtoPlayerInfo::set_lastlogintime(const char* value) {
  
  lastlogintime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Proto.Message.ProtoPlayerInfo.lastLoginTime)
}
inline void ProtoPlayerInfo::set_lastlogintime(const char* value, size_t size) {
  
  lastlogintime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Proto.Message.ProtoPlayerInfo.lastLoginTime)
}
inline ::std::string* ProtoPlayerInfo::mutable_lastlogintime() {
  
  // @@protoc_insertion_point(field_mutable:Proto.Message.ProtoPlayerInfo.lastLoginTime)
  return lastlogintime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProtoPlayerInfo::release_lastlogintime() {
  // @@protoc_insertion_point(field_release:Proto.Message.ProtoPlayerInfo.lastLoginTime)
  
  return lastlogintime_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProtoPlayerInfo::set_allocated_lastlogintime(::std::string* lastlogintime) {
  if (lastlogintime != NULL) {
    
  } else {
    
  }
  lastlogintime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), lastlogintime);
  // @@protoc_insertion_point(field_set_allocated:Proto.Message.ProtoPlayerInfo.lastLoginTime)
}

// optional uint32 flag = 31;
inline void ProtoPlayerInfo::clear_flag() {
  flag_ = 0u;
}
inline ::google::protobuf::uint32 ProtoPlayerInfo::flag() const {
  // @@protoc_insertion_point(field_get:Proto.Message.ProtoPlayerInfo.flag)
  return flag_;
}
inline void ProtoPlayerInfo::set_flag(::google::protobuf::uint32 value) {
  
  flag_ = value;
  // @@protoc_insertion_point(field_set:Proto.Message.ProtoPlayerInfo.flag)
}

// optional float battleFire = 32;
inline void ProtoPlayerInfo::clear_battlefire() {
  battlefire_ = 0;
}
inline float ProtoPlayerInfo::battlefire() const {
  // @@protoc_insertion_point(field_get:Proto.Message.ProtoPlayerInfo.battleFire)
  return battlefire_;
}
inline void ProtoPlayerInfo::set_battlefire(float value) {
  
  battlefire_ = value;
  // @@protoc_insertion_point(field_set:Proto.Message.ProtoPlayerInfo.battleFire)
}

// optional uint32 newbieProgress = 37;
inline void ProtoPlayerInfo::clear_newbieprogress() {
  newbieprogress_ = 0u;
}
inline ::google::protobuf::uint32 ProtoPlayerInfo::newbieprogress() const {
  // @@protoc_insertion_point(field_get:Proto.Message.ProtoPlayerInfo.newbieProgress)
  return newbieprogress_;
}
inline void ProtoPlayerInfo::set_newbieprogress(::google::protobuf::uint32 value) {
  
  newbieprogress_ = value;
  // @@protoc_insertion_point(field_set:Proto.Message.ProtoPlayerInfo.newbieProgress)
}

// optional bool haveNewMail = 39;
inline void ProtoPlayerInfo::clear_havenewmail() {
  havenewmail_ = false;
}
inline bool ProtoPlayerInfo::havenewmail() const {
  // @@protoc_insertion_point(field_get:Proto.Message.ProtoPlayerInfo.haveNewMail)
  return havenewmail_;
}
inline void ProtoPlayerInfo::set_havenewmail(bool value) {
  
  havenewmail_ = value;
  // @@protoc_insertion_point(field_set:Proto.Message.ProtoPlayerInfo.haveNewMail)
}

// optional uint32 questScore = 40;
inline void ProtoPlayerInfo::clear_questscore() {
  questscore_ = 0u;
}
inline ::google::protobuf::uint32 ProtoPlayerInfo::questscore() const {
  // @@protoc_insertion_point(field_get:Proto.Message.ProtoPlayerInfo.questScore)
  return questscore_;
}
inline void ProtoPlayerInfo::set_questscore(::google::protobuf::uint32 value) {
  
  questscore_ = value;
  // @@protoc_insertion_point(field_set:Proto.Message.ProtoPlayerInfo.questScore)
}

// optional string nextPvpTime = 41;
inline void ProtoPlayerInfo::clear_nextpvptime() {
  nextpvptime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ProtoPlayerInfo::nextpvptime() const {
  // @@protoc_insertion_point(field_get:Proto.Message.ProtoPlayerInfo.nextPvpTime)
  return nextpvptime_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProtoPlayerInfo::set_nextpvptime(const ::std::string& value) {
  
  nextpvptime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Proto.Message.ProtoPlayerInfo.nextPvpTime)
}
inline void ProtoPlayerInfo::set_nextpvptime(const char* value) {
  
  nextpvptime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Proto.Message.ProtoPlayerInfo.nextPvpTime)
}
inline void ProtoPlayerInfo::set_nextpvptime(const char* value, size_t size) {
  
  nextpvptime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Proto.Message.ProtoPlayerInfo.nextPvpTime)
}
inline ::std::string* ProtoPlayerInfo::mutable_nextpvptime() {
  
  // @@protoc_insertion_point(field_mutable:Proto.Message.ProtoPlayerInfo.nextPvpTime)
  return nextpvptime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProtoPlayerInfo::release_nextpvptime() {
  // @@protoc_insertion_point(field_release:Proto.Message.ProtoPlayerInfo.nextPvpTime)
  
  return nextpvptime_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProtoPlayerInfo::set_allocated_nextpvptime(::std::string* nextpvptime) {
  if (nextpvptime != NULL) {
    
  } else {
    
  }
  nextpvptime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nextpvptime);
  // @@protoc_insertion_point(field_set_allocated:Proto.Message.ProtoPlayerInfo.nextPvpTime)
}

// optional string lastPvpTime = 42;
inline void ProtoPlayerInfo::clear_lastpvptime() {
  lastpvptime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ProtoPlayerInfo::lastpvptime() const {
  // @@protoc_insertion_point(field_get:Proto.Message.ProtoPlayerInfo.lastPvpTime)
  return lastpvptime_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProtoPlayerInfo::set_lastpvptime(const ::std::string& value) {
  
  lastpvptime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Proto.Message.ProtoPlayerInfo.lastPvpTime)
}
inline void ProtoPlayerInfo::set_lastpvptime(const char* value) {
  
  lastpvptime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Proto.Message.ProtoPlayerInfo.lastPvpTime)
}
inline void ProtoPlayerInfo::set_lastpvptime(const char* value, size_t size) {
  
  lastpvptime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Proto.Message.ProtoPlayerInfo.lastPvpTime)
}
inline ::std::string* ProtoPlayerInfo::mutable_lastpvptime() {
  
  // @@protoc_insertion_point(field_mutable:Proto.Message.ProtoPlayerInfo.lastPvpTime)
  return lastpvptime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProtoPlayerInfo::release_lastpvptime() {
  // @@protoc_insertion_point(field_release:Proto.Message.ProtoPlayerInfo.lastPvpTime)
  
  return lastpvptime_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProtoPlayerInfo::set_allocated_lastpvptime(::std::string* lastpvptime) {
  if (lastpvptime != NULL) {
    
  } else {
    
  }
  lastpvptime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), lastpvptime);
  // @@protoc_insertion_point(field_set_allocated:Proto.Message.ProtoPlayerInfo.lastPvpTime)
}

// optional uint32 reviveCount = 43;
inline void ProtoPlayerInfo::clear_revivecount() {
  revivecount_ = 0u;
}
inline ::google::protobuf::uint32 ProtoPlayerInfo::revivecount() const {
  // @@protoc_insertion_point(field_get:Proto.Message.ProtoPlayerInfo.reviveCount)
  return revivecount_;
}
inline void ProtoPlayerInfo::set_revivecount(::google::protobuf::uint32 value) {
  
  revivecount_ = value;
  // @@protoc_insertion_point(field_set:Proto.Message.ProtoPlayerInfo.reviveCount)
}

// optional string activateTime = 45;
inline void ProtoPlayerInfo::clear_activatetime() {
  activatetime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ProtoPlayerInfo::activatetime() const {
  // @@protoc_insertion_point(field_get:Proto.Message.ProtoPlayerInfo.activateTime)
  return activatetime_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProtoPlayerInfo::set_activatetime(const ::std::string& value) {
  
  activatetime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Proto.Message.ProtoPlayerInfo.activateTime)
}
inline void ProtoPlayerInfo::set_activatetime(const char* value) {
  
  activatetime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Proto.Message.ProtoPlayerInfo.activateTime)
}
inline void ProtoPlayerInfo::set_activatetime(const char* value, size_t size) {
  
  activatetime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Proto.Message.ProtoPlayerInfo.activateTime)
}
inline ::std::string* ProtoPlayerInfo::mutable_activatetime() {
  
  // @@protoc_insertion_point(field_mutable:Proto.Message.ProtoPlayerInfo.activateTime)
  return activatetime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProtoPlayerInfo::release_activatetime() {
  // @@protoc_insertion_point(field_release:Proto.Message.ProtoPlayerInfo.activateTime)
  
  return activatetime_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProtoPlayerInfo::set_allocated_activatetime(::std::string* activatetime) {
  if (activatetime != NULL) {
    
  } else {
    
  }
  activatetime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), activatetime);
  // @@protoc_insertion_point(field_set_allocated:Proto.Message.ProtoPlayerInfo.activateTime)
}

// optional uint32 armorSuitLevel = 49;
inline void ProtoPlayerInfo::clear_armorsuitlevel() {
  armorsuitlevel_ = 0u;
}
inline ::google::protobuf::uint32 ProtoPlayerInfo::armorsuitlevel() const {
  // @@protoc_insertion_point(field_get:Proto.Message.ProtoPlayerInfo.armorSuitLevel)
  return armorsuitlevel_;
}
inline void ProtoPlayerInfo::set_armorsuitlevel(::google::protobuf::uint32 value) {
  
  armorsuitlevel_ = value;
  // @@protoc_insertion_point(field_set:Proto.Message.ProtoPlayerInfo.armorSuitLevel)
}

// optional uint32 stamina = 50;
inline void ProtoPlayerInfo::clear_stamina() {
  stamina_ = 0u;
}
inline ::google::protobuf::uint32 ProtoPlayerInfo::stamina() const {
  // @@protoc_insertion_point(field_get:Proto.Message.ProtoPlayerInfo.stamina)
  return stamina_;
}
inline void ProtoPlayerInfo::set_stamina(::google::protobuf::uint32 value) {
  
  stamina_ = value;
  // @@protoc_insertion_point(field_set:Proto.Message.ProtoPlayerInfo.stamina)
}

// optional uint32 vipLevel = 52;
inline void ProtoPlayerInfo::clear_viplevel() {
  viplevel_ = 0u;
}
inline ::google::protobuf::uint32 ProtoPlayerInfo::viplevel() const {
  // @@protoc_insertion_point(field_get:Proto.Message.ProtoPlayerInfo.vipLevel)
  return viplevel_;
}
inline void ProtoPlayerInfo::set_viplevel(::google::protobuf::uint32 value) {
  
  viplevel_ = value;
  // @@protoc_insertion_point(field_set:Proto.Message.ProtoPlayerInfo.vipLevel)
}

// optional uint32 buyStaminaCount = 54;
inline void ProtoPlayerInfo::clear_buystaminacount() {
  buystaminacount_ = 0u;
}
inline ::google::protobuf::uint32 ProtoPlayerInfo::buystaminacount() const {
  // @@protoc_insertion_point(field_get:Proto.Message.ProtoPlayerInfo.buyStaminaCount)
  return buystaminacount_;
}
inline void ProtoPlayerInfo::set_buystaminacount(::google::protobuf::uint32 value) {
  
  buystaminacount_ = value;
  // @@protoc_insertion_point(field_set:Proto.Message.ProtoPlayerInfo.buyStaminaCount)
}

// optional uint32 buyGoldCount = 55;
inline void ProtoPlayerInfo::clear_buygoldcount() {
  buygoldcount_ = 0u;
}
inline ::google::protobuf::uint32 ProtoPlayerInfo::buygoldcount() const {
  // @@protoc_insertion_point(field_get:Proto.Message.ProtoPlayerInfo.buyGoldCount)
  return buygoldcount_;
}
inline void ProtoPlayerInfo::set_buygoldcount(::google::protobuf::uint32 value) {
  
  buygoldcount_ = value;
  // @@protoc_insertion_point(field_set:Proto.Message.ProtoPlayerInfo.buyGoldCount)
}

// optional uint32 refreshShopCount = 56;
inline void ProtoPlayerInfo::clear_refreshshopcount() {
  refreshshopcount_ = 0u;
}
inline ::google::protobuf::uint32 ProtoPlayerInfo::refreshshopcount() const {
  // @@protoc_insertion_point(field_get:Proto.Message.ProtoPlayerInfo.refreshShopCount)
  return refreshshopcount_;
}
inline void ProtoPlayerInfo::set_refreshshopcount(::google::protobuf::uint32 value) {
  
  refreshshopcount_ = value;
  // @@protoc_insertion_point(field_set:Proto.Message.ProtoPlayerInfo.refreshShopCount)
}

// optional uint32 buyTrialCount = 57;
inline void ProtoPlayerInfo::clear_buytrialcount() {
  buytrialcount_ = 0u;
}
inline ::google::protobuf::uint32 ProtoPlayerInfo::buytrialcount() const {
  // @@protoc_insertion_point(field_get:Proto.Message.ProtoPlayerInfo.buyTrialCount)
  return buytrialcount_;
}
inline void ProtoPlayerInfo::set_buytrialcount(::google::protobuf::uint32 value) {
  
  buytrialcount_ = value;
  // @@protoc_insertion_point(field_set:Proto.Message.ProtoPlayerInfo.buyTrialCount)
}

// optional uint32 buyPowerCount = 58;
inline void ProtoPlayerInfo::clear_buypowercount() {
  buypowercount_ = 0u;
}
inline ::google::protobuf::uint32 ProtoPlayerInfo::buypowercount() const {
  // @@protoc_insertion_point(field_get:Proto.Message.ProtoPlayerInfo.buyPowerCount)
  return buypowercount_;
}
inline void ProtoPlayerInfo::set_buypowercount(::google::protobuf::uint32 value) {
  
  buypowercount_ = value;
  // @@protoc_insertion_point(field_set:Proto.Message.ProtoPlayerInfo.buyPowerCount)
}

// optional uint32 eliteCount = 59;
inline void ProtoPlayerInfo::clear_elitecount() {
  elitecount_ = 0u;
}
inline ::google::protobuf::uint32 ProtoPlayerInfo::elitecount() const {
  // @@protoc_insertion_point(field_get:Proto.Message.ProtoPlayerInfo.eliteCount)
  return elitecount_;
}
inline void ProtoPlayerInfo::set_elitecount(::google::protobuf::uint32 value) {
  
  elitecount_ = value;
  // @@protoc_insertion_point(field_set:Proto.Message.ProtoPlayerInfo.eliteCount)
}

// optional .Proto.Message.AccountType accountType = 60;
inline void ProtoPlayerInfo::clear_accounttype() {
  accounttype_ = 0;
}
inline ::Proto::Message::AccountType ProtoPlayerInfo::accounttype() const {
  // @@protoc_insertion_point(field_get:Proto.Message.ProtoPlayerInfo.accountType)
  return static_cast< ::Proto::Message::AccountType >(accounttype_);
}
inline void ProtoPlayerInfo::set_accounttype(::Proto::Message::AccountType value) {
  
  accounttype_ = value;
  // @@protoc_insertion_point(field_set:Proto.Message.ProtoPlayerInfo.accountType)
}

// optional string staminaIds = 63;
inline void ProtoPlayerInfo::clear_staminaids() {
  staminaids_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ProtoPlayerInfo::staminaids() const {
  // @@protoc_insertion_point(field_get:Proto.Message.ProtoPlayerInfo.staminaIds)
  return staminaids_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProtoPlayerInfo::set_staminaids(const ::std::string& value) {
  
  staminaids_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Proto.Message.ProtoPlayerInfo.staminaIds)
}
inline void ProtoPlayerInfo::set_staminaids(const char* value) {
  
  staminaids_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Proto.Message.ProtoPlayerInfo.staminaIds)
}
inline void ProtoPlayerInfo::set_staminaids(const char* value, size_t size) {
  
  staminaids_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Proto.Message.ProtoPlayerInfo.staminaIds)
}
inline ::std::string* ProtoPlayerInfo::mutable_staminaids() {
  
  // @@protoc_insertion_point(field_mutable:Proto.Message.ProtoPlayerInfo.staminaIds)
  return staminaids_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProtoPlayerInfo::release_staminaids() {
  // @@protoc_insertion_point(field_release:Proto.Message.ProtoPlayerInfo.staminaIds)
  
  return staminaids_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProtoPlayerInfo::set_allocated_staminaids(::std::string* staminaids) {
  if (staminaids != NULL) {
    
  } else {
    
  }
  staminaids_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), staminaids);
  // @@protoc_insertion_point(field_set_allocated:Proto.Message.ProtoPlayerInfo.staminaIds)
}

// optional uint32 storageSlots = 65;
inline void ProtoPlayerInfo::clear_storageslots() {
  storageslots_ = 0u;
}
inline ::google::protobuf::uint32 ProtoPlayerInfo::storageslots() const {
  // @@protoc_insertion_point(field_get:Proto.Message.ProtoPlayerInfo.storageSlots)
  return storageslots_;
}
inline void ProtoPlayerInfo::set_storageslots(::google::protobuf::uint32 value) {
  
  storageslots_ = value;
  // @@protoc_insertion_point(field_set:Proto.Message.ProtoPlayerInfo.storageSlots)
}

// optional string serverZoneId = 100;
inline void ProtoPlayerInfo::clear_serverzoneid() {
  serverzoneid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ProtoPlayerInfo::serverzoneid() const {
  // @@protoc_insertion_point(field_get:Proto.Message.ProtoPlayerInfo.serverZoneId)
  return serverzoneid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProtoPlayerInfo::set_serverzoneid(const ::std::string& value) {
  
  serverzoneid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Proto.Message.ProtoPlayerInfo.serverZoneId)
}
inline void ProtoPlayerInfo::set_serverzoneid(const char* value) {
  
  serverzoneid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Proto.Message.ProtoPlayerInfo.serverZoneId)
}
inline void ProtoPlayerInfo::set_serverzoneid(const char* value, size_t size) {
  
  serverzoneid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Proto.Message.ProtoPlayerInfo.serverZoneId)
}
inline ::std::string* ProtoPlayerInfo::mutable_serverzoneid() {
  
  // @@protoc_insertion_point(field_mutable:Proto.Message.ProtoPlayerInfo.serverZoneId)
  return serverzoneid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProtoPlayerInfo::release_serverzoneid() {
  // @@protoc_insertion_point(field_release:Proto.Message.ProtoPlayerInfo.serverZoneId)
  
  return serverzoneid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProtoPlayerInfo::set_allocated_serverzoneid(::std::string* serverzoneid) {
  if (serverzoneid != NULL) {
    
  } else {
    
  }
  serverzoneid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), serverzoneid);
  // @@protoc_insertion_point(field_set_allocated:Proto.Message.ProtoPlayerInfo.serverZoneId)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace Message
}  // namespace Proto

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::Proto::Message::ResponseCode> : ::google::protobuf::internal::true_type {};
template <> struct is_proto_enum< ::Proto::Message::AccountType> : ::google::protobuf::internal::true_type {};

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ClientData_2eproto__INCLUDED
