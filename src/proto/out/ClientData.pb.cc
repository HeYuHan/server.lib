// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ClientData.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ClientData.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)

namespace Proto {
namespace Message {

void protobuf_ShutdownFile_ClientData_2eproto() {
  delete UserLoginRequest::default_instance_;
  delete UserLoginResponse::default_instance_;
  delete UserActivateRequest::default_instance_;
  delete UserActivateResponse::default_instance_;
  delete PlayerLoginRequest::default_instance_;
  delete PlayerLoginResponse::default_instance_;
  delete PlayerLogoutRequest::default_instance_;
  delete PlayerLogoutResponse::default_instance_;
  delete PlayerCreateRequest::default_instance_;
  delete PlayerCreateResponse::default_instance_;
  delete ProtoPlayer::default_instance_;
  delete ProtoPlayerGarage::default_instance_;
  delete ProtoPlayerItem::default_instance_;
  delete ProtoPlayerInfo::default_instance_;
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
void protobuf_AddDesc_ClientData_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#else
void protobuf_AddDesc_ClientData_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_ClientData_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#endif
  UserLoginRequest::default_instance_ = new UserLoginRequest();
  UserLoginResponse::default_instance_ = new UserLoginResponse();
  UserActivateRequest::default_instance_ = new UserActivateRequest();
  UserActivateResponse::default_instance_ = new UserActivateResponse();
  PlayerLoginRequest::default_instance_ = new PlayerLoginRequest();
  PlayerLoginResponse::default_instance_ = new PlayerLoginResponse();
  PlayerLogoutRequest::default_instance_ = new PlayerLogoutRequest();
  PlayerLogoutResponse::default_instance_ = new PlayerLogoutResponse();
  PlayerCreateRequest::default_instance_ = new PlayerCreateRequest();
  PlayerCreateResponse::default_instance_ = new PlayerCreateResponse();
  ProtoPlayer::default_instance_ = new ProtoPlayer();
  ProtoPlayerGarage::default_instance_ = new ProtoPlayerGarage();
  ProtoPlayerItem::default_instance_ = new ProtoPlayerItem();
  ProtoPlayerInfo::default_instance_ = new ProtoPlayerInfo();
  UserLoginRequest::default_instance_->InitAsDefaultInstance();
  UserLoginResponse::default_instance_->InitAsDefaultInstance();
  UserActivateRequest::default_instance_->InitAsDefaultInstance();
  UserActivateResponse::default_instance_->InitAsDefaultInstance();
  PlayerLoginRequest::default_instance_->InitAsDefaultInstance();
  PlayerLoginResponse::default_instance_->InitAsDefaultInstance();
  PlayerLogoutRequest::default_instance_->InitAsDefaultInstance();
  PlayerLogoutResponse::default_instance_->InitAsDefaultInstance();
  PlayerCreateRequest::default_instance_->InitAsDefaultInstance();
  PlayerCreateResponse::default_instance_->InitAsDefaultInstance();
  ProtoPlayer::default_instance_->InitAsDefaultInstance();
  ProtoPlayerGarage::default_instance_->InitAsDefaultInstance();
  ProtoPlayerItem::default_instance_->InitAsDefaultInstance();
  ProtoPlayerInfo::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_ClientData_2eproto);
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_ClientData_2eproto_once_);
void protobuf_AddDesc_ClientData_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_ClientData_2eproto_once_,
                 &protobuf_AddDesc_ClientData_2eproto_impl);
}
#else
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_ClientData_2eproto {
  StaticDescriptorInitializer_ClientData_2eproto() {
    protobuf_AddDesc_ClientData_2eproto();
  }
} static_descriptor_initializer_ClientData_2eproto_;
#endif
bool ResponseCode_IsValid(int value) {
  switch(value) {
    case -10:
    case -9:
    case -8:
    case -7:
    case -6:
    case -5:
    case -4:
    case -3:
    case -2:
    case -1:
    case 0:
    case 100:
    case 101:
    case 102:
    case 103:
    case 104:
    case 150:
    case 151:
    case 152:
    case 153:
    case 154:
    case 155:
    case 156:
    case 157:
    case 158:
    case 159:
    case 160:
    case 161:
    case 162:
    case 163:
    case 164:
    case 165:
    case 200:
    case 201:
    case 202:
    case 203:
    case 204:
    case 205:
    case 206:
    case 208:
    case 209:
    case 210:
    case 211:
    case 212:
    case 213:
    case 214:
    case 215:
    case 216:
    case 217:
    case 219:
    case 250:
    case 251:
    case 255:
    case 256:
    case 260:
    case 650:
    case 700:
    case 701:
    case 850:
    case 851:
    case 852:
    case 853:
    case 900:
    case 901:
    case 902:
    case 1100:
    case 1200:
      return true;
    default:
      return false;
  }
}

bool AccountType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserLoginRequest::kUserNameFieldNumber;
const int UserLoginRequest::kUserPwdFieldNumber;
const int UserLoginRequest::kSdkUidFieldNumber;
const int UserLoginRequest::kSdkTokenFieldNumber;
const int UserLoginRequest::kIpFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserLoginRequest::UserLoginRequest()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Proto.Message.UserLoginRequest)
}

void UserLoginRequest::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

UserLoginRequest::UserLoginRequest(const UserLoginRequest& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Proto.Message.UserLoginRequest)
}

void UserLoginRequest::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  userpwd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sdk_uid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sdk_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

UserLoginRequest::~UserLoginRequest() {
  // @@protoc_insertion_point(destructor:Proto.Message.UserLoginRequest)
  SharedDtor();
}

void UserLoginRequest::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  userpwd_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sdk_uid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sdk_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void UserLoginRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const UserLoginRequest& UserLoginRequest::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_ClientData_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_ClientData_2eproto();
#endif
  return *default_instance_;
}

UserLoginRequest* UserLoginRequest::default_instance_ = NULL;

UserLoginRequest* UserLoginRequest::New(::google::protobuf::Arena* arena) const {
  UserLoginRequest* n = new UserLoginRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UserLoginRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Proto.Message.UserLoginRequest)
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  userpwd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sdk_uid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sdk_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool UserLoginRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Proto.Message.UserLoginRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string userName = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->username().data(), this->username().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Proto.Message.UserLoginRequest.userName"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_userPwd;
        break;
      }

      // optional string userPwd = 2;
      case 2: {
        if (tag == 18) {
         parse_userPwd:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_userpwd()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->userpwd().data(), this->userpwd().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Proto.Message.UserLoginRequest.userPwd"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_sdk_uid;
        break;
      }

      // optional string sdk_uid = 3;
      case 3: {
        if (tag == 26) {
         parse_sdk_uid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sdk_uid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sdk_uid().data(), this->sdk_uid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Proto.Message.UserLoginRequest.sdk_uid"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_sdk_token;
        break;
      }

      // optional string sdk_token = 4;
      case 4: {
        if (tag == 34) {
         parse_sdk_token:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sdk_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sdk_token().data(), this->sdk_token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Proto.Message.UserLoginRequest.sdk_token"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_ip;
        break;
      }

      // optional string ip = 5;
      case 5: {
        if (tag == 42) {
         parse_ip:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ip()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ip().data(), this->ip().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Proto.Message.UserLoginRequest.ip"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Proto.Message.UserLoginRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Proto.Message.UserLoginRequest)
  return false;
#undef DO_
}

void UserLoginRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Proto.Message.UserLoginRequest)
  // optional string userName = 1;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Proto.Message.UserLoginRequest.userName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->username(), output);
  }

  // optional string userPwd = 2;
  if (this->userpwd().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->userpwd().data(), this->userpwd().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Proto.Message.UserLoginRequest.userPwd");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->userpwd(), output);
  }

  // optional string sdk_uid = 3;
  if (this->sdk_uid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sdk_uid().data(), this->sdk_uid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Proto.Message.UserLoginRequest.sdk_uid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->sdk_uid(), output);
  }

  // optional string sdk_token = 4;
  if (this->sdk_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sdk_token().data(), this->sdk_token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Proto.Message.UserLoginRequest.sdk_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->sdk_token(), output);
  }

  // optional string ip = 5;
  if (this->ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip().data(), this->ip().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Proto.Message.UserLoginRequest.ip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->ip(), output);
  }

  // @@protoc_insertion_point(serialize_end:Proto.Message.UserLoginRequest)
}

int UserLoginRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Proto.Message.UserLoginRequest)
  int total_size = 0;

  // optional string userName = 1;
  if (this->username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  // optional string userPwd = 2;
  if (this->userpwd().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->userpwd());
  }

  // optional string sdk_uid = 3;
  if (this->sdk_uid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sdk_uid());
  }

  // optional string sdk_token = 4;
  if (this->sdk_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sdk_token());
  }

  // optional string ip = 5;
  if (this->ip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ip());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserLoginRequest::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const UserLoginRequest*>(&from));
}

void UserLoginRequest::MergeFrom(const UserLoginRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Proto.Message.UserLoginRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.username().size() > 0) {

    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  if (from.userpwd().size() > 0) {

    userpwd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userpwd_);
  }
  if (from.sdk_uid().size() > 0) {

    sdk_uid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sdk_uid_);
  }
  if (from.sdk_token().size() > 0) {

    sdk_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sdk_token_);
  }
  if (from.ip().size() > 0) {

    ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
  }
}

void UserLoginRequest::CopyFrom(const UserLoginRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Proto.Message.UserLoginRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserLoginRequest::IsInitialized() const {

  return true;
}

void UserLoginRequest::Swap(UserLoginRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserLoginRequest::InternalSwap(UserLoginRequest* other) {
  username_.Swap(&other->username_);
  userpwd_.Swap(&other->userpwd_);
  sdk_uid_.Swap(&other->sdk_uid_);
  sdk_token_.Swap(&other->sdk_token_);
  ip_.Swap(&other->ip_);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string UserLoginRequest::GetTypeName() const {
  return "Proto.Message.UserLoginRequest";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UserLoginRequest

// optional string userName = 1;
void UserLoginRequest::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& UserLoginRequest::username() const {
  // @@protoc_insertion_point(field_get:Proto.Message.UserLoginRequest.userName)
  return username_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void UserLoginRequest::set_username(const ::std::string& value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Proto.Message.UserLoginRequest.userName)
}
 void UserLoginRequest::set_username(const char* value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Proto.Message.UserLoginRequest.userName)
}
 void UserLoginRequest::set_username(const char* value, size_t size) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Proto.Message.UserLoginRequest.userName)
}
 ::std::string* UserLoginRequest::mutable_username() {
  
  // @@protoc_insertion_point(field_mutable:Proto.Message.UserLoginRequest.userName)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* UserLoginRequest::release_username() {
  // @@protoc_insertion_point(field_release:Proto.Message.UserLoginRequest.userName)
  
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void UserLoginRequest::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    
  } else {
    
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:Proto.Message.UserLoginRequest.userName)
}

// optional string userPwd = 2;
void UserLoginRequest::clear_userpwd() {
  userpwd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& UserLoginRequest::userpwd() const {
  // @@protoc_insertion_point(field_get:Proto.Message.UserLoginRequest.userPwd)
  return userpwd_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void UserLoginRequest::set_userpwd(const ::std::string& value) {
  
  userpwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Proto.Message.UserLoginRequest.userPwd)
}
 void UserLoginRequest::set_userpwd(const char* value) {
  
  userpwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Proto.Message.UserLoginRequest.userPwd)
}
 void UserLoginRequest::set_userpwd(const char* value, size_t size) {
  
  userpwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Proto.Message.UserLoginRequest.userPwd)
}
 ::std::string* UserLoginRequest::mutable_userpwd() {
  
  // @@protoc_insertion_point(field_mutable:Proto.Message.UserLoginRequest.userPwd)
  return userpwd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* UserLoginRequest::release_userpwd() {
  // @@protoc_insertion_point(field_release:Proto.Message.UserLoginRequest.userPwd)
  
  return userpwd_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void UserLoginRequest::set_allocated_userpwd(::std::string* userpwd) {
  if (userpwd != NULL) {
    
  } else {
    
  }
  userpwd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), userpwd);
  // @@protoc_insertion_point(field_set_allocated:Proto.Message.UserLoginRequest.userPwd)
}

// optional string sdk_uid = 3;
void UserLoginRequest::clear_sdk_uid() {
  sdk_uid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& UserLoginRequest::sdk_uid() const {
  // @@protoc_insertion_point(field_get:Proto.Message.UserLoginRequest.sdk_uid)
  return sdk_uid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void UserLoginRequest::set_sdk_uid(const ::std::string& value) {
  
  sdk_uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Proto.Message.UserLoginRequest.sdk_uid)
}
 void UserLoginRequest::set_sdk_uid(const char* value) {
  
  sdk_uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Proto.Message.UserLoginRequest.sdk_uid)
}
 void UserLoginRequest::set_sdk_uid(const char* value, size_t size) {
  
  sdk_uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Proto.Message.UserLoginRequest.sdk_uid)
}
 ::std::string* UserLoginRequest::mutable_sdk_uid() {
  
  // @@protoc_insertion_point(field_mutable:Proto.Message.UserLoginRequest.sdk_uid)
  return sdk_uid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* UserLoginRequest::release_sdk_uid() {
  // @@protoc_insertion_point(field_release:Proto.Message.UserLoginRequest.sdk_uid)
  
  return sdk_uid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void UserLoginRequest::set_allocated_sdk_uid(::std::string* sdk_uid) {
  if (sdk_uid != NULL) {
    
  } else {
    
  }
  sdk_uid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sdk_uid);
  // @@protoc_insertion_point(field_set_allocated:Proto.Message.UserLoginRequest.sdk_uid)
}

// optional string sdk_token = 4;
void UserLoginRequest::clear_sdk_token() {
  sdk_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& UserLoginRequest::sdk_token() const {
  // @@protoc_insertion_point(field_get:Proto.Message.UserLoginRequest.sdk_token)
  return sdk_token_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void UserLoginRequest::set_sdk_token(const ::std::string& value) {
  
  sdk_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Proto.Message.UserLoginRequest.sdk_token)
}
 void UserLoginRequest::set_sdk_token(const char* value) {
  
  sdk_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Proto.Message.UserLoginRequest.sdk_token)
}
 void UserLoginRequest::set_sdk_token(const char* value, size_t size) {
  
  sdk_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Proto.Message.UserLoginRequest.sdk_token)
}
 ::std::string* UserLoginRequest::mutable_sdk_token() {
  
  // @@protoc_insertion_point(field_mutable:Proto.Message.UserLoginRequest.sdk_token)
  return sdk_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* UserLoginRequest::release_sdk_token() {
  // @@protoc_insertion_point(field_release:Proto.Message.UserLoginRequest.sdk_token)
  
  return sdk_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void UserLoginRequest::set_allocated_sdk_token(::std::string* sdk_token) {
  if (sdk_token != NULL) {
    
  } else {
    
  }
  sdk_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sdk_token);
  // @@protoc_insertion_point(field_set_allocated:Proto.Message.UserLoginRequest.sdk_token)
}

// optional string ip = 5;
void UserLoginRequest::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& UserLoginRequest::ip() const {
  // @@protoc_insertion_point(field_get:Proto.Message.UserLoginRequest.ip)
  return ip_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void UserLoginRequest::set_ip(const ::std::string& value) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Proto.Message.UserLoginRequest.ip)
}
 void UserLoginRequest::set_ip(const char* value) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Proto.Message.UserLoginRequest.ip)
}
 void UserLoginRequest::set_ip(const char* value, size_t size) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Proto.Message.UserLoginRequest.ip)
}
 ::std::string* UserLoginRequest::mutable_ip() {
  
  // @@protoc_insertion_point(field_mutable:Proto.Message.UserLoginRequest.ip)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* UserLoginRequest::release_ip() {
  // @@protoc_insertion_point(field_release:Proto.Message.UserLoginRequest.ip)
  
  return ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void UserLoginRequest::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    
  } else {
    
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:Proto.Message.UserLoginRequest.ip)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserLoginResponse::kIdFieldNumber;
const int UserLoginResponse::kUserNameFieldNumber;
const int UserLoginResponse::kPlayersFieldNumber;
const int UserLoginResponse::kSdkUidFieldNumber;
const int UserLoginResponse::kSdkTokenFieldNumber;
const int UserLoginResponse::kIsActivateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserLoginResponse::UserLoginResponse()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Proto.Message.UserLoginResponse)
}

void UserLoginResponse::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

UserLoginResponse::UserLoginResponse(const UserLoginResponse& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Proto.Message.UserLoginResponse)
}

void UserLoginResponse::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_ = GOOGLE_LONGLONG(0);
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sdkuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sdktoken_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  isactivate_ = false;
}

UserLoginResponse::~UserLoginResponse() {
  // @@protoc_insertion_point(destructor:Proto.Message.UserLoginResponse)
  SharedDtor();
}

void UserLoginResponse::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sdkuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sdktoken_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void UserLoginResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const UserLoginResponse& UserLoginResponse::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_ClientData_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_ClientData_2eproto();
#endif
  return *default_instance_;
}

UserLoginResponse* UserLoginResponse::default_instance_ = NULL;

UserLoginResponse* UserLoginResponse::New(::google::protobuf::Arena* arena) const {
  UserLoginResponse* n = new UserLoginResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UserLoginResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Proto.Message.UserLoginResponse)
  id_ = GOOGLE_LONGLONG(0);
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sdkuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sdktoken_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  isactivate_ = false;
  players_.Clear();
}

bool UserLoginResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Proto.Message.UserLoginResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint64 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_userName;
        break;
      }

      // optional string userName = 2;
      case 2: {
        if (tag == 18) {
         parse_userName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->username().data(), this->username().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Proto.Message.UserLoginResponse.userName"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_players;
        break;
      }

      // repeated .Proto.Message.ProtoPlayer players = 3;
      case 3: {
        if (tag == 26) {
         parse_players:
          DO_(input->IncrementRecursionDepth());
         parse_loop_players:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_players()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_players;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(34)) goto parse_sdkUid;
        break;
      }

      // optional string sdkUid = 4;
      case 4: {
        if (tag == 34) {
         parse_sdkUid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sdkuid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sdkuid().data(), this->sdkuid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Proto.Message.UserLoginResponse.sdkUid"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_sdkToken;
        break;
      }

      // optional string sdkToken = 5;
      case 5: {
        if (tag == 42) {
         parse_sdkToken:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sdktoken()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sdktoken().data(), this->sdktoken().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Proto.Message.UserLoginResponse.sdkToken"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_isActivate;
        break;
      }

      // optional bool isActivate = 6;
      case 6: {
        if (tag == 48) {
         parse_isActivate:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isactivate_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Proto.Message.UserLoginResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Proto.Message.UserLoginResponse)
  return false;
#undef DO_
}

void UserLoginResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Proto.Message.UserLoginResponse)
  // optional sint64 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(1, this->id(), output);
  }

  // optional string userName = 2;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Proto.Message.UserLoginResponse.userName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->username(), output);
  }

  // repeated .Proto.Message.ProtoPlayer players = 3;
  for (unsigned int i = 0, n = this->players_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      3, this->players(i), output);
  }

  // optional string sdkUid = 4;
  if (this->sdkuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sdkuid().data(), this->sdkuid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Proto.Message.UserLoginResponse.sdkUid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->sdkuid(), output);
  }

  // optional string sdkToken = 5;
  if (this->sdktoken().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sdktoken().data(), this->sdktoken().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Proto.Message.UserLoginResponse.sdkToken");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->sdktoken(), output);
  }

  // optional bool isActivate = 6;
  if (this->isactivate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->isactivate(), output);
  }

  // @@protoc_insertion_point(serialize_end:Proto.Message.UserLoginResponse)
}

int UserLoginResponse::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Proto.Message.UserLoginResponse)
  int total_size = 0;

  // optional sint64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->id());
  }

  // optional string userName = 2;
  if (this->username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  // optional string sdkUid = 4;
  if (this->sdkuid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sdkuid());
  }

  // optional string sdkToken = 5;
  if (this->sdktoken().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sdktoken());
  }

  // optional bool isActivate = 6;
  if (this->isactivate() != 0) {
    total_size += 1 + 1;
  }

  // repeated .Proto.Message.ProtoPlayer players = 3;
  total_size += 1 * this->players_size();
  for (int i = 0; i < this->players_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->players(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserLoginResponse::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const UserLoginResponse*>(&from));
}

void UserLoginResponse::MergeFrom(const UserLoginResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Proto.Message.UserLoginResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  players_.MergeFrom(from.players_);
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.username().size() > 0) {

    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  if (from.sdkuid().size() > 0) {

    sdkuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sdkuid_);
  }
  if (from.sdktoken().size() > 0) {

    sdktoken_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sdktoken_);
  }
  if (from.isactivate() != 0) {
    set_isactivate(from.isactivate());
  }
}

void UserLoginResponse::CopyFrom(const UserLoginResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Proto.Message.UserLoginResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserLoginResponse::IsInitialized() const {

  return true;
}

void UserLoginResponse::Swap(UserLoginResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserLoginResponse::InternalSwap(UserLoginResponse* other) {
  std::swap(id_, other->id_);
  username_.Swap(&other->username_);
  players_.UnsafeArenaSwap(&other->players_);
  sdkuid_.Swap(&other->sdkuid_);
  sdktoken_.Swap(&other->sdktoken_);
  std::swap(isactivate_, other->isactivate_);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string UserLoginResponse::GetTypeName() const {
  return "Proto.Message.UserLoginResponse";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UserLoginResponse

// optional sint64 id = 1;
void UserLoginResponse::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 UserLoginResponse::id() const {
  // @@protoc_insertion_point(field_get:Proto.Message.UserLoginResponse.id)
  return id_;
}
 void UserLoginResponse::set_id(::google::protobuf::int64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:Proto.Message.UserLoginResponse.id)
}

// optional string userName = 2;
void UserLoginResponse::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& UserLoginResponse::username() const {
  // @@protoc_insertion_point(field_get:Proto.Message.UserLoginResponse.userName)
  return username_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void UserLoginResponse::set_username(const ::std::string& value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Proto.Message.UserLoginResponse.userName)
}
 void UserLoginResponse::set_username(const char* value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Proto.Message.UserLoginResponse.userName)
}
 void UserLoginResponse::set_username(const char* value, size_t size) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Proto.Message.UserLoginResponse.userName)
}
 ::std::string* UserLoginResponse::mutable_username() {
  
  // @@protoc_insertion_point(field_mutable:Proto.Message.UserLoginResponse.userName)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* UserLoginResponse::release_username() {
  // @@protoc_insertion_point(field_release:Proto.Message.UserLoginResponse.userName)
  
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void UserLoginResponse::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    
  } else {
    
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:Proto.Message.UserLoginResponse.userName)
}

// repeated .Proto.Message.ProtoPlayer players = 3;
int UserLoginResponse::players_size() const {
  return players_.size();
}
void UserLoginResponse::clear_players() {
  players_.Clear();
}
const ::Proto::Message::ProtoPlayer& UserLoginResponse::players(int index) const {
  // @@protoc_insertion_point(field_get:Proto.Message.UserLoginResponse.players)
  return players_.Get(index);
}
::Proto::Message::ProtoPlayer* UserLoginResponse::mutable_players(int index) {
  // @@protoc_insertion_point(field_mutable:Proto.Message.UserLoginResponse.players)
  return players_.Mutable(index);
}
::Proto::Message::ProtoPlayer* UserLoginResponse::add_players() {
  // @@protoc_insertion_point(field_add:Proto.Message.UserLoginResponse.players)
  return players_.Add();
}
::google::protobuf::RepeatedPtrField< ::Proto::Message::ProtoPlayer >*
UserLoginResponse::mutable_players() {
  // @@protoc_insertion_point(field_mutable_list:Proto.Message.UserLoginResponse.players)
  return &players_;
}
const ::google::protobuf::RepeatedPtrField< ::Proto::Message::ProtoPlayer >&
UserLoginResponse::players() const {
  // @@protoc_insertion_point(field_list:Proto.Message.UserLoginResponse.players)
  return players_;
}

// optional string sdkUid = 4;
void UserLoginResponse::clear_sdkuid() {
  sdkuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& UserLoginResponse::sdkuid() const {
  // @@protoc_insertion_point(field_get:Proto.Message.UserLoginResponse.sdkUid)
  return sdkuid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void UserLoginResponse::set_sdkuid(const ::std::string& value) {
  
  sdkuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Proto.Message.UserLoginResponse.sdkUid)
}
 void UserLoginResponse::set_sdkuid(const char* value) {
  
  sdkuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Proto.Message.UserLoginResponse.sdkUid)
}
 void UserLoginResponse::set_sdkuid(const char* value, size_t size) {
  
  sdkuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Proto.Message.UserLoginResponse.sdkUid)
}
 ::std::string* UserLoginResponse::mutable_sdkuid() {
  
  // @@protoc_insertion_point(field_mutable:Proto.Message.UserLoginResponse.sdkUid)
  return sdkuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* UserLoginResponse::release_sdkuid() {
  // @@protoc_insertion_point(field_release:Proto.Message.UserLoginResponse.sdkUid)
  
  return sdkuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void UserLoginResponse::set_allocated_sdkuid(::std::string* sdkuid) {
  if (sdkuid != NULL) {
    
  } else {
    
  }
  sdkuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sdkuid);
  // @@protoc_insertion_point(field_set_allocated:Proto.Message.UserLoginResponse.sdkUid)
}

// optional string sdkToken = 5;
void UserLoginResponse::clear_sdktoken() {
  sdktoken_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& UserLoginResponse::sdktoken() const {
  // @@protoc_insertion_point(field_get:Proto.Message.UserLoginResponse.sdkToken)
  return sdktoken_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void UserLoginResponse::set_sdktoken(const ::std::string& value) {
  
  sdktoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Proto.Message.UserLoginResponse.sdkToken)
}
 void UserLoginResponse::set_sdktoken(const char* value) {
  
  sdktoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Proto.Message.UserLoginResponse.sdkToken)
}
 void UserLoginResponse::set_sdktoken(const char* value, size_t size) {
  
  sdktoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Proto.Message.UserLoginResponse.sdkToken)
}
 ::std::string* UserLoginResponse::mutable_sdktoken() {
  
  // @@protoc_insertion_point(field_mutable:Proto.Message.UserLoginResponse.sdkToken)
  return sdktoken_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* UserLoginResponse::release_sdktoken() {
  // @@protoc_insertion_point(field_release:Proto.Message.UserLoginResponse.sdkToken)
  
  return sdktoken_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void UserLoginResponse::set_allocated_sdktoken(::std::string* sdktoken) {
  if (sdktoken != NULL) {
    
  } else {
    
  }
  sdktoken_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sdktoken);
  // @@protoc_insertion_point(field_set_allocated:Proto.Message.UserLoginResponse.sdkToken)
}

// optional bool isActivate = 6;
void UserLoginResponse::clear_isactivate() {
  isactivate_ = false;
}
 bool UserLoginResponse::isactivate() const {
  // @@protoc_insertion_point(field_get:Proto.Message.UserLoginResponse.isActivate)
  return isactivate_;
}
 void UserLoginResponse::set_isactivate(bool value) {
  
  isactivate_ = value;
  // @@protoc_insertion_point(field_set:Proto.Message.UserLoginResponse.isActivate)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserActivateRequest::kIdFieldNumber;
const int UserActivateRequest::kUserNameFieldNumber;
const int UserActivateRequest::kCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserActivateRequest::UserActivateRequest()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Proto.Message.UserActivateRequest)
}

void UserActivateRequest::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

UserActivateRequest::UserActivateRequest(const UserActivateRequest& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Proto.Message.UserActivateRequest)
}

void UserActivateRequest::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_ = GOOGLE_LONGLONG(0);
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

UserActivateRequest::~UserActivateRequest() {
  // @@protoc_insertion_point(destructor:Proto.Message.UserActivateRequest)
  SharedDtor();
}

void UserActivateRequest::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void UserActivateRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const UserActivateRequest& UserActivateRequest::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_ClientData_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_ClientData_2eproto();
#endif
  return *default_instance_;
}

UserActivateRequest* UserActivateRequest::default_instance_ = NULL;

UserActivateRequest* UserActivateRequest::New(::google::protobuf::Arena* arena) const {
  UserActivateRequest* n = new UserActivateRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UserActivateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Proto.Message.UserActivateRequest)
  id_ = GOOGLE_LONGLONG(0);
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool UserActivateRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Proto.Message.UserActivateRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint64 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_userName;
        break;
      }

      // optional string userName = 2;
      case 2: {
        if (tag == 18) {
         parse_userName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->username().data(), this->username().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Proto.Message.UserActivateRequest.userName"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_code;
        break;
      }

      // optional string code = 3;
      case 3: {
        if (tag == 26) {
         parse_code:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_code()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->code().data(), this->code().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Proto.Message.UserActivateRequest.code"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Proto.Message.UserActivateRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Proto.Message.UserActivateRequest)
  return false;
#undef DO_
}

void UserActivateRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Proto.Message.UserActivateRequest)
  // optional sint64 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(1, this->id(), output);
  }

  // optional string userName = 2;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Proto.Message.UserActivateRequest.userName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->username(), output);
  }

  // optional string code = 3;
  if (this->code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->code().data(), this->code().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Proto.Message.UserActivateRequest.code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->code(), output);
  }

  // @@protoc_insertion_point(serialize_end:Proto.Message.UserActivateRequest)
}

int UserActivateRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Proto.Message.UserActivateRequest)
  int total_size = 0;

  // optional sint64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->id());
  }

  // optional string userName = 2;
  if (this->username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  // optional string code = 3;
  if (this->code().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->code());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserActivateRequest::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const UserActivateRequest*>(&from));
}

void UserActivateRequest::MergeFrom(const UserActivateRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Proto.Message.UserActivateRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.username().size() > 0) {

    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  if (from.code().size() > 0) {

    code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_);
  }
}

void UserActivateRequest::CopyFrom(const UserActivateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Proto.Message.UserActivateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserActivateRequest::IsInitialized() const {

  return true;
}

void UserActivateRequest::Swap(UserActivateRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserActivateRequest::InternalSwap(UserActivateRequest* other) {
  std::swap(id_, other->id_);
  username_.Swap(&other->username_);
  code_.Swap(&other->code_);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string UserActivateRequest::GetTypeName() const {
  return "Proto.Message.UserActivateRequest";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UserActivateRequest

// optional sint64 id = 1;
void UserActivateRequest::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 UserActivateRequest::id() const {
  // @@protoc_insertion_point(field_get:Proto.Message.UserActivateRequest.id)
  return id_;
}
 void UserActivateRequest::set_id(::google::protobuf::int64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:Proto.Message.UserActivateRequest.id)
}

// optional string userName = 2;
void UserActivateRequest::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& UserActivateRequest::username() const {
  // @@protoc_insertion_point(field_get:Proto.Message.UserActivateRequest.userName)
  return username_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void UserActivateRequest::set_username(const ::std::string& value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Proto.Message.UserActivateRequest.userName)
}
 void UserActivateRequest::set_username(const char* value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Proto.Message.UserActivateRequest.userName)
}
 void UserActivateRequest::set_username(const char* value, size_t size) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Proto.Message.UserActivateRequest.userName)
}
 ::std::string* UserActivateRequest::mutable_username() {
  
  // @@protoc_insertion_point(field_mutable:Proto.Message.UserActivateRequest.userName)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* UserActivateRequest::release_username() {
  // @@protoc_insertion_point(field_release:Proto.Message.UserActivateRequest.userName)
  
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void UserActivateRequest::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    
  } else {
    
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:Proto.Message.UserActivateRequest.userName)
}

// optional string code = 3;
void UserActivateRequest::clear_code() {
  code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& UserActivateRequest::code() const {
  // @@protoc_insertion_point(field_get:Proto.Message.UserActivateRequest.code)
  return code_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void UserActivateRequest::set_code(const ::std::string& value) {
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Proto.Message.UserActivateRequest.code)
}
 void UserActivateRequest::set_code(const char* value) {
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Proto.Message.UserActivateRequest.code)
}
 void UserActivateRequest::set_code(const char* value, size_t size) {
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Proto.Message.UserActivateRequest.code)
}
 ::std::string* UserActivateRequest::mutable_code() {
  
  // @@protoc_insertion_point(field_mutable:Proto.Message.UserActivateRequest.code)
  return code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* UserActivateRequest::release_code() {
  // @@protoc_insertion_point(field_release:Proto.Message.UserActivateRequest.code)
  
  return code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void UserActivateRequest::set_allocated_code(::std::string* code) {
  if (code != NULL) {
    
  } else {
    
  }
  code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), code);
  // @@protoc_insertion_point(field_set_allocated:Proto.Message.UserActivateRequest.code)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserActivateResponse::kIdFieldNumber;
const int UserActivateResponse::kUserNameFieldNumber;
const int UserActivateResponse::kPlayersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserActivateResponse::UserActivateResponse()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Proto.Message.UserActivateResponse)
}

void UserActivateResponse::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

UserActivateResponse::UserActivateResponse(const UserActivateResponse& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Proto.Message.UserActivateResponse)
}

void UserActivateResponse::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_ = GOOGLE_LONGLONG(0);
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

UserActivateResponse::~UserActivateResponse() {
  // @@protoc_insertion_point(destructor:Proto.Message.UserActivateResponse)
  SharedDtor();
}

void UserActivateResponse::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void UserActivateResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const UserActivateResponse& UserActivateResponse::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_ClientData_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_ClientData_2eproto();
#endif
  return *default_instance_;
}

UserActivateResponse* UserActivateResponse::default_instance_ = NULL;

UserActivateResponse* UserActivateResponse::New(::google::protobuf::Arena* arena) const {
  UserActivateResponse* n = new UserActivateResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UserActivateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Proto.Message.UserActivateResponse)
  id_ = GOOGLE_LONGLONG(0);
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  players_.Clear();
}

bool UserActivateResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Proto.Message.UserActivateResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint64 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_userName;
        break;
      }

      // optional string userName = 2;
      case 2: {
        if (tag == 18) {
         parse_userName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->username().data(), this->username().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Proto.Message.UserActivateResponse.userName"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_players;
        break;
      }

      // repeated .Proto.Message.ProtoPlayer players = 3;
      case 3: {
        if (tag == 26) {
         parse_players:
          DO_(input->IncrementRecursionDepth());
         parse_loop_players:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_players()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_players;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Proto.Message.UserActivateResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Proto.Message.UserActivateResponse)
  return false;
#undef DO_
}

void UserActivateResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Proto.Message.UserActivateResponse)
  // optional sint64 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(1, this->id(), output);
  }

  // optional string userName = 2;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Proto.Message.UserActivateResponse.userName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->username(), output);
  }

  // repeated .Proto.Message.ProtoPlayer players = 3;
  for (unsigned int i = 0, n = this->players_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      3, this->players(i), output);
  }

  // @@protoc_insertion_point(serialize_end:Proto.Message.UserActivateResponse)
}

int UserActivateResponse::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Proto.Message.UserActivateResponse)
  int total_size = 0;

  // optional sint64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->id());
  }

  // optional string userName = 2;
  if (this->username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  // repeated .Proto.Message.ProtoPlayer players = 3;
  total_size += 1 * this->players_size();
  for (int i = 0; i < this->players_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->players(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserActivateResponse::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const UserActivateResponse*>(&from));
}

void UserActivateResponse::MergeFrom(const UserActivateResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Proto.Message.UserActivateResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  players_.MergeFrom(from.players_);
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.username().size() > 0) {

    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
}

void UserActivateResponse::CopyFrom(const UserActivateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Proto.Message.UserActivateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserActivateResponse::IsInitialized() const {

  return true;
}

void UserActivateResponse::Swap(UserActivateResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserActivateResponse::InternalSwap(UserActivateResponse* other) {
  std::swap(id_, other->id_);
  username_.Swap(&other->username_);
  players_.UnsafeArenaSwap(&other->players_);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string UserActivateResponse::GetTypeName() const {
  return "Proto.Message.UserActivateResponse";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UserActivateResponse

// optional sint64 id = 1;
void UserActivateResponse::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 UserActivateResponse::id() const {
  // @@protoc_insertion_point(field_get:Proto.Message.UserActivateResponse.id)
  return id_;
}
 void UserActivateResponse::set_id(::google::protobuf::int64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:Proto.Message.UserActivateResponse.id)
}

// optional string userName = 2;
void UserActivateResponse::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& UserActivateResponse::username() const {
  // @@protoc_insertion_point(field_get:Proto.Message.UserActivateResponse.userName)
  return username_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void UserActivateResponse::set_username(const ::std::string& value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Proto.Message.UserActivateResponse.userName)
}
 void UserActivateResponse::set_username(const char* value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Proto.Message.UserActivateResponse.userName)
}
 void UserActivateResponse::set_username(const char* value, size_t size) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Proto.Message.UserActivateResponse.userName)
}
 ::std::string* UserActivateResponse::mutable_username() {
  
  // @@protoc_insertion_point(field_mutable:Proto.Message.UserActivateResponse.userName)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* UserActivateResponse::release_username() {
  // @@protoc_insertion_point(field_release:Proto.Message.UserActivateResponse.userName)
  
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void UserActivateResponse::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    
  } else {
    
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:Proto.Message.UserActivateResponse.userName)
}

// repeated .Proto.Message.ProtoPlayer players = 3;
int UserActivateResponse::players_size() const {
  return players_.size();
}
void UserActivateResponse::clear_players() {
  players_.Clear();
}
const ::Proto::Message::ProtoPlayer& UserActivateResponse::players(int index) const {
  // @@protoc_insertion_point(field_get:Proto.Message.UserActivateResponse.players)
  return players_.Get(index);
}
::Proto::Message::ProtoPlayer* UserActivateResponse::mutable_players(int index) {
  // @@protoc_insertion_point(field_mutable:Proto.Message.UserActivateResponse.players)
  return players_.Mutable(index);
}
::Proto::Message::ProtoPlayer* UserActivateResponse::add_players() {
  // @@protoc_insertion_point(field_add:Proto.Message.UserActivateResponse.players)
  return players_.Add();
}
::google::protobuf::RepeatedPtrField< ::Proto::Message::ProtoPlayer >*
UserActivateResponse::mutable_players() {
  // @@protoc_insertion_point(field_mutable_list:Proto.Message.UserActivateResponse.players)
  return &players_;
}
const ::google::protobuf::RepeatedPtrField< ::Proto::Message::ProtoPlayer >&
UserActivateResponse::players() const {
  // @@protoc_insertion_point(field_list:Proto.Message.UserActivateResponse.players)
  return players_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerLoginRequest::kIdFieldNumber;
const int PlayerLoginRequest::kClientVersionFieldNumber;
const int PlayerLoginRequest::kAppStoreFieldNumber;
const int PlayerLoginRequest::kDeviceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerLoginRequest::PlayerLoginRequest()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Proto.Message.PlayerLoginRequest)
}

void PlayerLoginRequest::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PlayerLoginRequest::PlayerLoginRequest(const PlayerLoginRequest& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Proto.Message.PlayerLoginRequest)
}

void PlayerLoginRequest::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_ = GOOGLE_LONGLONG(0);
  clientversion_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appstore_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

PlayerLoginRequest::~PlayerLoginRequest() {
  // @@protoc_insertion_point(destructor:Proto.Message.PlayerLoginRequest)
  SharedDtor();
}

void PlayerLoginRequest::SharedDtor() {
  clientversion_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appstore_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void PlayerLoginRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const PlayerLoginRequest& PlayerLoginRequest::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_ClientData_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_ClientData_2eproto();
#endif
  return *default_instance_;
}

PlayerLoginRequest* PlayerLoginRequest::default_instance_ = NULL;

PlayerLoginRequest* PlayerLoginRequest::New(::google::protobuf::Arena* arena) const {
  PlayerLoginRequest* n = new PlayerLoginRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerLoginRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Proto.Message.PlayerLoginRequest)
  id_ = GOOGLE_LONGLONG(0);
  clientversion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appstore_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool PlayerLoginRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Proto.Message.PlayerLoginRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint64 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_clientVersion;
        break;
      }

      // optional string clientVersion = 2;
      case 2: {
        if (tag == 18) {
         parse_clientVersion:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_clientversion()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->clientversion().data(), this->clientversion().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Proto.Message.PlayerLoginRequest.clientVersion"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_appStore;
        break;
      }

      // optional string appStore = 3;
      case 3: {
        if (tag == 26) {
         parse_appStore:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appstore()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->appstore().data(), this->appstore().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Proto.Message.PlayerLoginRequest.appStore"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_device;
        break;
      }

      // optional string device = 4;
      case 4: {
        if (tag == 34) {
         parse_device:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_device()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->device().data(), this->device().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Proto.Message.PlayerLoginRequest.device"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Proto.Message.PlayerLoginRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Proto.Message.PlayerLoginRequest)
  return false;
#undef DO_
}

void PlayerLoginRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Proto.Message.PlayerLoginRequest)
  // optional sint64 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(1, this->id(), output);
  }

  // optional string clientVersion = 2;
  if (this->clientversion().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->clientversion().data(), this->clientversion().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Proto.Message.PlayerLoginRequest.clientVersion");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->clientversion(), output);
  }

  // optional string appStore = 3;
  if (this->appstore().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appstore().data(), this->appstore().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Proto.Message.PlayerLoginRequest.appStore");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->appstore(), output);
  }

  // optional string device = 4;
  if (this->device().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device().data(), this->device().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Proto.Message.PlayerLoginRequest.device");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->device(), output);
  }

  // @@protoc_insertion_point(serialize_end:Proto.Message.PlayerLoginRequest)
}

int PlayerLoginRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Proto.Message.PlayerLoginRequest)
  int total_size = 0;

  // optional sint64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->id());
  }

  // optional string clientVersion = 2;
  if (this->clientversion().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->clientversion());
  }

  // optional string appStore = 3;
  if (this->appstore().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appstore());
  }

  // optional string device = 4;
  if (this->device().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->device());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerLoginRequest::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const PlayerLoginRequest*>(&from));
}

void PlayerLoginRequest::MergeFrom(const PlayerLoginRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Proto.Message.PlayerLoginRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.clientversion().size() > 0) {

    clientversion_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.clientversion_);
  }
  if (from.appstore().size() > 0) {

    appstore_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appstore_);
  }
  if (from.device().size() > 0) {

    device_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_);
  }
}

void PlayerLoginRequest::CopyFrom(const PlayerLoginRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Proto.Message.PlayerLoginRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerLoginRequest::IsInitialized() const {

  return true;
}

void PlayerLoginRequest::Swap(PlayerLoginRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerLoginRequest::InternalSwap(PlayerLoginRequest* other) {
  std::swap(id_, other->id_);
  clientversion_.Swap(&other->clientversion_);
  appstore_.Swap(&other->appstore_);
  device_.Swap(&other->device_);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string PlayerLoginRequest::GetTypeName() const {
  return "Proto.Message.PlayerLoginRequest";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerLoginRequest

// optional sint64 id = 1;
void PlayerLoginRequest::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 PlayerLoginRequest::id() const {
  // @@protoc_insertion_point(field_get:Proto.Message.PlayerLoginRequest.id)
  return id_;
}
 void PlayerLoginRequest::set_id(::google::protobuf::int64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:Proto.Message.PlayerLoginRequest.id)
}

// optional string clientVersion = 2;
void PlayerLoginRequest::clear_clientversion() {
  clientversion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PlayerLoginRequest::clientversion() const {
  // @@protoc_insertion_point(field_get:Proto.Message.PlayerLoginRequest.clientVersion)
  return clientversion_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PlayerLoginRequest::set_clientversion(const ::std::string& value) {
  
  clientversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Proto.Message.PlayerLoginRequest.clientVersion)
}
 void PlayerLoginRequest::set_clientversion(const char* value) {
  
  clientversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Proto.Message.PlayerLoginRequest.clientVersion)
}
 void PlayerLoginRequest::set_clientversion(const char* value, size_t size) {
  
  clientversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Proto.Message.PlayerLoginRequest.clientVersion)
}
 ::std::string* PlayerLoginRequest::mutable_clientversion() {
  
  // @@protoc_insertion_point(field_mutable:Proto.Message.PlayerLoginRequest.clientVersion)
  return clientversion_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PlayerLoginRequest::release_clientversion() {
  // @@protoc_insertion_point(field_release:Proto.Message.PlayerLoginRequest.clientVersion)
  
  return clientversion_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PlayerLoginRequest::set_allocated_clientversion(::std::string* clientversion) {
  if (clientversion != NULL) {
    
  } else {
    
  }
  clientversion_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), clientversion);
  // @@protoc_insertion_point(field_set_allocated:Proto.Message.PlayerLoginRequest.clientVersion)
}

// optional string appStore = 3;
void PlayerLoginRequest::clear_appstore() {
  appstore_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PlayerLoginRequest::appstore() const {
  // @@protoc_insertion_point(field_get:Proto.Message.PlayerLoginRequest.appStore)
  return appstore_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PlayerLoginRequest::set_appstore(const ::std::string& value) {
  
  appstore_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Proto.Message.PlayerLoginRequest.appStore)
}
 void PlayerLoginRequest::set_appstore(const char* value) {
  
  appstore_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Proto.Message.PlayerLoginRequest.appStore)
}
 void PlayerLoginRequest::set_appstore(const char* value, size_t size) {
  
  appstore_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Proto.Message.PlayerLoginRequest.appStore)
}
 ::std::string* PlayerLoginRequest::mutable_appstore() {
  
  // @@protoc_insertion_point(field_mutable:Proto.Message.PlayerLoginRequest.appStore)
  return appstore_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PlayerLoginRequest::release_appstore() {
  // @@protoc_insertion_point(field_release:Proto.Message.PlayerLoginRequest.appStore)
  
  return appstore_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PlayerLoginRequest::set_allocated_appstore(::std::string* appstore) {
  if (appstore != NULL) {
    
  } else {
    
  }
  appstore_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appstore);
  // @@protoc_insertion_point(field_set_allocated:Proto.Message.PlayerLoginRequest.appStore)
}

// optional string device = 4;
void PlayerLoginRequest::clear_device() {
  device_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PlayerLoginRequest::device() const {
  // @@protoc_insertion_point(field_get:Proto.Message.PlayerLoginRequest.device)
  return device_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PlayerLoginRequest::set_device(const ::std::string& value) {
  
  device_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Proto.Message.PlayerLoginRequest.device)
}
 void PlayerLoginRequest::set_device(const char* value) {
  
  device_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Proto.Message.PlayerLoginRequest.device)
}
 void PlayerLoginRequest::set_device(const char* value, size_t size) {
  
  device_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Proto.Message.PlayerLoginRequest.device)
}
 ::std::string* PlayerLoginRequest::mutable_device() {
  
  // @@protoc_insertion_point(field_mutable:Proto.Message.PlayerLoginRequest.device)
  return device_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PlayerLoginRequest::release_device() {
  // @@protoc_insertion_point(field_release:Proto.Message.PlayerLoginRequest.device)
  
  return device_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PlayerLoginRequest::set_allocated_device(::std::string* device) {
  if (device != NULL) {
    
  } else {
    
  }
  device_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), device);
  // @@protoc_insertion_point(field_set_allocated:Proto.Message.PlayerLoginRequest.device)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerLoginResponse::kPlayerInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerLoginResponse::PlayerLoginResponse()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Proto.Message.PlayerLoginResponse)
}

void PlayerLoginResponse::InitAsDefaultInstance() {
  _is_default_instance_ = true;
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  playerinfo_ = const_cast< ::Proto::Message::ProtoPlayerInfo*>(
      ::Proto::Message::ProtoPlayerInfo::internal_default_instance());
#else
  playerinfo_ = const_cast< ::Proto::Message::ProtoPlayerInfo*>(&::Proto::Message::ProtoPlayerInfo::default_instance());
#endif
}

PlayerLoginResponse::PlayerLoginResponse(const PlayerLoginResponse& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Proto.Message.PlayerLoginResponse)
}

void PlayerLoginResponse::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  playerinfo_ = NULL;
}

PlayerLoginResponse::~PlayerLoginResponse() {
  // @@protoc_insertion_point(destructor:Proto.Message.PlayerLoginResponse)
  SharedDtor();
}

void PlayerLoginResponse::SharedDtor() {
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
    delete playerinfo_;
  }
}

void PlayerLoginResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const PlayerLoginResponse& PlayerLoginResponse::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_ClientData_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_ClientData_2eproto();
#endif
  return *default_instance_;
}

PlayerLoginResponse* PlayerLoginResponse::default_instance_ = NULL;

PlayerLoginResponse* PlayerLoginResponse::New(::google::protobuf::Arena* arena) const {
  PlayerLoginResponse* n = new PlayerLoginResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerLoginResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Proto.Message.PlayerLoginResponse)
  if (GetArenaNoVirtual() == NULL && playerinfo_ != NULL) delete playerinfo_;
  playerinfo_ = NULL;
}

bool PlayerLoginResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Proto.Message.PlayerLoginResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Proto.Message.ProtoPlayerInfo playerInfo = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_playerinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Proto.Message.PlayerLoginResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Proto.Message.PlayerLoginResponse)
  return false;
#undef DO_
}

void PlayerLoginResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Proto.Message.PlayerLoginResponse)
  // optional .Proto.Message.ProtoPlayerInfo playerInfo = 1;
  if (this->has_playerinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      1, *this->playerinfo_, output);
  }

  // @@protoc_insertion_point(serialize_end:Proto.Message.PlayerLoginResponse)
}

int PlayerLoginResponse::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Proto.Message.PlayerLoginResponse)
  int total_size = 0;

  // optional .Proto.Message.ProtoPlayerInfo playerInfo = 1;
  if (this->has_playerinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->playerinfo_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerLoginResponse::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const PlayerLoginResponse*>(&from));
}

void PlayerLoginResponse::MergeFrom(const PlayerLoginResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Proto.Message.PlayerLoginResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.has_playerinfo()) {
    mutable_playerinfo()->::Proto::Message::ProtoPlayerInfo::MergeFrom(from.playerinfo());
  }
}

void PlayerLoginResponse::CopyFrom(const PlayerLoginResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Proto.Message.PlayerLoginResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerLoginResponse::IsInitialized() const {

  return true;
}

void PlayerLoginResponse::Swap(PlayerLoginResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerLoginResponse::InternalSwap(PlayerLoginResponse* other) {
  std::swap(playerinfo_, other->playerinfo_);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string PlayerLoginResponse::GetTypeName() const {
  return "Proto.Message.PlayerLoginResponse";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerLoginResponse

// optional .Proto.Message.ProtoPlayerInfo playerInfo = 1;
bool PlayerLoginResponse::has_playerinfo() const {
  return !_is_default_instance_ && playerinfo_ != NULL;
}
void PlayerLoginResponse::clear_playerinfo() {
  if (GetArenaNoVirtual() == NULL && playerinfo_ != NULL) delete playerinfo_;
  playerinfo_ = NULL;
}
const ::Proto::Message::ProtoPlayerInfo& PlayerLoginResponse::playerinfo() const {
  // @@protoc_insertion_point(field_get:Proto.Message.PlayerLoginResponse.playerInfo)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return playerinfo_ != NULL ? *playerinfo_ : *default_instance().playerinfo_;
#else
  return playerinfo_ != NULL ? *playerinfo_ : *default_instance_->playerinfo_;
#endif
}
::Proto::Message::ProtoPlayerInfo* PlayerLoginResponse::mutable_playerinfo() {
  
  if (playerinfo_ == NULL) {
    playerinfo_ = new ::Proto::Message::ProtoPlayerInfo;
  }
  // @@protoc_insertion_point(field_mutable:Proto.Message.PlayerLoginResponse.playerInfo)
  return playerinfo_;
}
::Proto::Message::ProtoPlayerInfo* PlayerLoginResponse::release_playerinfo() {
  // @@protoc_insertion_point(field_release:Proto.Message.PlayerLoginResponse.playerInfo)
  
  ::Proto::Message::ProtoPlayerInfo* temp = playerinfo_;
  playerinfo_ = NULL;
  return temp;
}
void PlayerLoginResponse::set_allocated_playerinfo(::Proto::Message::ProtoPlayerInfo* playerinfo) {
  delete playerinfo_;
  playerinfo_ = playerinfo;
  if (playerinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Proto.Message.PlayerLoginResponse.playerInfo)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerLogoutRequest::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerLogoutRequest::PlayerLogoutRequest()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Proto.Message.PlayerLogoutRequest)
}

void PlayerLogoutRequest::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PlayerLogoutRequest::PlayerLogoutRequest(const PlayerLogoutRequest& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Proto.Message.PlayerLogoutRequest)
}

void PlayerLogoutRequest::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  id_ = GOOGLE_LONGLONG(0);
}

PlayerLogoutRequest::~PlayerLogoutRequest() {
  // @@protoc_insertion_point(destructor:Proto.Message.PlayerLogoutRequest)
  SharedDtor();
}

void PlayerLogoutRequest::SharedDtor() {
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void PlayerLogoutRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const PlayerLogoutRequest& PlayerLogoutRequest::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_ClientData_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_ClientData_2eproto();
#endif
  return *default_instance_;
}

PlayerLogoutRequest* PlayerLogoutRequest::default_instance_ = NULL;

PlayerLogoutRequest* PlayerLogoutRequest::New(::google::protobuf::Arena* arena) const {
  PlayerLogoutRequest* n = new PlayerLogoutRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerLogoutRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Proto.Message.PlayerLogoutRequest)
  id_ = GOOGLE_LONGLONG(0);
}

bool PlayerLogoutRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Proto.Message.PlayerLogoutRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint64 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Proto.Message.PlayerLogoutRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Proto.Message.PlayerLogoutRequest)
  return false;
#undef DO_
}

void PlayerLogoutRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Proto.Message.PlayerLogoutRequest)
  // optional sint64 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(1, this->id(), output);
  }

  // @@protoc_insertion_point(serialize_end:Proto.Message.PlayerLogoutRequest)
}

int PlayerLogoutRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Proto.Message.PlayerLogoutRequest)
  int total_size = 0;

  // optional sint64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->id());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerLogoutRequest::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const PlayerLogoutRequest*>(&from));
}

void PlayerLogoutRequest::MergeFrom(const PlayerLogoutRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Proto.Message.PlayerLogoutRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
}

void PlayerLogoutRequest::CopyFrom(const PlayerLogoutRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Proto.Message.PlayerLogoutRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerLogoutRequest::IsInitialized() const {

  return true;
}

void PlayerLogoutRequest::Swap(PlayerLogoutRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerLogoutRequest::InternalSwap(PlayerLogoutRequest* other) {
  std::swap(id_, other->id_);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string PlayerLogoutRequest::GetTypeName() const {
  return "Proto.Message.PlayerLogoutRequest";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerLogoutRequest

// optional sint64 id = 1;
void PlayerLogoutRequest::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 PlayerLogoutRequest::id() const {
  // @@protoc_insertion_point(field_get:Proto.Message.PlayerLogoutRequest.id)
  return id_;
}
 void PlayerLogoutRequest::set_id(::google::protobuf::int64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:Proto.Message.PlayerLogoutRequest.id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerLogoutResponse::PlayerLogoutResponse()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Proto.Message.PlayerLogoutResponse)
}

void PlayerLogoutResponse::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PlayerLogoutResponse::PlayerLogoutResponse(const PlayerLogoutResponse& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Proto.Message.PlayerLogoutResponse)
}

void PlayerLogoutResponse::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

PlayerLogoutResponse::~PlayerLogoutResponse() {
  // @@protoc_insertion_point(destructor:Proto.Message.PlayerLogoutResponse)
  SharedDtor();
}

void PlayerLogoutResponse::SharedDtor() {
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void PlayerLogoutResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const PlayerLogoutResponse& PlayerLogoutResponse::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_ClientData_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_ClientData_2eproto();
#endif
  return *default_instance_;
}

PlayerLogoutResponse* PlayerLogoutResponse::default_instance_ = NULL;

PlayerLogoutResponse* PlayerLogoutResponse::New(::google::protobuf::Arena* arena) const {
  PlayerLogoutResponse* n = new PlayerLogoutResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerLogoutResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Proto.Message.PlayerLogoutResponse)
}

bool PlayerLogoutResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Proto.Message.PlayerLogoutResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:Proto.Message.PlayerLogoutResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Proto.Message.PlayerLogoutResponse)
  return false;
#undef DO_
}

void PlayerLogoutResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Proto.Message.PlayerLogoutResponse)
  // @@protoc_insertion_point(serialize_end:Proto.Message.PlayerLogoutResponse)
}

int PlayerLogoutResponse::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Proto.Message.PlayerLogoutResponse)
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerLogoutResponse::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const PlayerLogoutResponse*>(&from));
}

void PlayerLogoutResponse::MergeFrom(const PlayerLogoutResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Proto.Message.PlayerLogoutResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
}

void PlayerLogoutResponse::CopyFrom(const PlayerLogoutResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Proto.Message.PlayerLogoutResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerLogoutResponse::IsInitialized() const {

  return true;
}

void PlayerLogoutResponse::Swap(PlayerLogoutResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerLogoutResponse::InternalSwap(PlayerLogoutResponse* other) {
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string PlayerLogoutResponse::GetTypeName() const {
  return "Proto.Message.PlayerLogoutResponse";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerLogoutResponse

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerCreateRequest::kUserIdFieldNumber;
const int PlayerCreateRequest::kNameFieldNumber;
const int PlayerCreateRequest::kSysCharacterIdFieldNumber;
const int PlayerCreateRequest::kZoneIdFieldNumber;
const int PlayerCreateRequest::kClientVersionFieldNumber;
const int PlayerCreateRequest::kAppStoreFieldNumber;
const int PlayerCreateRequest::kDeviceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerCreateRequest::PlayerCreateRequest()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Proto.Message.PlayerCreateRequest)
}

void PlayerCreateRequest::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PlayerCreateRequest::PlayerCreateRequest(const PlayerCreateRequest& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Proto.Message.PlayerCreateRequest)
}

void PlayerCreateRequest::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  userid_ = GOOGLE_LONGLONG(0);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  syscharacterid_ = 0u;
  zoneid_ = 0;
  clientversion_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appstore_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

PlayerCreateRequest::~PlayerCreateRequest() {
  // @@protoc_insertion_point(destructor:Proto.Message.PlayerCreateRequest)
  SharedDtor();
}

void PlayerCreateRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clientversion_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appstore_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void PlayerCreateRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const PlayerCreateRequest& PlayerCreateRequest::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_ClientData_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_ClientData_2eproto();
#endif
  return *default_instance_;
}

PlayerCreateRequest* PlayerCreateRequest::default_instance_ = NULL;

PlayerCreateRequest* PlayerCreateRequest::New(::google::protobuf::Arena* arena) const {
  PlayerCreateRequest* n = new PlayerCreateRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerCreateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Proto.Message.PlayerCreateRequest)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(PlayerCreateRequest, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PlayerCreateRequest*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(syscharacterid_, zoneid_);
  userid_ = GOOGLE_LONGLONG(0);
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clientversion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appstore_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool PlayerCreateRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Proto.Message.PlayerCreateRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint64 userId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &userid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_name;
        break;
      }

      // optional string name = 3;
      case 3: {
        if (tag == 26) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Proto.Message.PlayerCreateRequest.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_sysCharacterId;
        break;
      }

      // optional uint32 sysCharacterId = 4;
      case 4: {
        if (tag == 32) {
         parse_sysCharacterId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &syscharacterid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_zoneId;
        break;
      }

      // optional int32 zoneId = 5;
      case 5: {
        if (tag == 40) {
         parse_zoneId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &zoneid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_clientVersion;
        break;
      }

      // optional string clientVersion = 6;
      case 6: {
        if (tag == 50) {
         parse_clientVersion:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_clientversion()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->clientversion().data(), this->clientversion().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Proto.Message.PlayerCreateRequest.clientVersion"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_appStore;
        break;
      }

      // optional string appStore = 7;
      case 7: {
        if (tag == 58) {
         parse_appStore:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appstore()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->appstore().data(), this->appstore().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Proto.Message.PlayerCreateRequest.appStore"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_device;
        break;
      }

      // optional string device = 8;
      case 8: {
        if (tag == 66) {
         parse_device:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_device()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->device().data(), this->device().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Proto.Message.PlayerCreateRequest.device"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Proto.Message.PlayerCreateRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Proto.Message.PlayerCreateRequest)
  return false;
#undef DO_
}

void PlayerCreateRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Proto.Message.PlayerCreateRequest)
  // optional sint64 userId = 1;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(1, this->userid(), output);
  }

  // optional string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Proto.Message.PlayerCreateRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  // optional uint32 sysCharacterId = 4;
  if (this->syscharacterid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->syscharacterid(), output);
  }

  // optional int32 zoneId = 5;
  if (this->zoneid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->zoneid(), output);
  }

  // optional string clientVersion = 6;
  if (this->clientversion().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->clientversion().data(), this->clientversion().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Proto.Message.PlayerCreateRequest.clientVersion");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->clientversion(), output);
  }

  // optional string appStore = 7;
  if (this->appstore().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appstore().data(), this->appstore().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Proto.Message.PlayerCreateRequest.appStore");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->appstore(), output);
  }

  // optional string device = 8;
  if (this->device().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device().data(), this->device().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Proto.Message.PlayerCreateRequest.device");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->device(), output);
  }

  // @@protoc_insertion_point(serialize_end:Proto.Message.PlayerCreateRequest)
}

int PlayerCreateRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Proto.Message.PlayerCreateRequest)
  int total_size = 0;

  // optional sint64 userId = 1;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->userid());
  }

  // optional string name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional uint32 sysCharacterId = 4;
  if (this->syscharacterid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->syscharacterid());
  }

  // optional int32 zoneId = 5;
  if (this->zoneid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->zoneid());
  }

  // optional string clientVersion = 6;
  if (this->clientversion().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->clientversion());
  }

  // optional string appStore = 7;
  if (this->appstore().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appstore());
  }

  // optional string device = 8;
  if (this->device().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->device());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerCreateRequest::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const PlayerCreateRequest*>(&from));
}

void PlayerCreateRequest::MergeFrom(const PlayerCreateRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Proto.Message.PlayerCreateRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.syscharacterid() != 0) {
    set_syscharacterid(from.syscharacterid());
  }
  if (from.zoneid() != 0) {
    set_zoneid(from.zoneid());
  }
  if (from.clientversion().size() > 0) {

    clientversion_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.clientversion_);
  }
  if (from.appstore().size() > 0) {

    appstore_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appstore_);
  }
  if (from.device().size() > 0) {

    device_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_);
  }
}

void PlayerCreateRequest::CopyFrom(const PlayerCreateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Proto.Message.PlayerCreateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerCreateRequest::IsInitialized() const {

  return true;
}

void PlayerCreateRequest::Swap(PlayerCreateRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerCreateRequest::InternalSwap(PlayerCreateRequest* other) {
  std::swap(userid_, other->userid_);
  name_.Swap(&other->name_);
  std::swap(syscharacterid_, other->syscharacterid_);
  std::swap(zoneid_, other->zoneid_);
  clientversion_.Swap(&other->clientversion_);
  appstore_.Swap(&other->appstore_);
  device_.Swap(&other->device_);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string PlayerCreateRequest::GetTypeName() const {
  return "Proto.Message.PlayerCreateRequest";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerCreateRequest

// optional sint64 userId = 1;
void PlayerCreateRequest::clear_userid() {
  userid_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 PlayerCreateRequest::userid() const {
  // @@protoc_insertion_point(field_get:Proto.Message.PlayerCreateRequest.userId)
  return userid_;
}
 void PlayerCreateRequest::set_userid(::google::protobuf::int64 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:Proto.Message.PlayerCreateRequest.userId)
}

// optional string name = 3;
void PlayerCreateRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PlayerCreateRequest::name() const {
  // @@protoc_insertion_point(field_get:Proto.Message.PlayerCreateRequest.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PlayerCreateRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Proto.Message.PlayerCreateRequest.name)
}
 void PlayerCreateRequest::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Proto.Message.PlayerCreateRequest.name)
}
 void PlayerCreateRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Proto.Message.PlayerCreateRequest.name)
}
 ::std::string* PlayerCreateRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:Proto.Message.PlayerCreateRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PlayerCreateRequest::release_name() {
  // @@protoc_insertion_point(field_release:Proto.Message.PlayerCreateRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PlayerCreateRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:Proto.Message.PlayerCreateRequest.name)
}

// optional uint32 sysCharacterId = 4;
void PlayerCreateRequest::clear_syscharacterid() {
  syscharacterid_ = 0u;
}
 ::google::protobuf::uint32 PlayerCreateRequest::syscharacterid() const {
  // @@protoc_insertion_point(field_get:Proto.Message.PlayerCreateRequest.sysCharacterId)
  return syscharacterid_;
}
 void PlayerCreateRequest::set_syscharacterid(::google::protobuf::uint32 value) {
  
  syscharacterid_ = value;
  // @@protoc_insertion_point(field_set:Proto.Message.PlayerCreateRequest.sysCharacterId)
}

// optional int32 zoneId = 5;
void PlayerCreateRequest::clear_zoneid() {
  zoneid_ = 0;
}
 ::google::protobuf::int32 PlayerCreateRequest::zoneid() const {
  // @@protoc_insertion_point(field_get:Proto.Message.PlayerCreateRequest.zoneId)
  return zoneid_;
}
 void PlayerCreateRequest::set_zoneid(::google::protobuf::int32 value) {
  
  zoneid_ = value;
  // @@protoc_insertion_point(field_set:Proto.Message.PlayerCreateRequest.zoneId)
}

// optional string clientVersion = 6;
void PlayerCreateRequest::clear_clientversion() {
  clientversion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PlayerCreateRequest::clientversion() const {
  // @@protoc_insertion_point(field_get:Proto.Message.PlayerCreateRequest.clientVersion)
  return clientversion_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PlayerCreateRequest::set_clientversion(const ::std::string& value) {
  
  clientversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Proto.Message.PlayerCreateRequest.clientVersion)
}
 void PlayerCreateRequest::set_clientversion(const char* value) {
  
  clientversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Proto.Message.PlayerCreateRequest.clientVersion)
}
 void PlayerCreateRequest::set_clientversion(const char* value, size_t size) {
  
  clientversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Proto.Message.PlayerCreateRequest.clientVersion)
}
 ::std::string* PlayerCreateRequest::mutable_clientversion() {
  
  // @@protoc_insertion_point(field_mutable:Proto.Message.PlayerCreateRequest.clientVersion)
  return clientversion_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PlayerCreateRequest::release_clientversion() {
  // @@protoc_insertion_point(field_release:Proto.Message.PlayerCreateRequest.clientVersion)
  
  return clientversion_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PlayerCreateRequest::set_allocated_clientversion(::std::string* clientversion) {
  if (clientversion != NULL) {
    
  } else {
    
  }
  clientversion_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), clientversion);
  // @@protoc_insertion_point(field_set_allocated:Proto.Message.PlayerCreateRequest.clientVersion)
}

// optional string appStore = 7;
void PlayerCreateRequest::clear_appstore() {
  appstore_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PlayerCreateRequest::appstore() const {
  // @@protoc_insertion_point(field_get:Proto.Message.PlayerCreateRequest.appStore)
  return appstore_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PlayerCreateRequest::set_appstore(const ::std::string& value) {
  
  appstore_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Proto.Message.PlayerCreateRequest.appStore)
}
 void PlayerCreateRequest::set_appstore(const char* value) {
  
  appstore_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Proto.Message.PlayerCreateRequest.appStore)
}
 void PlayerCreateRequest::set_appstore(const char* value, size_t size) {
  
  appstore_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Proto.Message.PlayerCreateRequest.appStore)
}
 ::std::string* PlayerCreateRequest::mutable_appstore() {
  
  // @@protoc_insertion_point(field_mutable:Proto.Message.PlayerCreateRequest.appStore)
  return appstore_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PlayerCreateRequest::release_appstore() {
  // @@protoc_insertion_point(field_release:Proto.Message.PlayerCreateRequest.appStore)
  
  return appstore_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PlayerCreateRequest::set_allocated_appstore(::std::string* appstore) {
  if (appstore != NULL) {
    
  } else {
    
  }
  appstore_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appstore);
  // @@protoc_insertion_point(field_set_allocated:Proto.Message.PlayerCreateRequest.appStore)
}

// optional string device = 8;
void PlayerCreateRequest::clear_device() {
  device_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PlayerCreateRequest::device() const {
  // @@protoc_insertion_point(field_get:Proto.Message.PlayerCreateRequest.device)
  return device_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PlayerCreateRequest::set_device(const ::std::string& value) {
  
  device_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Proto.Message.PlayerCreateRequest.device)
}
 void PlayerCreateRequest::set_device(const char* value) {
  
  device_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Proto.Message.PlayerCreateRequest.device)
}
 void PlayerCreateRequest::set_device(const char* value, size_t size) {
  
  device_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Proto.Message.PlayerCreateRequest.device)
}
 ::std::string* PlayerCreateRequest::mutable_device() {
  
  // @@protoc_insertion_point(field_mutable:Proto.Message.PlayerCreateRequest.device)
  return device_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PlayerCreateRequest::release_device() {
  // @@protoc_insertion_point(field_release:Proto.Message.PlayerCreateRequest.device)
  
  return device_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PlayerCreateRequest::set_allocated_device(::std::string* device) {
  if (device != NULL) {
    
  } else {
    
  }
  device_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), device);
  // @@protoc_insertion_point(field_set_allocated:Proto.Message.PlayerCreateRequest.device)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerCreateResponse::kPlayerInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerCreateResponse::PlayerCreateResponse()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Proto.Message.PlayerCreateResponse)
}

void PlayerCreateResponse::InitAsDefaultInstance() {
  _is_default_instance_ = true;
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  playerinfo_ = const_cast< ::Proto::Message::ProtoPlayerInfo*>(
      ::Proto::Message::ProtoPlayerInfo::internal_default_instance());
#else
  playerinfo_ = const_cast< ::Proto::Message::ProtoPlayerInfo*>(&::Proto::Message::ProtoPlayerInfo::default_instance());
#endif
}

PlayerCreateResponse::PlayerCreateResponse(const PlayerCreateResponse& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Proto.Message.PlayerCreateResponse)
}

void PlayerCreateResponse::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  playerinfo_ = NULL;
}

PlayerCreateResponse::~PlayerCreateResponse() {
  // @@protoc_insertion_point(destructor:Proto.Message.PlayerCreateResponse)
  SharedDtor();
}

void PlayerCreateResponse::SharedDtor() {
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
    delete playerinfo_;
  }
}

void PlayerCreateResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const PlayerCreateResponse& PlayerCreateResponse::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_ClientData_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_ClientData_2eproto();
#endif
  return *default_instance_;
}

PlayerCreateResponse* PlayerCreateResponse::default_instance_ = NULL;

PlayerCreateResponse* PlayerCreateResponse::New(::google::protobuf::Arena* arena) const {
  PlayerCreateResponse* n = new PlayerCreateResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerCreateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Proto.Message.PlayerCreateResponse)
  if (GetArenaNoVirtual() == NULL && playerinfo_ != NULL) delete playerinfo_;
  playerinfo_ = NULL;
}

bool PlayerCreateResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Proto.Message.PlayerCreateResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Proto.Message.ProtoPlayerInfo playerInfo = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_playerinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Proto.Message.PlayerCreateResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Proto.Message.PlayerCreateResponse)
  return false;
#undef DO_
}

void PlayerCreateResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Proto.Message.PlayerCreateResponse)
  // optional .Proto.Message.ProtoPlayerInfo playerInfo = 1;
  if (this->has_playerinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      1, *this->playerinfo_, output);
  }

  // @@protoc_insertion_point(serialize_end:Proto.Message.PlayerCreateResponse)
}

int PlayerCreateResponse::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Proto.Message.PlayerCreateResponse)
  int total_size = 0;

  // optional .Proto.Message.ProtoPlayerInfo playerInfo = 1;
  if (this->has_playerinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->playerinfo_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerCreateResponse::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const PlayerCreateResponse*>(&from));
}

void PlayerCreateResponse::MergeFrom(const PlayerCreateResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Proto.Message.PlayerCreateResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.has_playerinfo()) {
    mutable_playerinfo()->::Proto::Message::ProtoPlayerInfo::MergeFrom(from.playerinfo());
  }
}

void PlayerCreateResponse::CopyFrom(const PlayerCreateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Proto.Message.PlayerCreateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerCreateResponse::IsInitialized() const {

  return true;
}

void PlayerCreateResponse::Swap(PlayerCreateResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerCreateResponse::InternalSwap(PlayerCreateResponse* other) {
  std::swap(playerinfo_, other->playerinfo_);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string PlayerCreateResponse::GetTypeName() const {
  return "Proto.Message.PlayerCreateResponse";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerCreateResponse

// optional .Proto.Message.ProtoPlayerInfo playerInfo = 1;
bool PlayerCreateResponse::has_playerinfo() const {
  return !_is_default_instance_ && playerinfo_ != NULL;
}
void PlayerCreateResponse::clear_playerinfo() {
  if (GetArenaNoVirtual() == NULL && playerinfo_ != NULL) delete playerinfo_;
  playerinfo_ = NULL;
}
const ::Proto::Message::ProtoPlayerInfo& PlayerCreateResponse::playerinfo() const {
  // @@protoc_insertion_point(field_get:Proto.Message.PlayerCreateResponse.playerInfo)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return playerinfo_ != NULL ? *playerinfo_ : *default_instance().playerinfo_;
#else
  return playerinfo_ != NULL ? *playerinfo_ : *default_instance_->playerinfo_;
#endif
}
::Proto::Message::ProtoPlayerInfo* PlayerCreateResponse::mutable_playerinfo() {
  
  if (playerinfo_ == NULL) {
    playerinfo_ = new ::Proto::Message::ProtoPlayerInfo;
  }
  // @@protoc_insertion_point(field_mutable:Proto.Message.PlayerCreateResponse.playerInfo)
  return playerinfo_;
}
::Proto::Message::ProtoPlayerInfo* PlayerCreateResponse::release_playerinfo() {
  // @@protoc_insertion_point(field_release:Proto.Message.PlayerCreateResponse.playerInfo)
  
  ::Proto::Message::ProtoPlayerInfo* temp = playerinfo_;
  playerinfo_ = NULL;
  return temp;
}
void PlayerCreateResponse::set_allocated_playerinfo(::Proto::Message::ProtoPlayerInfo* playerinfo) {
  delete playerinfo_;
  playerinfo_ = playerinfo;
  if (playerinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Proto.Message.PlayerCreateResponse.playerInfo)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProtoPlayer::kIdFieldNumber;
const int ProtoPlayer::kNameFieldNumber;
const int ProtoPlayer::kIsBannedFieldNumber;
const int ProtoPlayer::kBannedStartTimeFieldNumber;
const int ProtoPlayer::kBannedEndTimeFieldNumber;
const int ProtoPlayer::kBannedReasonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProtoPlayer::ProtoPlayer()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Proto.Message.ProtoPlayer)
}

void ProtoPlayer::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ProtoPlayer::ProtoPlayer(const ProtoPlayer& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Proto.Message.ProtoPlayer)
}

void ProtoPlayer::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_ = GOOGLE_LONGLONG(0);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  isbanned_ = false;
  bannedstarttime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bannedendtime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bannedreason_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ProtoPlayer::~ProtoPlayer() {
  // @@protoc_insertion_point(destructor:Proto.Message.ProtoPlayer)
  SharedDtor();
}

void ProtoPlayer::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bannedstarttime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bannedendtime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bannedreason_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void ProtoPlayer::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ProtoPlayer& ProtoPlayer::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_ClientData_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_ClientData_2eproto();
#endif
  return *default_instance_;
}

ProtoPlayer* ProtoPlayer::default_instance_ = NULL;

ProtoPlayer* ProtoPlayer::New(::google::protobuf::Arena* arena) const {
  ProtoPlayer* n = new ProtoPlayer;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ProtoPlayer::Clear() {
// @@protoc_insertion_point(message_clear_start:Proto.Message.ProtoPlayer)
  id_ = GOOGLE_LONGLONG(0);
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  isbanned_ = false;
  bannedstarttime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bannedendtime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bannedreason_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ProtoPlayer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Proto.Message.ProtoPlayer)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint64 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // optional string name = 2;
      case 2: {
        if (tag == 18) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Proto.Message.ProtoPlayer.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_isBanned;
        break;
      }

      // optional bool isBanned = 3;
      case 3: {
        if (tag == 24) {
         parse_isBanned:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isbanned_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_bannedStartTime;
        break;
      }

      // optional string bannedStartTime = 4;
      case 4: {
        if (tag == 34) {
         parse_bannedStartTime:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bannedstarttime()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->bannedstarttime().data(), this->bannedstarttime().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Proto.Message.ProtoPlayer.bannedStartTime"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_bannedEndTime;
        break;
      }

      // optional string bannedEndTime = 5;
      case 5: {
        if (tag == 42) {
         parse_bannedEndTime:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bannedendtime()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->bannedendtime().data(), this->bannedendtime().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Proto.Message.ProtoPlayer.bannedEndTime"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_bannedReason;
        break;
      }

      // optional string bannedReason = 6;
      case 6: {
        if (tag == 50) {
         parse_bannedReason:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bannedreason()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->bannedreason().data(), this->bannedreason().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Proto.Message.ProtoPlayer.bannedReason"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Proto.Message.ProtoPlayer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Proto.Message.ProtoPlayer)
  return false;
#undef DO_
}

void ProtoPlayer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Proto.Message.ProtoPlayer)
  // optional sint64 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(1, this->id(), output);
  }

  // optional string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Proto.Message.ProtoPlayer.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // optional bool isBanned = 3;
  if (this->isbanned() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->isbanned(), output);
  }

  // optional string bannedStartTime = 4;
  if (this->bannedstarttime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bannedstarttime().data(), this->bannedstarttime().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Proto.Message.ProtoPlayer.bannedStartTime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->bannedstarttime(), output);
  }

  // optional string bannedEndTime = 5;
  if (this->bannedendtime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bannedendtime().data(), this->bannedendtime().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Proto.Message.ProtoPlayer.bannedEndTime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->bannedendtime(), output);
  }

  // optional string bannedReason = 6;
  if (this->bannedreason().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bannedreason().data(), this->bannedreason().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Proto.Message.ProtoPlayer.bannedReason");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->bannedreason(), output);
  }

  // @@protoc_insertion_point(serialize_end:Proto.Message.ProtoPlayer)
}

int ProtoPlayer::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Proto.Message.ProtoPlayer)
  int total_size = 0;

  // optional sint64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->id());
  }

  // optional string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional bool isBanned = 3;
  if (this->isbanned() != 0) {
    total_size += 1 + 1;
  }

  // optional string bannedStartTime = 4;
  if (this->bannedstarttime().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->bannedstarttime());
  }

  // optional string bannedEndTime = 5;
  if (this->bannedendtime().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->bannedendtime());
  }

  // optional string bannedReason = 6;
  if (this->bannedreason().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->bannedreason());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProtoPlayer::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const ProtoPlayer*>(&from));
}

void ProtoPlayer::MergeFrom(const ProtoPlayer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Proto.Message.ProtoPlayer)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.isbanned() != 0) {
    set_isbanned(from.isbanned());
  }
  if (from.bannedstarttime().size() > 0) {

    bannedstarttime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bannedstarttime_);
  }
  if (from.bannedendtime().size() > 0) {

    bannedendtime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bannedendtime_);
  }
  if (from.bannedreason().size() > 0) {

    bannedreason_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bannedreason_);
  }
}

void ProtoPlayer::CopyFrom(const ProtoPlayer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Proto.Message.ProtoPlayer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoPlayer::IsInitialized() const {

  return true;
}

void ProtoPlayer::Swap(ProtoPlayer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProtoPlayer::InternalSwap(ProtoPlayer* other) {
  std::swap(id_, other->id_);
  name_.Swap(&other->name_);
  std::swap(isbanned_, other->isbanned_);
  bannedstarttime_.Swap(&other->bannedstarttime_);
  bannedendtime_.Swap(&other->bannedendtime_);
  bannedreason_.Swap(&other->bannedreason_);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string ProtoPlayer::GetTypeName() const {
  return "Proto.Message.ProtoPlayer";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ProtoPlayer

// optional sint64 id = 1;
void ProtoPlayer::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 ProtoPlayer::id() const {
  // @@protoc_insertion_point(field_get:Proto.Message.ProtoPlayer.id)
  return id_;
}
 void ProtoPlayer::set_id(::google::protobuf::int64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:Proto.Message.ProtoPlayer.id)
}

// optional string name = 2;
void ProtoPlayer::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ProtoPlayer::name() const {
  // @@protoc_insertion_point(field_get:Proto.Message.ProtoPlayer.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ProtoPlayer::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Proto.Message.ProtoPlayer.name)
}
 void ProtoPlayer::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Proto.Message.ProtoPlayer.name)
}
 void ProtoPlayer::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Proto.Message.ProtoPlayer.name)
}
 ::std::string* ProtoPlayer::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:Proto.Message.ProtoPlayer.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ProtoPlayer::release_name() {
  // @@protoc_insertion_point(field_release:Proto.Message.ProtoPlayer.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ProtoPlayer::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:Proto.Message.ProtoPlayer.name)
}

// optional bool isBanned = 3;
void ProtoPlayer::clear_isbanned() {
  isbanned_ = false;
}
 bool ProtoPlayer::isbanned() const {
  // @@protoc_insertion_point(field_get:Proto.Message.ProtoPlayer.isBanned)
  return isbanned_;
}
 void ProtoPlayer::set_isbanned(bool value) {
  
  isbanned_ = value;
  // @@protoc_insertion_point(field_set:Proto.Message.ProtoPlayer.isBanned)
}

// optional string bannedStartTime = 4;
void ProtoPlayer::clear_bannedstarttime() {
  bannedstarttime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ProtoPlayer::bannedstarttime() const {
  // @@protoc_insertion_point(field_get:Proto.Message.ProtoPlayer.bannedStartTime)
  return bannedstarttime_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ProtoPlayer::set_bannedstarttime(const ::std::string& value) {
  
  bannedstarttime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Proto.Message.ProtoPlayer.bannedStartTime)
}
 void ProtoPlayer::set_bannedstarttime(const char* value) {
  
  bannedstarttime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Proto.Message.ProtoPlayer.bannedStartTime)
}
 void ProtoPlayer::set_bannedstarttime(const char* value, size_t size) {
  
  bannedstarttime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Proto.Message.ProtoPlayer.bannedStartTime)
}
 ::std::string* ProtoPlayer::mutable_bannedstarttime() {
  
  // @@protoc_insertion_point(field_mutable:Proto.Message.ProtoPlayer.bannedStartTime)
  return bannedstarttime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ProtoPlayer::release_bannedstarttime() {
  // @@protoc_insertion_point(field_release:Proto.Message.ProtoPlayer.bannedStartTime)
  
  return bannedstarttime_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ProtoPlayer::set_allocated_bannedstarttime(::std::string* bannedstarttime) {
  if (bannedstarttime != NULL) {
    
  } else {
    
  }
  bannedstarttime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bannedstarttime);
  // @@protoc_insertion_point(field_set_allocated:Proto.Message.ProtoPlayer.bannedStartTime)
}

// optional string bannedEndTime = 5;
void ProtoPlayer::clear_bannedendtime() {
  bannedendtime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ProtoPlayer::bannedendtime() const {
  // @@protoc_insertion_point(field_get:Proto.Message.ProtoPlayer.bannedEndTime)
  return bannedendtime_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ProtoPlayer::set_bannedendtime(const ::std::string& value) {
  
  bannedendtime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Proto.Message.ProtoPlayer.bannedEndTime)
}
 void ProtoPlayer::set_bannedendtime(const char* value) {
  
  bannedendtime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Proto.Message.ProtoPlayer.bannedEndTime)
}
 void ProtoPlayer::set_bannedendtime(const char* value, size_t size) {
  
  bannedendtime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Proto.Message.ProtoPlayer.bannedEndTime)
}
 ::std::string* ProtoPlayer::mutable_bannedendtime() {
  
  // @@protoc_insertion_point(field_mutable:Proto.Message.ProtoPlayer.bannedEndTime)
  return bannedendtime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ProtoPlayer::release_bannedendtime() {
  // @@protoc_insertion_point(field_release:Proto.Message.ProtoPlayer.bannedEndTime)
  
  return bannedendtime_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ProtoPlayer::set_allocated_bannedendtime(::std::string* bannedendtime) {
  if (bannedendtime != NULL) {
    
  } else {
    
  }
  bannedendtime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bannedendtime);
  // @@protoc_insertion_point(field_set_allocated:Proto.Message.ProtoPlayer.bannedEndTime)
}

// optional string bannedReason = 6;
void ProtoPlayer::clear_bannedreason() {
  bannedreason_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ProtoPlayer::bannedreason() const {
  // @@protoc_insertion_point(field_get:Proto.Message.ProtoPlayer.bannedReason)
  return bannedreason_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ProtoPlayer::set_bannedreason(const ::std::string& value) {
  
  bannedreason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Proto.Message.ProtoPlayer.bannedReason)
}
 void ProtoPlayer::set_bannedreason(const char* value) {
  
  bannedreason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Proto.Message.ProtoPlayer.bannedReason)
}
 void ProtoPlayer::set_bannedreason(const char* value, size_t size) {
  
  bannedreason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Proto.Message.ProtoPlayer.bannedReason)
}
 ::std::string* ProtoPlayer::mutable_bannedreason() {
  
  // @@protoc_insertion_point(field_mutable:Proto.Message.ProtoPlayer.bannedReason)
  return bannedreason_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ProtoPlayer::release_bannedreason() {
  // @@protoc_insertion_point(field_release:Proto.Message.ProtoPlayer.bannedReason)
  
  return bannedreason_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ProtoPlayer::set_allocated_bannedreason(::std::string* bannedreason) {
  if (bannedreason != NULL) {
    
  } else {
    
  }
  bannedreason_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bannedreason);
  // @@protoc_insertion_point(field_set_allocated:Proto.Message.ProtoPlayer.bannedReason)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProtoPlayerGarage::kIdFieldNumber;
const int ProtoPlayerGarage::kNameFieldNumber;
const int ProtoPlayerGarage::kGarageInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProtoPlayerGarage::ProtoPlayerGarage()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Proto.Message.ProtoPlayerGarage)
}

void ProtoPlayerGarage::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ProtoPlayerGarage::ProtoPlayerGarage(const ProtoPlayerGarage& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Proto.Message.ProtoPlayerGarage)
}

void ProtoPlayerGarage::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_ = GOOGLE_LONGLONG(0);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  garageinfo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ProtoPlayerGarage::~ProtoPlayerGarage() {
  // @@protoc_insertion_point(destructor:Proto.Message.ProtoPlayerGarage)
  SharedDtor();
}

void ProtoPlayerGarage::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  garageinfo_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void ProtoPlayerGarage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ProtoPlayerGarage& ProtoPlayerGarage::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_ClientData_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_ClientData_2eproto();
#endif
  return *default_instance_;
}

ProtoPlayerGarage* ProtoPlayerGarage::default_instance_ = NULL;

ProtoPlayerGarage* ProtoPlayerGarage::New(::google::protobuf::Arena* arena) const {
  ProtoPlayerGarage* n = new ProtoPlayerGarage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ProtoPlayerGarage::Clear() {
// @@protoc_insertion_point(message_clear_start:Proto.Message.ProtoPlayerGarage)
  id_ = GOOGLE_LONGLONG(0);
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  garageinfo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ProtoPlayerGarage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Proto.Message.ProtoPlayerGarage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint64 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // optional string name = 2;
      case 2: {
        if (tag == 18) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Proto.Message.ProtoPlayerGarage.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_garageInfo;
        break;
      }

      // optional string garageInfo = 3;
      case 3: {
        if (tag == 26) {
         parse_garageInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_garageinfo()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->garageinfo().data(), this->garageinfo().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Proto.Message.ProtoPlayerGarage.garageInfo"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Proto.Message.ProtoPlayerGarage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Proto.Message.ProtoPlayerGarage)
  return false;
#undef DO_
}

void ProtoPlayerGarage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Proto.Message.ProtoPlayerGarage)
  // optional sint64 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(1, this->id(), output);
  }

  // optional string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Proto.Message.ProtoPlayerGarage.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // optional string garageInfo = 3;
  if (this->garageinfo().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->garageinfo().data(), this->garageinfo().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Proto.Message.ProtoPlayerGarage.garageInfo");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->garageinfo(), output);
  }

  // @@protoc_insertion_point(serialize_end:Proto.Message.ProtoPlayerGarage)
}

int ProtoPlayerGarage::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Proto.Message.ProtoPlayerGarage)
  int total_size = 0;

  // optional sint64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->id());
  }

  // optional string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional string garageInfo = 3;
  if (this->garageinfo().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->garageinfo());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProtoPlayerGarage::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const ProtoPlayerGarage*>(&from));
}

void ProtoPlayerGarage::MergeFrom(const ProtoPlayerGarage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Proto.Message.ProtoPlayerGarage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.garageinfo().size() > 0) {

    garageinfo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.garageinfo_);
  }
}

void ProtoPlayerGarage::CopyFrom(const ProtoPlayerGarage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Proto.Message.ProtoPlayerGarage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoPlayerGarage::IsInitialized() const {

  return true;
}

void ProtoPlayerGarage::Swap(ProtoPlayerGarage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProtoPlayerGarage::InternalSwap(ProtoPlayerGarage* other) {
  std::swap(id_, other->id_);
  name_.Swap(&other->name_);
  garageinfo_.Swap(&other->garageinfo_);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string ProtoPlayerGarage::GetTypeName() const {
  return "Proto.Message.ProtoPlayerGarage";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ProtoPlayerGarage

// optional sint64 id = 1;
void ProtoPlayerGarage::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 ProtoPlayerGarage::id() const {
  // @@protoc_insertion_point(field_get:Proto.Message.ProtoPlayerGarage.id)
  return id_;
}
 void ProtoPlayerGarage::set_id(::google::protobuf::int64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:Proto.Message.ProtoPlayerGarage.id)
}

// optional string name = 2;
void ProtoPlayerGarage::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ProtoPlayerGarage::name() const {
  // @@protoc_insertion_point(field_get:Proto.Message.ProtoPlayerGarage.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ProtoPlayerGarage::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Proto.Message.ProtoPlayerGarage.name)
}
 void ProtoPlayerGarage::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Proto.Message.ProtoPlayerGarage.name)
}
 void ProtoPlayerGarage::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Proto.Message.ProtoPlayerGarage.name)
}
 ::std::string* ProtoPlayerGarage::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:Proto.Message.ProtoPlayerGarage.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ProtoPlayerGarage::release_name() {
  // @@protoc_insertion_point(field_release:Proto.Message.ProtoPlayerGarage.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ProtoPlayerGarage::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:Proto.Message.ProtoPlayerGarage.name)
}

// optional string garageInfo = 3;
void ProtoPlayerGarage::clear_garageinfo() {
  garageinfo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ProtoPlayerGarage::garageinfo() const {
  // @@protoc_insertion_point(field_get:Proto.Message.ProtoPlayerGarage.garageInfo)
  return garageinfo_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ProtoPlayerGarage::set_garageinfo(const ::std::string& value) {
  
  garageinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Proto.Message.ProtoPlayerGarage.garageInfo)
}
 void ProtoPlayerGarage::set_garageinfo(const char* value) {
  
  garageinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Proto.Message.ProtoPlayerGarage.garageInfo)
}
 void ProtoPlayerGarage::set_garageinfo(const char* value, size_t size) {
  
  garageinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Proto.Message.ProtoPlayerGarage.garageInfo)
}
 ::std::string* ProtoPlayerGarage::mutable_garageinfo() {
  
  // @@protoc_insertion_point(field_mutable:Proto.Message.ProtoPlayerGarage.garageInfo)
  return garageinfo_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ProtoPlayerGarage::release_garageinfo() {
  // @@protoc_insertion_point(field_release:Proto.Message.ProtoPlayerGarage.garageInfo)
  
  return garageinfo_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ProtoPlayerGarage::set_allocated_garageinfo(::std::string* garageinfo) {
  if (garageinfo != NULL) {
    
  } else {
    
  }
  garageinfo_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), garageinfo);
  // @@protoc_insertion_point(field_set_allocated:Proto.Message.ProtoPlayerGarage.garageInfo)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProtoPlayerItem::kIdFieldNumber;
const int ProtoPlayerItem::kSysItemIdFieldNumber;
const int ProtoPlayerItem::kItemTypeFieldNumber;
const int ProtoPlayerItem::kCountFieldNumber;
const int ProtoPlayerItem::kLevelFieldNumber;
const int ProtoPlayerItem::kRankFieldNumber;
const int ProtoPlayerItem::kIsEquippedFieldNumber;
const int ProtoPlayerItem::kExpFieldNumber;
const int ProtoPlayerItem::kIsDefaultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProtoPlayerItem::ProtoPlayerItem()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Proto.Message.ProtoPlayerItem)
}

void ProtoPlayerItem::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ProtoPlayerItem::ProtoPlayerItem(const ProtoPlayerItem& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Proto.Message.ProtoPlayerItem)
}

void ProtoPlayerItem::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  id_ = GOOGLE_LONGLONG(0);
  sysitemid_ = 0u;
  itemtype_ = 0u;
  count_ = 0u;
  level_ = 0u;
  rank_ = 0u;
  isequipped_ = false;
  exp_ = 0u;
  isdefault_ = false;
}

ProtoPlayerItem::~ProtoPlayerItem() {
  // @@protoc_insertion_point(destructor:Proto.Message.ProtoPlayerItem)
  SharedDtor();
}

void ProtoPlayerItem::SharedDtor() {
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void ProtoPlayerItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ProtoPlayerItem& ProtoPlayerItem::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_ClientData_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_ClientData_2eproto();
#endif
  return *default_instance_;
}

ProtoPlayerItem* ProtoPlayerItem::default_instance_ = NULL;

ProtoPlayerItem* ProtoPlayerItem::New(::google::protobuf::Arena* arena) const {
  ProtoPlayerItem* n = new ProtoPlayerItem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ProtoPlayerItem::Clear() {
// @@protoc_insertion_point(message_clear_start:Proto.Message.ProtoPlayerItem)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ProtoPlayerItem, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ProtoPlayerItem*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(id_, isequipped_);
  isdefault_ = false;

#undef ZR_HELPER_
#undef ZR_

}

bool ProtoPlayerItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Proto.Message.ProtoPlayerItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint64 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_sysItemId;
        break;
      }

      // optional uint32 sysItemId = 2;
      case 2: {
        if (tag == 16) {
         parse_sysItemId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sysitemid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_itemType;
        break;
      }

      // optional uint32 itemType = 3;
      case 3: {
        if (tag == 24) {
         parse_itemType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &itemtype_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_count;
        break;
      }

      // optional uint32 count = 4;
      case 4: {
        if (tag == 32) {
         parse_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_level;
        break;
      }

      // optional uint32 level = 5;
      case 5: {
        if (tag == 40) {
         parse_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_rank;
        break;
      }

      // optional uint32 rank = 6;
      case 6: {
        if (tag == 48) {
         parse_rank:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rank_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_isEquipped;
        break;
      }

      // optional bool isEquipped = 7;
      case 7: {
        if (tag == 56) {
         parse_isEquipped:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isequipped_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_exp;
        break;
      }

      // optional uint32 exp = 8;
      case 8: {
        if (tag == 64) {
         parse_exp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &exp_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_isDefault;
        break;
      }

      // optional bool isDefault = 10;
      case 10: {
        if (tag == 80) {
         parse_isDefault:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isdefault_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Proto.Message.ProtoPlayerItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Proto.Message.ProtoPlayerItem)
  return false;
#undef DO_
}

void ProtoPlayerItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Proto.Message.ProtoPlayerItem)
  // optional sint64 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(1, this->id(), output);
  }

  // optional uint32 sysItemId = 2;
  if (this->sysitemid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->sysitemid(), output);
  }

  // optional uint32 itemType = 3;
  if (this->itemtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->itemtype(), output);
  }

  // optional uint32 count = 4;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->count(), output);
  }

  // optional uint32 level = 5;
  if (this->level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->level(), output);
  }

  // optional uint32 rank = 6;
  if (this->rank() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->rank(), output);
  }

  // optional bool isEquipped = 7;
  if (this->isequipped() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->isequipped(), output);
  }

  // optional uint32 exp = 8;
  if (this->exp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->exp(), output);
  }

  // optional bool isDefault = 10;
  if (this->isdefault() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->isdefault(), output);
  }

  // @@protoc_insertion_point(serialize_end:Proto.Message.ProtoPlayerItem)
}

int ProtoPlayerItem::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Proto.Message.ProtoPlayerItem)
  int total_size = 0;

  // optional sint64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->id());
  }

  // optional uint32 sysItemId = 2;
  if (this->sysitemid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->sysitemid());
  }

  // optional uint32 itemType = 3;
  if (this->itemtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->itemtype());
  }

  // optional uint32 count = 4;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count());
  }

  // optional uint32 level = 5;
  if (this->level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->level());
  }

  // optional uint32 rank = 6;
  if (this->rank() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->rank());
  }

  // optional bool isEquipped = 7;
  if (this->isequipped() != 0) {
    total_size += 1 + 1;
  }

  // optional uint32 exp = 8;
  if (this->exp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->exp());
  }

  // optional bool isDefault = 10;
  if (this->isdefault() != 0) {
    total_size += 1 + 1;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProtoPlayerItem::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const ProtoPlayerItem*>(&from));
}

void ProtoPlayerItem::MergeFrom(const ProtoPlayerItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Proto.Message.ProtoPlayerItem)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.sysitemid() != 0) {
    set_sysitemid(from.sysitemid());
  }
  if (from.itemtype() != 0) {
    set_itemtype(from.itemtype());
  }
  if (from.count() != 0) {
    set_count(from.count());
  }
  if (from.level() != 0) {
    set_level(from.level());
  }
  if (from.rank() != 0) {
    set_rank(from.rank());
  }
  if (from.isequipped() != 0) {
    set_isequipped(from.isequipped());
  }
  if (from.exp() != 0) {
    set_exp(from.exp());
  }
  if (from.isdefault() != 0) {
    set_isdefault(from.isdefault());
  }
}

void ProtoPlayerItem::CopyFrom(const ProtoPlayerItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Proto.Message.ProtoPlayerItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoPlayerItem::IsInitialized() const {

  return true;
}

void ProtoPlayerItem::Swap(ProtoPlayerItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProtoPlayerItem::InternalSwap(ProtoPlayerItem* other) {
  std::swap(id_, other->id_);
  std::swap(sysitemid_, other->sysitemid_);
  std::swap(itemtype_, other->itemtype_);
  std::swap(count_, other->count_);
  std::swap(level_, other->level_);
  std::swap(rank_, other->rank_);
  std::swap(isequipped_, other->isequipped_);
  std::swap(exp_, other->exp_);
  std::swap(isdefault_, other->isdefault_);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string ProtoPlayerItem::GetTypeName() const {
  return "Proto.Message.ProtoPlayerItem";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ProtoPlayerItem

// optional sint64 id = 1;
void ProtoPlayerItem::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 ProtoPlayerItem::id() const {
  // @@protoc_insertion_point(field_get:Proto.Message.ProtoPlayerItem.id)
  return id_;
}
 void ProtoPlayerItem::set_id(::google::protobuf::int64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:Proto.Message.ProtoPlayerItem.id)
}

// optional uint32 sysItemId = 2;
void ProtoPlayerItem::clear_sysitemid() {
  sysitemid_ = 0u;
}
 ::google::protobuf::uint32 ProtoPlayerItem::sysitemid() const {
  // @@protoc_insertion_point(field_get:Proto.Message.ProtoPlayerItem.sysItemId)
  return sysitemid_;
}
 void ProtoPlayerItem::set_sysitemid(::google::protobuf::uint32 value) {
  
  sysitemid_ = value;
  // @@protoc_insertion_point(field_set:Proto.Message.ProtoPlayerItem.sysItemId)
}

// optional uint32 itemType = 3;
void ProtoPlayerItem::clear_itemtype() {
  itemtype_ = 0u;
}
 ::google::protobuf::uint32 ProtoPlayerItem::itemtype() const {
  // @@protoc_insertion_point(field_get:Proto.Message.ProtoPlayerItem.itemType)
  return itemtype_;
}
 void ProtoPlayerItem::set_itemtype(::google::protobuf::uint32 value) {
  
  itemtype_ = value;
  // @@protoc_insertion_point(field_set:Proto.Message.ProtoPlayerItem.itemType)
}

// optional uint32 count = 4;
void ProtoPlayerItem::clear_count() {
  count_ = 0u;
}
 ::google::protobuf::uint32 ProtoPlayerItem::count() const {
  // @@protoc_insertion_point(field_get:Proto.Message.ProtoPlayerItem.count)
  return count_;
}
 void ProtoPlayerItem::set_count(::google::protobuf::uint32 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:Proto.Message.ProtoPlayerItem.count)
}

// optional uint32 level = 5;
void ProtoPlayerItem::clear_level() {
  level_ = 0u;
}
 ::google::protobuf::uint32 ProtoPlayerItem::level() const {
  // @@protoc_insertion_point(field_get:Proto.Message.ProtoPlayerItem.level)
  return level_;
}
 void ProtoPlayerItem::set_level(::google::protobuf::uint32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:Proto.Message.ProtoPlayerItem.level)
}

// optional uint32 rank = 6;
void ProtoPlayerItem::clear_rank() {
  rank_ = 0u;
}
 ::google::protobuf::uint32 ProtoPlayerItem::rank() const {
  // @@protoc_insertion_point(field_get:Proto.Message.ProtoPlayerItem.rank)
  return rank_;
}
 void ProtoPlayerItem::set_rank(::google::protobuf::uint32 value) {
  
  rank_ = value;
  // @@protoc_insertion_point(field_set:Proto.Message.ProtoPlayerItem.rank)
}

// optional bool isEquipped = 7;
void ProtoPlayerItem::clear_isequipped() {
  isequipped_ = false;
}
 bool ProtoPlayerItem::isequipped() const {
  // @@protoc_insertion_point(field_get:Proto.Message.ProtoPlayerItem.isEquipped)
  return isequipped_;
}
 void ProtoPlayerItem::set_isequipped(bool value) {
  
  isequipped_ = value;
  // @@protoc_insertion_point(field_set:Proto.Message.ProtoPlayerItem.isEquipped)
}

// optional uint32 exp = 8;
void ProtoPlayerItem::clear_exp() {
  exp_ = 0u;
}
 ::google::protobuf::uint32 ProtoPlayerItem::exp() const {
  // @@protoc_insertion_point(field_get:Proto.Message.ProtoPlayerItem.exp)
  return exp_;
}
 void ProtoPlayerItem::set_exp(::google::protobuf::uint32 value) {
  
  exp_ = value;
  // @@protoc_insertion_point(field_set:Proto.Message.ProtoPlayerItem.exp)
}

// optional bool isDefault = 10;
void ProtoPlayerItem::clear_isdefault() {
  isdefault_ = false;
}
 bool ProtoPlayerItem::isdefault() const {
  // @@protoc_insertion_point(field_get:Proto.Message.ProtoPlayerItem.isDefault)
  return isdefault_;
}
 void ProtoPlayerItem::set_isdefault(bool value) {
  
  isdefault_ = value;
  // @@protoc_insertion_point(field_set:Proto.Message.ProtoPlayerItem.isDefault)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProtoPlayerInfo::kIdFieldNumber;
const int ProtoPlayerInfo::kNameFieldNumber;
const int ProtoPlayerInfo::kUserNameFieldNumber;
const int ProtoPlayerInfo::kGoldFieldNumber;
const int ProtoPlayerInfo::kDiamondFieldNumber;
const int ProtoPlayerInfo::kPointFieldNumber;
const int ProtoPlayerInfo::kPowerFieldNumber;
const int ProtoPlayerInfo::kExpFieldNumber;
const int ProtoPlayerInfo::kLevelFieldNumber;
const int ProtoPlayerInfo::kAvatarFieldNumber;
const int ProtoPlayerInfo::kNextLevelExpFieldNumber;
const int ProtoPlayerInfo::kSkillPointFieldNumber;
const int ProtoPlayerInfo::kPlayerItemsFieldNumber;
const int ProtoPlayerInfo::kPlayerGaragesFieldNumber;
const int ProtoPlayerInfo::kSysCharacterIdFieldNumber;
const int ProtoPlayerInfo::kLastLoginTimeFieldNumber;
const int ProtoPlayerInfo::kFlagFieldNumber;
const int ProtoPlayerInfo::kBattleFireFieldNumber;
const int ProtoPlayerInfo::kNewbieProgressFieldNumber;
const int ProtoPlayerInfo::kHaveNewMailFieldNumber;
const int ProtoPlayerInfo::kQuestScoreFieldNumber;
const int ProtoPlayerInfo::kNextPvpTimeFieldNumber;
const int ProtoPlayerInfo::kLastPvpTimeFieldNumber;
const int ProtoPlayerInfo::kReviveCountFieldNumber;
const int ProtoPlayerInfo::kActivateTimeFieldNumber;
const int ProtoPlayerInfo::kArmorSuitLevelFieldNumber;
const int ProtoPlayerInfo::kStaminaFieldNumber;
const int ProtoPlayerInfo::kVipLevelFieldNumber;
const int ProtoPlayerInfo::kBuyStaminaCountFieldNumber;
const int ProtoPlayerInfo::kBuyGoldCountFieldNumber;
const int ProtoPlayerInfo::kRefreshShopCountFieldNumber;
const int ProtoPlayerInfo::kBuyTrialCountFieldNumber;
const int ProtoPlayerInfo::kBuyPowerCountFieldNumber;
const int ProtoPlayerInfo::kEliteCountFieldNumber;
const int ProtoPlayerInfo::kAccountTypeFieldNumber;
const int ProtoPlayerInfo::kStaminaIdsFieldNumber;
const int ProtoPlayerInfo::kStorageSlotsFieldNumber;
const int ProtoPlayerInfo::kServerZoneIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProtoPlayerInfo::ProtoPlayerInfo()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Proto.Message.ProtoPlayerInfo)
}

void ProtoPlayerInfo::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ProtoPlayerInfo::ProtoPlayerInfo(const ProtoPlayerInfo& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Proto.Message.ProtoPlayerInfo)
}

void ProtoPlayerInfo::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_ = GOOGLE_LONGLONG(0);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gold_ = 0u;
  diamond_ = 0u;
  point_ = 0u;
  power_ = 0u;
  exp_ = 0u;
  level_ = 0u;
  avatar_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nextlevelexp_ = 0u;
  skillpoint_ = 0u;
  syscharacterid_ = 0u;
  lastlogintime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  flag_ = 0u;
  battlefire_ = 0;
  newbieprogress_ = 0u;
  havenewmail_ = false;
  questscore_ = 0u;
  nextpvptime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lastpvptime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  revivecount_ = 0u;
  activatetime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  armorsuitlevel_ = 0u;
  stamina_ = 0u;
  viplevel_ = 0u;
  buystaminacount_ = 0u;
  buygoldcount_ = 0u;
  refreshshopcount_ = 0u;
  buytrialcount_ = 0u;
  buypowercount_ = 0u;
  elitecount_ = 0u;
  accounttype_ = 0;
  staminaids_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  storageslots_ = 0u;
  serverzoneid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ProtoPlayerInfo::~ProtoPlayerInfo() {
  // @@protoc_insertion_point(destructor:Proto.Message.ProtoPlayerInfo)
  SharedDtor();
}

void ProtoPlayerInfo::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  avatar_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lastlogintime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nextpvptime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lastpvptime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  activatetime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  staminaids_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serverzoneid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void ProtoPlayerInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ProtoPlayerInfo& ProtoPlayerInfo::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_ClientData_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_ClientData_2eproto();
#endif
  return *default_instance_;
}

ProtoPlayerInfo* ProtoPlayerInfo::default_instance_ = NULL;

ProtoPlayerInfo* ProtoPlayerInfo::New(::google::protobuf::Arena* arena) const {
  ProtoPlayerInfo* n = new ProtoPlayerInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ProtoPlayerInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:Proto.Message.ProtoPlayerInfo)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ProtoPlayerInfo, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ProtoPlayerInfo*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(gold_, exp_);
  id_ = GOOGLE_LONGLONG(0);
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ZR_(nextlevelexp_, skillpoint_);
  level_ = 0u;
  avatar_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  syscharacterid_ = 0u;
  lastlogintime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ZR_(flag_, questscore_);
  nextpvptime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lastpvptime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  revivecount_ = 0u;
  ZR_(armorsuitlevel_, buytrialcount_);
  activatetime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ZR_(buypowercount_, elitecount_);
  ZR_(accounttype_, storageslots_);
  staminaids_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serverzoneid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

  playeritems_.Clear();
  playergarages_.Clear();
}

bool ProtoPlayerInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Proto.Message.ProtoPlayerInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional sint64 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // optional string name = 2;
      case 2: {
        if (tag == 18) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Proto.Message.ProtoPlayerInfo.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_userName;
        break;
      }

      // optional string userName = 3;
      case 3: {
        if (tag == 26) {
         parse_userName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->username().data(), this->username().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Proto.Message.ProtoPlayerInfo.userName"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_gold;
        break;
      }

      // optional uint32 gold = 4;
      case 4: {
        if (tag == 32) {
         parse_gold:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gold_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_diamond;
        break;
      }

      // optional uint32 diamond = 5;
      case 5: {
        if (tag == 40) {
         parse_diamond:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &diamond_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_point;
        break;
      }

      // optional uint32 point = 6;
      case 6: {
        if (tag == 48) {
         parse_point:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &point_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_power;
        break;
      }

      // optional uint32 power = 8;
      case 8: {
        if (tag == 64) {
         parse_power:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &power_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_exp;
        break;
      }

      // optional uint32 exp = 9;
      case 9: {
        if (tag == 72) {
         parse_exp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &exp_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_level;
        break;
      }

      // optional uint32 level = 10;
      case 10: {
        if (tag == 80) {
         parse_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_avatar;
        break;
      }

      // optional string avatar = 12;
      case 12: {
        if (tag == 98) {
         parse_avatar:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_avatar()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->avatar().data(), this->avatar().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Proto.Message.ProtoPlayerInfo.avatar"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_nextLevelExp;
        break;
      }

      // optional uint32 nextLevelExp = 13;
      case 13: {
        if (tag == 104) {
         parse_nextLevelExp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &nextlevelexp_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(112)) goto parse_skillPoint;
        break;
      }

      // optional uint32 skillPoint = 14;
      case 14: {
        if (tag == 112) {
         parse_skillPoint:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &skillpoint_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(122)) goto parse_playerItems;
        break;
      }

      // repeated .Proto.Message.ProtoPlayerItem playerItems = 15;
      case 15: {
        if (tag == 122) {
         parse_playerItems:
          DO_(input->IncrementRecursionDepth());
         parse_loop_playerItems:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_playeritems()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(122)) goto parse_loop_playerItems;
        if (input->ExpectTag(130)) goto parse_loop_playerGarages;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .Proto.Message.ProtoPlayerGarage playerGarages = 16;
      case 16: {
        if (tag == 130) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_playerGarages:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_playergarages()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(130)) goto parse_loop_playerGarages;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(136)) goto parse_sysCharacterId;
        break;
      }

      // optional uint32 sysCharacterId = 17;
      case 17: {
        if (tag == 136) {
         parse_sysCharacterId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &syscharacterid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(210)) goto parse_lastLoginTime;
        break;
      }

      // optional string lastLoginTime = 26;
      case 26: {
        if (tag == 210) {
         parse_lastLoginTime:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_lastlogintime()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->lastlogintime().data(), this->lastlogintime().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Proto.Message.ProtoPlayerInfo.lastLoginTime"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(248)) goto parse_flag;
        break;
      }

      // optional uint32 flag = 31;
      case 31: {
        if (tag == 248) {
         parse_flag:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &flag_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(261)) goto parse_battleFire;
        break;
      }

      // optional float battleFire = 32;
      case 32: {
        if (tag == 261) {
         parse_battleFire:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &battlefire_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(296)) goto parse_newbieProgress;
        break;
      }

      // optional uint32 newbieProgress = 37;
      case 37: {
        if (tag == 296) {
         parse_newbieProgress:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &newbieprogress_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(312)) goto parse_haveNewMail;
        break;
      }

      // optional bool haveNewMail = 39;
      case 39: {
        if (tag == 312) {
         parse_haveNewMail:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &havenewmail_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(320)) goto parse_questScore;
        break;
      }

      // optional uint32 questScore = 40;
      case 40: {
        if (tag == 320) {
         parse_questScore:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &questscore_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(330)) goto parse_nextPvpTime;
        break;
      }

      // optional string nextPvpTime = 41;
      case 41: {
        if (tag == 330) {
         parse_nextPvpTime:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nextpvptime()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->nextpvptime().data(), this->nextpvptime().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Proto.Message.ProtoPlayerInfo.nextPvpTime"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(338)) goto parse_lastPvpTime;
        break;
      }

      // optional string lastPvpTime = 42;
      case 42: {
        if (tag == 338) {
         parse_lastPvpTime:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_lastpvptime()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->lastpvptime().data(), this->lastpvptime().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Proto.Message.ProtoPlayerInfo.lastPvpTime"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(344)) goto parse_reviveCount;
        break;
      }

      // optional uint32 reviveCount = 43;
      case 43: {
        if (tag == 344) {
         parse_reviveCount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &revivecount_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(362)) goto parse_activateTime;
        break;
      }

      // optional string activateTime = 45;
      case 45: {
        if (tag == 362) {
         parse_activateTime:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_activatetime()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->activatetime().data(), this->activatetime().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Proto.Message.ProtoPlayerInfo.activateTime"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(392)) goto parse_armorSuitLevel;
        break;
      }

      // optional uint32 armorSuitLevel = 49;
      case 49: {
        if (tag == 392) {
         parse_armorSuitLevel:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &armorsuitlevel_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(400)) goto parse_stamina;
        break;
      }

      // optional uint32 stamina = 50;
      case 50: {
        if (tag == 400) {
         parse_stamina:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &stamina_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(416)) goto parse_vipLevel;
        break;
      }

      // optional uint32 vipLevel = 52;
      case 52: {
        if (tag == 416) {
         parse_vipLevel:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &viplevel_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(432)) goto parse_buyStaminaCount;
        break;
      }

      // optional uint32 buyStaminaCount = 54;
      case 54: {
        if (tag == 432) {
         parse_buyStaminaCount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &buystaminacount_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(440)) goto parse_buyGoldCount;
        break;
      }

      // optional uint32 buyGoldCount = 55;
      case 55: {
        if (tag == 440) {
         parse_buyGoldCount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &buygoldcount_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(448)) goto parse_refreshShopCount;
        break;
      }

      // optional uint32 refreshShopCount = 56;
      case 56: {
        if (tag == 448) {
         parse_refreshShopCount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &refreshshopcount_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(456)) goto parse_buyTrialCount;
        break;
      }

      // optional uint32 buyTrialCount = 57;
      case 57: {
        if (tag == 456) {
         parse_buyTrialCount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &buytrialcount_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(464)) goto parse_buyPowerCount;
        break;
      }

      // optional uint32 buyPowerCount = 58;
      case 58: {
        if (tag == 464) {
         parse_buyPowerCount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &buypowercount_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(472)) goto parse_eliteCount;
        break;
      }

      // optional uint32 eliteCount = 59;
      case 59: {
        if (tag == 472) {
         parse_eliteCount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &elitecount_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(480)) goto parse_accountType;
        break;
      }

      // optional .Proto.Message.AccountType accountType = 60;
      case 60: {
        if (tag == 480) {
         parse_accountType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_accounttype(static_cast< ::Proto::Message::AccountType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(506)) goto parse_staminaIds;
        break;
      }

      // optional string staminaIds = 63;
      case 63: {
        if (tag == 506) {
         parse_staminaIds:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_staminaids()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->staminaids().data(), this->staminaids().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Proto.Message.ProtoPlayerInfo.staminaIds"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(520)) goto parse_storageSlots;
        break;
      }

      // optional uint32 storageSlots = 65;
      case 65: {
        if (tag == 520) {
         parse_storageSlots:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &storageslots_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(802)) goto parse_serverZoneId;
        break;
      }

      // optional string serverZoneId = 100;
      case 100: {
        if (tag == 802) {
         parse_serverZoneId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_serverzoneid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->serverzoneid().data(), this->serverzoneid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Proto.Message.ProtoPlayerInfo.serverZoneId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Proto.Message.ProtoPlayerInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Proto.Message.ProtoPlayerInfo)
  return false;
#undef DO_
}

void ProtoPlayerInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Proto.Message.ProtoPlayerInfo)
  // optional sint64 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(1, this->id(), output);
  }

  // optional string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Proto.Message.ProtoPlayerInfo.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // optional string userName = 3;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Proto.Message.ProtoPlayerInfo.userName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->username(), output);
  }

  // optional uint32 gold = 4;
  if (this->gold() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->gold(), output);
  }

  // optional uint32 diamond = 5;
  if (this->diamond() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->diamond(), output);
  }

  // optional uint32 point = 6;
  if (this->point() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->point(), output);
  }

  // optional uint32 power = 8;
  if (this->power() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->power(), output);
  }

  // optional uint32 exp = 9;
  if (this->exp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->exp(), output);
  }

  // optional uint32 level = 10;
  if (this->level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->level(), output);
  }

  // optional string avatar = 12;
  if (this->avatar().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->avatar().data(), this->avatar().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Proto.Message.ProtoPlayerInfo.avatar");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->avatar(), output);
  }

  // optional uint32 nextLevelExp = 13;
  if (this->nextlevelexp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->nextlevelexp(), output);
  }

  // optional uint32 skillPoint = 14;
  if (this->skillpoint() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->skillpoint(), output);
  }

  // repeated .Proto.Message.ProtoPlayerItem playerItems = 15;
  for (unsigned int i = 0, n = this->playeritems_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      15, this->playeritems(i), output);
  }

  // repeated .Proto.Message.ProtoPlayerGarage playerGarages = 16;
  for (unsigned int i = 0, n = this->playergarages_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      16, this->playergarages(i), output);
  }

  // optional uint32 sysCharacterId = 17;
  if (this->syscharacterid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(17, this->syscharacterid(), output);
  }

  // optional string lastLoginTime = 26;
  if (this->lastlogintime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->lastlogintime().data(), this->lastlogintime().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Proto.Message.ProtoPlayerInfo.lastLoginTime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      26, this->lastlogintime(), output);
  }

  // optional uint32 flag = 31;
  if (this->flag() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(31, this->flag(), output);
  }

  // optional float battleFire = 32;
  if (this->battlefire() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(32, this->battlefire(), output);
  }

  // optional uint32 newbieProgress = 37;
  if (this->newbieprogress() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(37, this->newbieprogress(), output);
  }

  // optional bool haveNewMail = 39;
  if (this->havenewmail() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(39, this->havenewmail(), output);
  }

  // optional uint32 questScore = 40;
  if (this->questscore() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(40, this->questscore(), output);
  }

  // optional string nextPvpTime = 41;
  if (this->nextpvptime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nextpvptime().data(), this->nextpvptime().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Proto.Message.ProtoPlayerInfo.nextPvpTime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      41, this->nextpvptime(), output);
  }

  // optional string lastPvpTime = 42;
  if (this->lastpvptime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->lastpvptime().data(), this->lastpvptime().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Proto.Message.ProtoPlayerInfo.lastPvpTime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      42, this->lastpvptime(), output);
  }

  // optional uint32 reviveCount = 43;
  if (this->revivecount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(43, this->revivecount(), output);
  }

  // optional string activateTime = 45;
  if (this->activatetime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->activatetime().data(), this->activatetime().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Proto.Message.ProtoPlayerInfo.activateTime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      45, this->activatetime(), output);
  }

  // optional uint32 armorSuitLevel = 49;
  if (this->armorsuitlevel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(49, this->armorsuitlevel(), output);
  }

  // optional uint32 stamina = 50;
  if (this->stamina() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(50, this->stamina(), output);
  }

  // optional uint32 vipLevel = 52;
  if (this->viplevel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(52, this->viplevel(), output);
  }

  // optional uint32 buyStaminaCount = 54;
  if (this->buystaminacount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(54, this->buystaminacount(), output);
  }

  // optional uint32 buyGoldCount = 55;
  if (this->buygoldcount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(55, this->buygoldcount(), output);
  }

  // optional uint32 refreshShopCount = 56;
  if (this->refreshshopcount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(56, this->refreshshopcount(), output);
  }

  // optional uint32 buyTrialCount = 57;
  if (this->buytrialcount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(57, this->buytrialcount(), output);
  }

  // optional uint32 buyPowerCount = 58;
  if (this->buypowercount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(58, this->buypowercount(), output);
  }

  // optional uint32 eliteCount = 59;
  if (this->elitecount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(59, this->elitecount(), output);
  }

  // optional .Proto.Message.AccountType accountType = 60;
  if (this->accounttype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      60, this->accounttype(), output);
  }

  // optional string staminaIds = 63;
  if (this->staminaids().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->staminaids().data(), this->staminaids().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Proto.Message.ProtoPlayerInfo.staminaIds");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      63, this->staminaids(), output);
  }

  // optional uint32 storageSlots = 65;
  if (this->storageslots() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(65, this->storageslots(), output);
  }

  // optional string serverZoneId = 100;
  if (this->serverzoneid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->serverzoneid().data(), this->serverzoneid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Proto.Message.ProtoPlayerInfo.serverZoneId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      100, this->serverzoneid(), output);
  }

  // @@protoc_insertion_point(serialize_end:Proto.Message.ProtoPlayerInfo)
}

int ProtoPlayerInfo::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Proto.Message.ProtoPlayerInfo)
  int total_size = 0;

  // optional sint64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->id());
  }

  // optional string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional string userName = 3;
  if (this->username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  // optional uint32 gold = 4;
  if (this->gold() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->gold());
  }

  // optional uint32 diamond = 5;
  if (this->diamond() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->diamond());
  }

  // optional uint32 point = 6;
  if (this->point() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->point());
  }

  // optional uint32 power = 8;
  if (this->power() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->power());
  }

  // optional uint32 exp = 9;
  if (this->exp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->exp());
  }

  // optional uint32 level = 10;
  if (this->level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->level());
  }

  // optional string avatar = 12;
  if (this->avatar().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->avatar());
  }

  // optional uint32 nextLevelExp = 13;
  if (this->nextlevelexp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->nextlevelexp());
  }

  // optional uint32 skillPoint = 14;
  if (this->skillpoint() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->skillpoint());
  }

  // optional uint32 sysCharacterId = 17;
  if (this->syscharacterid() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->syscharacterid());
  }

  // optional string lastLoginTime = 26;
  if (this->lastlogintime().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->lastlogintime());
  }

  // optional uint32 flag = 31;
  if (this->flag() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->flag());
  }

  // optional float battleFire = 32;
  if (this->battlefire() != 0) {
    total_size += 2 + 4;
  }

  // optional uint32 newbieProgress = 37;
  if (this->newbieprogress() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->newbieprogress());
  }

  // optional bool haveNewMail = 39;
  if (this->havenewmail() != 0) {
    total_size += 2 + 1;
  }

  // optional uint32 questScore = 40;
  if (this->questscore() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->questscore());
  }

  // optional string nextPvpTime = 41;
  if (this->nextpvptime().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nextpvptime());
  }

  // optional string lastPvpTime = 42;
  if (this->lastpvptime().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->lastpvptime());
  }

  // optional uint32 reviveCount = 43;
  if (this->revivecount() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->revivecount());
  }

  // optional string activateTime = 45;
  if (this->activatetime().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->activatetime());
  }

  // optional uint32 armorSuitLevel = 49;
  if (this->armorsuitlevel() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->armorsuitlevel());
  }

  // optional uint32 stamina = 50;
  if (this->stamina() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->stamina());
  }

  // optional uint32 vipLevel = 52;
  if (this->viplevel() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->viplevel());
  }

  // optional uint32 buyStaminaCount = 54;
  if (this->buystaminacount() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->buystaminacount());
  }

  // optional uint32 buyGoldCount = 55;
  if (this->buygoldcount() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->buygoldcount());
  }

  // optional uint32 refreshShopCount = 56;
  if (this->refreshshopcount() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->refreshshopcount());
  }

  // optional uint32 buyTrialCount = 57;
  if (this->buytrialcount() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->buytrialcount());
  }

  // optional uint32 buyPowerCount = 58;
  if (this->buypowercount() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->buypowercount());
  }

  // optional uint32 eliteCount = 59;
  if (this->elitecount() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->elitecount());
  }

  // optional .Proto.Message.AccountType accountType = 60;
  if (this->accounttype() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->accounttype());
  }

  // optional string staminaIds = 63;
  if (this->staminaids().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->staminaids());
  }

  // optional uint32 storageSlots = 65;
  if (this->storageslots() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->storageslots());
  }

  // optional string serverZoneId = 100;
  if (this->serverzoneid().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->serverzoneid());
  }

  // repeated .Proto.Message.ProtoPlayerItem playerItems = 15;
  total_size += 1 * this->playeritems_size();
  for (int i = 0; i < this->playeritems_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->playeritems(i));
  }

  // repeated .Proto.Message.ProtoPlayerGarage playerGarages = 16;
  total_size += 2 * this->playergarages_size();
  for (int i = 0; i < this->playergarages_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->playergarages(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProtoPlayerInfo::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const ProtoPlayerInfo*>(&from));
}

void ProtoPlayerInfo::MergeFrom(const ProtoPlayerInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Proto.Message.ProtoPlayerInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  playeritems_.MergeFrom(from.playeritems_);
  playergarages_.MergeFrom(from.playergarages_);
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.username().size() > 0) {

    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  if (from.gold() != 0) {
    set_gold(from.gold());
  }
  if (from.diamond() != 0) {
    set_diamond(from.diamond());
  }
  if (from.point() != 0) {
    set_point(from.point());
  }
  if (from.power() != 0) {
    set_power(from.power());
  }
  if (from.exp() != 0) {
    set_exp(from.exp());
  }
  if (from.level() != 0) {
    set_level(from.level());
  }
  if (from.avatar().size() > 0) {

    avatar_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.avatar_);
  }
  if (from.nextlevelexp() != 0) {
    set_nextlevelexp(from.nextlevelexp());
  }
  if (from.skillpoint() != 0) {
    set_skillpoint(from.skillpoint());
  }
  if (from.syscharacterid() != 0) {
    set_syscharacterid(from.syscharacterid());
  }
  if (from.lastlogintime().size() > 0) {

    lastlogintime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.lastlogintime_);
  }
  if (from.flag() != 0) {
    set_flag(from.flag());
  }
  if (from.battlefire() != 0) {
    set_battlefire(from.battlefire());
  }
  if (from.newbieprogress() != 0) {
    set_newbieprogress(from.newbieprogress());
  }
  if (from.havenewmail() != 0) {
    set_havenewmail(from.havenewmail());
  }
  if (from.questscore() != 0) {
    set_questscore(from.questscore());
  }
  if (from.nextpvptime().size() > 0) {

    nextpvptime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nextpvptime_);
  }
  if (from.lastpvptime().size() > 0) {

    lastpvptime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.lastpvptime_);
  }
  if (from.revivecount() != 0) {
    set_revivecount(from.revivecount());
  }
  if (from.activatetime().size() > 0) {

    activatetime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.activatetime_);
  }
  if (from.armorsuitlevel() != 0) {
    set_armorsuitlevel(from.armorsuitlevel());
  }
  if (from.stamina() != 0) {
    set_stamina(from.stamina());
  }
  if (from.viplevel() != 0) {
    set_viplevel(from.viplevel());
  }
  if (from.buystaminacount() != 0) {
    set_buystaminacount(from.buystaminacount());
  }
  if (from.buygoldcount() != 0) {
    set_buygoldcount(from.buygoldcount());
  }
  if (from.refreshshopcount() != 0) {
    set_refreshshopcount(from.refreshshopcount());
  }
  if (from.buytrialcount() != 0) {
    set_buytrialcount(from.buytrialcount());
  }
  if (from.buypowercount() != 0) {
    set_buypowercount(from.buypowercount());
  }
  if (from.elitecount() != 0) {
    set_elitecount(from.elitecount());
  }
  if (from.accounttype() != 0) {
    set_accounttype(from.accounttype());
  }
  if (from.staminaids().size() > 0) {

    staminaids_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.staminaids_);
  }
  if (from.storageslots() != 0) {
    set_storageslots(from.storageslots());
  }
  if (from.serverzoneid().size() > 0) {

    serverzoneid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.serverzoneid_);
  }
}

void ProtoPlayerInfo::CopyFrom(const ProtoPlayerInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Proto.Message.ProtoPlayerInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoPlayerInfo::IsInitialized() const {

  return true;
}

void ProtoPlayerInfo::Swap(ProtoPlayerInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProtoPlayerInfo::InternalSwap(ProtoPlayerInfo* other) {
  std::swap(id_, other->id_);
  name_.Swap(&other->name_);
  username_.Swap(&other->username_);
  std::swap(gold_, other->gold_);
  std::swap(diamond_, other->diamond_);
  std::swap(point_, other->point_);
  std::swap(power_, other->power_);
  std::swap(exp_, other->exp_);
  std::swap(level_, other->level_);
  avatar_.Swap(&other->avatar_);
  std::swap(nextlevelexp_, other->nextlevelexp_);
  std::swap(skillpoint_, other->skillpoint_);
  playeritems_.UnsafeArenaSwap(&other->playeritems_);
  playergarages_.UnsafeArenaSwap(&other->playergarages_);
  std::swap(syscharacterid_, other->syscharacterid_);
  lastlogintime_.Swap(&other->lastlogintime_);
  std::swap(flag_, other->flag_);
  std::swap(battlefire_, other->battlefire_);
  std::swap(newbieprogress_, other->newbieprogress_);
  std::swap(havenewmail_, other->havenewmail_);
  std::swap(questscore_, other->questscore_);
  nextpvptime_.Swap(&other->nextpvptime_);
  lastpvptime_.Swap(&other->lastpvptime_);
  std::swap(revivecount_, other->revivecount_);
  activatetime_.Swap(&other->activatetime_);
  std::swap(armorsuitlevel_, other->armorsuitlevel_);
  std::swap(stamina_, other->stamina_);
  std::swap(viplevel_, other->viplevel_);
  std::swap(buystaminacount_, other->buystaminacount_);
  std::swap(buygoldcount_, other->buygoldcount_);
  std::swap(refreshshopcount_, other->refreshshopcount_);
  std::swap(buytrialcount_, other->buytrialcount_);
  std::swap(buypowercount_, other->buypowercount_);
  std::swap(elitecount_, other->elitecount_);
  std::swap(accounttype_, other->accounttype_);
  staminaids_.Swap(&other->staminaids_);
  std::swap(storageslots_, other->storageslots_);
  serverzoneid_.Swap(&other->serverzoneid_);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string ProtoPlayerInfo::GetTypeName() const {
  return "Proto.Message.ProtoPlayerInfo";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ProtoPlayerInfo

// optional sint64 id = 1;
void ProtoPlayerInfo::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 ProtoPlayerInfo::id() const {
  // @@protoc_insertion_point(field_get:Proto.Message.ProtoPlayerInfo.id)
  return id_;
}
 void ProtoPlayerInfo::set_id(::google::protobuf::int64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:Proto.Message.ProtoPlayerInfo.id)
}

// optional string name = 2;
void ProtoPlayerInfo::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ProtoPlayerInfo::name() const {
  // @@protoc_insertion_point(field_get:Proto.Message.ProtoPlayerInfo.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ProtoPlayerInfo::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Proto.Message.ProtoPlayerInfo.name)
}
 void ProtoPlayerInfo::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Proto.Message.ProtoPlayerInfo.name)
}
 void ProtoPlayerInfo::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Proto.Message.ProtoPlayerInfo.name)
}
 ::std::string* ProtoPlayerInfo::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:Proto.Message.ProtoPlayerInfo.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ProtoPlayerInfo::release_name() {
  // @@protoc_insertion_point(field_release:Proto.Message.ProtoPlayerInfo.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ProtoPlayerInfo::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:Proto.Message.ProtoPlayerInfo.name)
}

// optional string userName = 3;
void ProtoPlayerInfo::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ProtoPlayerInfo::username() const {
  // @@protoc_insertion_point(field_get:Proto.Message.ProtoPlayerInfo.userName)
  return username_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ProtoPlayerInfo::set_username(const ::std::string& value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Proto.Message.ProtoPlayerInfo.userName)
}
 void ProtoPlayerInfo::set_username(const char* value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Proto.Message.ProtoPlayerInfo.userName)
}
 void ProtoPlayerInfo::set_username(const char* value, size_t size) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Proto.Message.ProtoPlayerInfo.userName)
}
 ::std::string* ProtoPlayerInfo::mutable_username() {
  
  // @@protoc_insertion_point(field_mutable:Proto.Message.ProtoPlayerInfo.userName)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ProtoPlayerInfo::release_username() {
  // @@protoc_insertion_point(field_release:Proto.Message.ProtoPlayerInfo.userName)
  
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ProtoPlayerInfo::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    
  } else {
    
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:Proto.Message.ProtoPlayerInfo.userName)
}

// optional uint32 gold = 4;
void ProtoPlayerInfo::clear_gold() {
  gold_ = 0u;
}
 ::google::protobuf::uint32 ProtoPlayerInfo::gold() const {
  // @@protoc_insertion_point(field_get:Proto.Message.ProtoPlayerInfo.gold)
  return gold_;
}
 void ProtoPlayerInfo::set_gold(::google::protobuf::uint32 value) {
  
  gold_ = value;
  // @@protoc_insertion_point(field_set:Proto.Message.ProtoPlayerInfo.gold)
}

// optional uint32 diamond = 5;
void ProtoPlayerInfo::clear_diamond() {
  diamond_ = 0u;
}
 ::google::protobuf::uint32 ProtoPlayerInfo::diamond() const {
  // @@protoc_insertion_point(field_get:Proto.Message.ProtoPlayerInfo.diamond)
  return diamond_;
}
 void ProtoPlayerInfo::set_diamond(::google::protobuf::uint32 value) {
  
  diamond_ = value;
  // @@protoc_insertion_point(field_set:Proto.Message.ProtoPlayerInfo.diamond)
}

// optional uint32 point = 6;
void ProtoPlayerInfo::clear_point() {
  point_ = 0u;
}
 ::google::protobuf::uint32 ProtoPlayerInfo::point() const {
  // @@protoc_insertion_point(field_get:Proto.Message.ProtoPlayerInfo.point)
  return point_;
}
 void ProtoPlayerInfo::set_point(::google::protobuf::uint32 value) {
  
  point_ = value;
  // @@protoc_insertion_point(field_set:Proto.Message.ProtoPlayerInfo.point)
}

// optional uint32 power = 8;
void ProtoPlayerInfo::clear_power() {
  power_ = 0u;
}
 ::google::protobuf::uint32 ProtoPlayerInfo::power() const {
  // @@protoc_insertion_point(field_get:Proto.Message.ProtoPlayerInfo.power)
  return power_;
}
 void ProtoPlayerInfo::set_power(::google::protobuf::uint32 value) {
  
  power_ = value;
  // @@protoc_insertion_point(field_set:Proto.Message.ProtoPlayerInfo.power)
}

// optional uint32 exp = 9;
void ProtoPlayerInfo::clear_exp() {
  exp_ = 0u;
}
 ::google::protobuf::uint32 ProtoPlayerInfo::exp() const {
  // @@protoc_insertion_point(field_get:Proto.Message.ProtoPlayerInfo.exp)
  return exp_;
}
 void ProtoPlayerInfo::set_exp(::google::protobuf::uint32 value) {
  
  exp_ = value;
  // @@protoc_insertion_point(field_set:Proto.Message.ProtoPlayerInfo.exp)
}

// optional uint32 level = 10;
void ProtoPlayerInfo::clear_level() {
  level_ = 0u;
}
 ::google::protobuf::uint32 ProtoPlayerInfo::level() const {
  // @@protoc_insertion_point(field_get:Proto.Message.ProtoPlayerInfo.level)
  return level_;
}
 void ProtoPlayerInfo::set_level(::google::protobuf::uint32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:Proto.Message.ProtoPlayerInfo.level)
}

// optional string avatar = 12;
void ProtoPlayerInfo::clear_avatar() {
  avatar_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ProtoPlayerInfo::avatar() const {
  // @@protoc_insertion_point(field_get:Proto.Message.ProtoPlayerInfo.avatar)
  return avatar_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ProtoPlayerInfo::set_avatar(const ::std::string& value) {
  
  avatar_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Proto.Message.ProtoPlayerInfo.avatar)
}
 void ProtoPlayerInfo::set_avatar(const char* value) {
  
  avatar_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Proto.Message.ProtoPlayerInfo.avatar)
}
 void ProtoPlayerInfo::set_avatar(const char* value, size_t size) {
  
  avatar_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Proto.Message.ProtoPlayerInfo.avatar)
}
 ::std::string* ProtoPlayerInfo::mutable_avatar() {
  
  // @@protoc_insertion_point(field_mutable:Proto.Message.ProtoPlayerInfo.avatar)
  return avatar_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ProtoPlayerInfo::release_avatar() {
  // @@protoc_insertion_point(field_release:Proto.Message.ProtoPlayerInfo.avatar)
  
  return avatar_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ProtoPlayerInfo::set_allocated_avatar(::std::string* avatar) {
  if (avatar != NULL) {
    
  } else {
    
  }
  avatar_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), avatar);
  // @@protoc_insertion_point(field_set_allocated:Proto.Message.ProtoPlayerInfo.avatar)
}

// optional uint32 nextLevelExp = 13;
void ProtoPlayerInfo::clear_nextlevelexp() {
  nextlevelexp_ = 0u;
}
 ::google::protobuf::uint32 ProtoPlayerInfo::nextlevelexp() const {
  // @@protoc_insertion_point(field_get:Proto.Message.ProtoPlayerInfo.nextLevelExp)
  return nextlevelexp_;
}
 void ProtoPlayerInfo::set_nextlevelexp(::google::protobuf::uint32 value) {
  
  nextlevelexp_ = value;
  // @@protoc_insertion_point(field_set:Proto.Message.ProtoPlayerInfo.nextLevelExp)
}

// optional uint32 skillPoint = 14;
void ProtoPlayerInfo::clear_skillpoint() {
  skillpoint_ = 0u;
}
 ::google::protobuf::uint32 ProtoPlayerInfo::skillpoint() const {
  // @@protoc_insertion_point(field_get:Proto.Message.ProtoPlayerInfo.skillPoint)
  return skillpoint_;
}
 void ProtoPlayerInfo::set_skillpoint(::google::protobuf::uint32 value) {
  
  skillpoint_ = value;
  // @@protoc_insertion_point(field_set:Proto.Message.ProtoPlayerInfo.skillPoint)
}

// repeated .Proto.Message.ProtoPlayerItem playerItems = 15;
int ProtoPlayerInfo::playeritems_size() const {
  return playeritems_.size();
}
void ProtoPlayerInfo::clear_playeritems() {
  playeritems_.Clear();
}
const ::Proto::Message::ProtoPlayerItem& ProtoPlayerInfo::playeritems(int index) const {
  // @@protoc_insertion_point(field_get:Proto.Message.ProtoPlayerInfo.playerItems)
  return playeritems_.Get(index);
}
::Proto::Message::ProtoPlayerItem* ProtoPlayerInfo::mutable_playeritems(int index) {
  // @@protoc_insertion_point(field_mutable:Proto.Message.ProtoPlayerInfo.playerItems)
  return playeritems_.Mutable(index);
}
::Proto::Message::ProtoPlayerItem* ProtoPlayerInfo::add_playeritems() {
  // @@protoc_insertion_point(field_add:Proto.Message.ProtoPlayerInfo.playerItems)
  return playeritems_.Add();
}
::google::protobuf::RepeatedPtrField< ::Proto::Message::ProtoPlayerItem >*
ProtoPlayerInfo::mutable_playeritems() {
  // @@protoc_insertion_point(field_mutable_list:Proto.Message.ProtoPlayerInfo.playerItems)
  return &playeritems_;
}
const ::google::protobuf::RepeatedPtrField< ::Proto::Message::ProtoPlayerItem >&
ProtoPlayerInfo::playeritems() const {
  // @@protoc_insertion_point(field_list:Proto.Message.ProtoPlayerInfo.playerItems)
  return playeritems_;
}

// repeated .Proto.Message.ProtoPlayerGarage playerGarages = 16;
int ProtoPlayerInfo::playergarages_size() const {
  return playergarages_.size();
}
void ProtoPlayerInfo::clear_playergarages() {
  playergarages_.Clear();
}
const ::Proto::Message::ProtoPlayerGarage& ProtoPlayerInfo::playergarages(int index) const {
  // @@protoc_insertion_point(field_get:Proto.Message.ProtoPlayerInfo.playerGarages)
  return playergarages_.Get(index);
}
::Proto::Message::ProtoPlayerGarage* ProtoPlayerInfo::mutable_playergarages(int index) {
  // @@protoc_insertion_point(field_mutable:Proto.Message.ProtoPlayerInfo.playerGarages)
  return playergarages_.Mutable(index);
}
::Proto::Message::ProtoPlayerGarage* ProtoPlayerInfo::add_playergarages() {
  // @@protoc_insertion_point(field_add:Proto.Message.ProtoPlayerInfo.playerGarages)
  return playergarages_.Add();
}
::google::protobuf::RepeatedPtrField< ::Proto::Message::ProtoPlayerGarage >*
ProtoPlayerInfo::mutable_playergarages() {
  // @@protoc_insertion_point(field_mutable_list:Proto.Message.ProtoPlayerInfo.playerGarages)
  return &playergarages_;
}
const ::google::protobuf::RepeatedPtrField< ::Proto::Message::ProtoPlayerGarage >&
ProtoPlayerInfo::playergarages() const {
  // @@protoc_insertion_point(field_list:Proto.Message.ProtoPlayerInfo.playerGarages)
  return playergarages_;
}

// optional uint32 sysCharacterId = 17;
void ProtoPlayerInfo::clear_syscharacterid() {
  syscharacterid_ = 0u;
}
 ::google::protobuf::uint32 ProtoPlayerInfo::syscharacterid() const {
  // @@protoc_insertion_point(field_get:Proto.Message.ProtoPlayerInfo.sysCharacterId)
  return syscharacterid_;
}
 void ProtoPlayerInfo::set_syscharacterid(::google::protobuf::uint32 value) {
  
  syscharacterid_ = value;
  // @@protoc_insertion_point(field_set:Proto.Message.ProtoPlayerInfo.sysCharacterId)
}

// optional string lastLoginTime = 26;
void ProtoPlayerInfo::clear_lastlogintime() {
  lastlogintime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ProtoPlayerInfo::lastlogintime() const {
  // @@protoc_insertion_point(field_get:Proto.Message.ProtoPlayerInfo.lastLoginTime)
  return lastlogintime_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ProtoPlayerInfo::set_lastlogintime(const ::std::string& value) {
  
  lastlogintime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Proto.Message.ProtoPlayerInfo.lastLoginTime)
}
 void ProtoPlayerInfo::set_lastlogintime(const char* value) {
  
  lastlogintime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Proto.Message.ProtoPlayerInfo.lastLoginTime)
}
 void ProtoPlayerInfo::set_lastlogintime(const char* value, size_t size) {
  
  lastlogintime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Proto.Message.ProtoPlayerInfo.lastLoginTime)
}
 ::std::string* ProtoPlayerInfo::mutable_lastlogintime() {
  
  // @@protoc_insertion_point(field_mutable:Proto.Message.ProtoPlayerInfo.lastLoginTime)
  return lastlogintime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ProtoPlayerInfo::release_lastlogintime() {
  // @@protoc_insertion_point(field_release:Proto.Message.ProtoPlayerInfo.lastLoginTime)
  
  return lastlogintime_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ProtoPlayerInfo::set_allocated_lastlogintime(::std::string* lastlogintime) {
  if (lastlogintime != NULL) {
    
  } else {
    
  }
  lastlogintime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), lastlogintime);
  // @@protoc_insertion_point(field_set_allocated:Proto.Message.ProtoPlayerInfo.lastLoginTime)
}

// optional uint32 flag = 31;
void ProtoPlayerInfo::clear_flag() {
  flag_ = 0u;
}
 ::google::protobuf::uint32 ProtoPlayerInfo::flag() const {
  // @@protoc_insertion_point(field_get:Proto.Message.ProtoPlayerInfo.flag)
  return flag_;
}
 void ProtoPlayerInfo::set_flag(::google::protobuf::uint32 value) {
  
  flag_ = value;
  // @@protoc_insertion_point(field_set:Proto.Message.ProtoPlayerInfo.flag)
}

// optional float battleFire = 32;
void ProtoPlayerInfo::clear_battlefire() {
  battlefire_ = 0;
}
 float ProtoPlayerInfo::battlefire() const {
  // @@protoc_insertion_point(field_get:Proto.Message.ProtoPlayerInfo.battleFire)
  return battlefire_;
}
 void ProtoPlayerInfo::set_battlefire(float value) {
  
  battlefire_ = value;
  // @@protoc_insertion_point(field_set:Proto.Message.ProtoPlayerInfo.battleFire)
}

// optional uint32 newbieProgress = 37;
void ProtoPlayerInfo::clear_newbieprogress() {
  newbieprogress_ = 0u;
}
 ::google::protobuf::uint32 ProtoPlayerInfo::newbieprogress() const {
  // @@protoc_insertion_point(field_get:Proto.Message.ProtoPlayerInfo.newbieProgress)
  return newbieprogress_;
}
 void ProtoPlayerInfo::set_newbieprogress(::google::protobuf::uint32 value) {
  
  newbieprogress_ = value;
  // @@protoc_insertion_point(field_set:Proto.Message.ProtoPlayerInfo.newbieProgress)
}

// optional bool haveNewMail = 39;
void ProtoPlayerInfo::clear_havenewmail() {
  havenewmail_ = false;
}
 bool ProtoPlayerInfo::havenewmail() const {
  // @@protoc_insertion_point(field_get:Proto.Message.ProtoPlayerInfo.haveNewMail)
  return havenewmail_;
}
 void ProtoPlayerInfo::set_havenewmail(bool value) {
  
  havenewmail_ = value;
  // @@protoc_insertion_point(field_set:Proto.Message.ProtoPlayerInfo.haveNewMail)
}

// optional uint32 questScore = 40;
void ProtoPlayerInfo::clear_questscore() {
  questscore_ = 0u;
}
 ::google::protobuf::uint32 ProtoPlayerInfo::questscore() const {
  // @@protoc_insertion_point(field_get:Proto.Message.ProtoPlayerInfo.questScore)
  return questscore_;
}
 void ProtoPlayerInfo::set_questscore(::google::protobuf::uint32 value) {
  
  questscore_ = value;
  // @@protoc_insertion_point(field_set:Proto.Message.ProtoPlayerInfo.questScore)
}

// optional string nextPvpTime = 41;
void ProtoPlayerInfo::clear_nextpvptime() {
  nextpvptime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ProtoPlayerInfo::nextpvptime() const {
  // @@protoc_insertion_point(field_get:Proto.Message.ProtoPlayerInfo.nextPvpTime)
  return nextpvptime_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ProtoPlayerInfo::set_nextpvptime(const ::std::string& value) {
  
  nextpvptime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Proto.Message.ProtoPlayerInfo.nextPvpTime)
}
 void ProtoPlayerInfo::set_nextpvptime(const char* value) {
  
  nextpvptime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Proto.Message.ProtoPlayerInfo.nextPvpTime)
}
 void ProtoPlayerInfo::set_nextpvptime(const char* value, size_t size) {
  
  nextpvptime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Proto.Message.ProtoPlayerInfo.nextPvpTime)
}
 ::std::string* ProtoPlayerInfo::mutable_nextpvptime() {
  
  // @@protoc_insertion_point(field_mutable:Proto.Message.ProtoPlayerInfo.nextPvpTime)
  return nextpvptime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ProtoPlayerInfo::release_nextpvptime() {
  // @@protoc_insertion_point(field_release:Proto.Message.ProtoPlayerInfo.nextPvpTime)
  
  return nextpvptime_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ProtoPlayerInfo::set_allocated_nextpvptime(::std::string* nextpvptime) {
  if (nextpvptime != NULL) {
    
  } else {
    
  }
  nextpvptime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nextpvptime);
  // @@protoc_insertion_point(field_set_allocated:Proto.Message.ProtoPlayerInfo.nextPvpTime)
}

// optional string lastPvpTime = 42;
void ProtoPlayerInfo::clear_lastpvptime() {
  lastpvptime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ProtoPlayerInfo::lastpvptime() const {
  // @@protoc_insertion_point(field_get:Proto.Message.ProtoPlayerInfo.lastPvpTime)
  return lastpvptime_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ProtoPlayerInfo::set_lastpvptime(const ::std::string& value) {
  
  lastpvptime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Proto.Message.ProtoPlayerInfo.lastPvpTime)
}
 void ProtoPlayerInfo::set_lastpvptime(const char* value) {
  
  lastpvptime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Proto.Message.ProtoPlayerInfo.lastPvpTime)
}
 void ProtoPlayerInfo::set_lastpvptime(const char* value, size_t size) {
  
  lastpvptime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Proto.Message.ProtoPlayerInfo.lastPvpTime)
}
 ::std::string* ProtoPlayerInfo::mutable_lastpvptime() {
  
  // @@protoc_insertion_point(field_mutable:Proto.Message.ProtoPlayerInfo.lastPvpTime)
  return lastpvptime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ProtoPlayerInfo::release_lastpvptime() {
  // @@protoc_insertion_point(field_release:Proto.Message.ProtoPlayerInfo.lastPvpTime)
  
  return lastpvptime_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ProtoPlayerInfo::set_allocated_lastpvptime(::std::string* lastpvptime) {
  if (lastpvptime != NULL) {
    
  } else {
    
  }
  lastpvptime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), lastpvptime);
  // @@protoc_insertion_point(field_set_allocated:Proto.Message.ProtoPlayerInfo.lastPvpTime)
}

// optional uint32 reviveCount = 43;
void ProtoPlayerInfo::clear_revivecount() {
  revivecount_ = 0u;
}
 ::google::protobuf::uint32 ProtoPlayerInfo::revivecount() const {
  // @@protoc_insertion_point(field_get:Proto.Message.ProtoPlayerInfo.reviveCount)
  return revivecount_;
}
 void ProtoPlayerInfo::set_revivecount(::google::protobuf::uint32 value) {
  
  revivecount_ = value;
  // @@protoc_insertion_point(field_set:Proto.Message.ProtoPlayerInfo.reviveCount)
}

// optional string activateTime = 45;
void ProtoPlayerInfo::clear_activatetime() {
  activatetime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ProtoPlayerInfo::activatetime() const {
  // @@protoc_insertion_point(field_get:Proto.Message.ProtoPlayerInfo.activateTime)
  return activatetime_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ProtoPlayerInfo::set_activatetime(const ::std::string& value) {
  
  activatetime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Proto.Message.ProtoPlayerInfo.activateTime)
}
 void ProtoPlayerInfo::set_activatetime(const char* value) {
  
  activatetime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Proto.Message.ProtoPlayerInfo.activateTime)
}
 void ProtoPlayerInfo::set_activatetime(const char* value, size_t size) {
  
  activatetime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Proto.Message.ProtoPlayerInfo.activateTime)
}
 ::std::string* ProtoPlayerInfo::mutable_activatetime() {
  
  // @@protoc_insertion_point(field_mutable:Proto.Message.ProtoPlayerInfo.activateTime)
  return activatetime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ProtoPlayerInfo::release_activatetime() {
  // @@protoc_insertion_point(field_release:Proto.Message.ProtoPlayerInfo.activateTime)
  
  return activatetime_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ProtoPlayerInfo::set_allocated_activatetime(::std::string* activatetime) {
  if (activatetime != NULL) {
    
  } else {
    
  }
  activatetime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), activatetime);
  // @@protoc_insertion_point(field_set_allocated:Proto.Message.ProtoPlayerInfo.activateTime)
}

// optional uint32 armorSuitLevel = 49;
void ProtoPlayerInfo::clear_armorsuitlevel() {
  armorsuitlevel_ = 0u;
}
 ::google::protobuf::uint32 ProtoPlayerInfo::armorsuitlevel() const {
  // @@protoc_insertion_point(field_get:Proto.Message.ProtoPlayerInfo.armorSuitLevel)
  return armorsuitlevel_;
}
 void ProtoPlayerInfo::set_armorsuitlevel(::google::protobuf::uint32 value) {
  
  armorsuitlevel_ = value;
  // @@protoc_insertion_point(field_set:Proto.Message.ProtoPlayerInfo.armorSuitLevel)
}

// optional uint32 stamina = 50;
void ProtoPlayerInfo::clear_stamina() {
  stamina_ = 0u;
}
 ::google::protobuf::uint32 ProtoPlayerInfo::stamina() const {
  // @@protoc_insertion_point(field_get:Proto.Message.ProtoPlayerInfo.stamina)
  return stamina_;
}
 void ProtoPlayerInfo::set_stamina(::google::protobuf::uint32 value) {
  
  stamina_ = value;
  // @@protoc_insertion_point(field_set:Proto.Message.ProtoPlayerInfo.stamina)
}

// optional uint32 vipLevel = 52;
void ProtoPlayerInfo::clear_viplevel() {
  viplevel_ = 0u;
}
 ::google::protobuf::uint32 ProtoPlayerInfo::viplevel() const {
  // @@protoc_insertion_point(field_get:Proto.Message.ProtoPlayerInfo.vipLevel)
  return viplevel_;
}
 void ProtoPlayerInfo::set_viplevel(::google::protobuf::uint32 value) {
  
  viplevel_ = value;
  // @@protoc_insertion_point(field_set:Proto.Message.ProtoPlayerInfo.vipLevel)
}

// optional uint32 buyStaminaCount = 54;
void ProtoPlayerInfo::clear_buystaminacount() {
  buystaminacount_ = 0u;
}
 ::google::protobuf::uint32 ProtoPlayerInfo::buystaminacount() const {
  // @@protoc_insertion_point(field_get:Proto.Message.ProtoPlayerInfo.buyStaminaCount)
  return buystaminacount_;
}
 void ProtoPlayerInfo::set_buystaminacount(::google::protobuf::uint32 value) {
  
  buystaminacount_ = value;
  // @@protoc_insertion_point(field_set:Proto.Message.ProtoPlayerInfo.buyStaminaCount)
}

// optional uint32 buyGoldCount = 55;
void ProtoPlayerInfo::clear_buygoldcount() {
  buygoldcount_ = 0u;
}
 ::google::protobuf::uint32 ProtoPlayerInfo::buygoldcount() const {
  // @@protoc_insertion_point(field_get:Proto.Message.ProtoPlayerInfo.buyGoldCount)
  return buygoldcount_;
}
 void ProtoPlayerInfo::set_buygoldcount(::google::protobuf::uint32 value) {
  
  buygoldcount_ = value;
  // @@protoc_insertion_point(field_set:Proto.Message.ProtoPlayerInfo.buyGoldCount)
}

// optional uint32 refreshShopCount = 56;
void ProtoPlayerInfo::clear_refreshshopcount() {
  refreshshopcount_ = 0u;
}
 ::google::protobuf::uint32 ProtoPlayerInfo::refreshshopcount() const {
  // @@protoc_insertion_point(field_get:Proto.Message.ProtoPlayerInfo.refreshShopCount)
  return refreshshopcount_;
}
 void ProtoPlayerInfo::set_refreshshopcount(::google::protobuf::uint32 value) {
  
  refreshshopcount_ = value;
  // @@protoc_insertion_point(field_set:Proto.Message.ProtoPlayerInfo.refreshShopCount)
}

// optional uint32 buyTrialCount = 57;
void ProtoPlayerInfo::clear_buytrialcount() {
  buytrialcount_ = 0u;
}
 ::google::protobuf::uint32 ProtoPlayerInfo::buytrialcount() const {
  // @@protoc_insertion_point(field_get:Proto.Message.ProtoPlayerInfo.buyTrialCount)
  return buytrialcount_;
}
 void ProtoPlayerInfo::set_buytrialcount(::google::protobuf::uint32 value) {
  
  buytrialcount_ = value;
  // @@protoc_insertion_point(field_set:Proto.Message.ProtoPlayerInfo.buyTrialCount)
}

// optional uint32 buyPowerCount = 58;
void ProtoPlayerInfo::clear_buypowercount() {
  buypowercount_ = 0u;
}
 ::google::protobuf::uint32 ProtoPlayerInfo::buypowercount() const {
  // @@protoc_insertion_point(field_get:Proto.Message.ProtoPlayerInfo.buyPowerCount)
  return buypowercount_;
}
 void ProtoPlayerInfo::set_buypowercount(::google::protobuf::uint32 value) {
  
  buypowercount_ = value;
  // @@protoc_insertion_point(field_set:Proto.Message.ProtoPlayerInfo.buyPowerCount)
}

// optional uint32 eliteCount = 59;
void ProtoPlayerInfo::clear_elitecount() {
  elitecount_ = 0u;
}
 ::google::protobuf::uint32 ProtoPlayerInfo::elitecount() const {
  // @@protoc_insertion_point(field_get:Proto.Message.ProtoPlayerInfo.eliteCount)
  return elitecount_;
}
 void ProtoPlayerInfo::set_elitecount(::google::protobuf::uint32 value) {
  
  elitecount_ = value;
  // @@protoc_insertion_point(field_set:Proto.Message.ProtoPlayerInfo.eliteCount)
}

// optional .Proto.Message.AccountType accountType = 60;
void ProtoPlayerInfo::clear_accounttype() {
  accounttype_ = 0;
}
 ::Proto::Message::AccountType ProtoPlayerInfo::accounttype() const {
  // @@protoc_insertion_point(field_get:Proto.Message.ProtoPlayerInfo.accountType)
  return static_cast< ::Proto::Message::AccountType >(accounttype_);
}
 void ProtoPlayerInfo::set_accounttype(::Proto::Message::AccountType value) {
  
  accounttype_ = value;
  // @@protoc_insertion_point(field_set:Proto.Message.ProtoPlayerInfo.accountType)
}

// optional string staminaIds = 63;
void ProtoPlayerInfo::clear_staminaids() {
  staminaids_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ProtoPlayerInfo::staminaids() const {
  // @@protoc_insertion_point(field_get:Proto.Message.ProtoPlayerInfo.staminaIds)
  return staminaids_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ProtoPlayerInfo::set_staminaids(const ::std::string& value) {
  
  staminaids_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Proto.Message.ProtoPlayerInfo.staminaIds)
}
 void ProtoPlayerInfo::set_staminaids(const char* value) {
  
  staminaids_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Proto.Message.ProtoPlayerInfo.staminaIds)
}
 void ProtoPlayerInfo::set_staminaids(const char* value, size_t size) {
  
  staminaids_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Proto.Message.ProtoPlayerInfo.staminaIds)
}
 ::std::string* ProtoPlayerInfo::mutable_staminaids() {
  
  // @@protoc_insertion_point(field_mutable:Proto.Message.ProtoPlayerInfo.staminaIds)
  return staminaids_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ProtoPlayerInfo::release_staminaids() {
  // @@protoc_insertion_point(field_release:Proto.Message.ProtoPlayerInfo.staminaIds)
  
  return staminaids_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ProtoPlayerInfo::set_allocated_staminaids(::std::string* staminaids) {
  if (staminaids != NULL) {
    
  } else {
    
  }
  staminaids_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), staminaids);
  // @@protoc_insertion_point(field_set_allocated:Proto.Message.ProtoPlayerInfo.staminaIds)
}

// optional uint32 storageSlots = 65;
void ProtoPlayerInfo::clear_storageslots() {
  storageslots_ = 0u;
}
 ::google::protobuf::uint32 ProtoPlayerInfo::storageslots() const {
  // @@protoc_insertion_point(field_get:Proto.Message.ProtoPlayerInfo.storageSlots)
  return storageslots_;
}
 void ProtoPlayerInfo::set_storageslots(::google::protobuf::uint32 value) {
  
  storageslots_ = value;
  // @@protoc_insertion_point(field_set:Proto.Message.ProtoPlayerInfo.storageSlots)
}

// optional string serverZoneId = 100;
void ProtoPlayerInfo::clear_serverzoneid() {
  serverzoneid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ProtoPlayerInfo::serverzoneid() const {
  // @@protoc_insertion_point(field_get:Proto.Message.ProtoPlayerInfo.serverZoneId)
  return serverzoneid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ProtoPlayerInfo::set_serverzoneid(const ::std::string& value) {
  
  serverzoneid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Proto.Message.ProtoPlayerInfo.serverZoneId)
}
 void ProtoPlayerInfo::set_serverzoneid(const char* value) {
  
  serverzoneid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Proto.Message.ProtoPlayerInfo.serverZoneId)
}
 void ProtoPlayerInfo::set_serverzoneid(const char* value, size_t size) {
  
  serverzoneid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Proto.Message.ProtoPlayerInfo.serverZoneId)
}
 ::std::string* ProtoPlayerInfo::mutable_serverzoneid() {
  
  // @@protoc_insertion_point(field_mutable:Proto.Message.ProtoPlayerInfo.serverZoneId)
  return serverzoneid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ProtoPlayerInfo::release_serverzoneid() {
  // @@protoc_insertion_point(field_release:Proto.Message.ProtoPlayerInfo.serverZoneId)
  
  return serverzoneid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ProtoPlayerInfo::set_allocated_serverzoneid(::std::string* serverzoneid) {
  if (serverzoneid != NULL) {
    
  } else {
    
  }
  serverzoneid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), serverzoneid);
  // @@protoc_insertion_point(field_set_allocated:Proto.Message.ProtoPlayerInfo.serverZoneId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace Message
}  // namespace Proto

// @@protoc_insertion_point(global_scope)
